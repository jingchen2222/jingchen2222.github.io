{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/images/mahadun.png","path":"images/mahadun.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1537452515000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1537452515000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1537452515000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1537452515000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1537452515000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1537452515000},{"_id":"themes/next/_config.yml","hash":"15a88818117172913c2c74283342dad380b8ac25","modified":1537591522000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1537452515000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1537452515000},{"_id":"themes/next/bower.json","hash":"023b5b945bc45c205129a18e26d304fb9caa15c7","modified":1537452515000},{"_id":"themes/next/package.json","hash":"0d43e71169c5e08917e73cd12aa79562c836712e","modified":1537452515000},{"_id":"themes/next/gulpfile.coffee","hash":"d267332ec1461042fb16a9cb0737e1555fb4b79e","modified":1537452515000},{"_id":"source/categories/index.md","hash":"44071ab45e1c844c1bbd5bdb6e2520844a532a77","modified":1537588195000},{"_id":"source/tags/index.md","hash":"a28ced2fb7ddb1f11a2950bc9d7cf7cf29978bc7","modified":1537587729000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1537452515000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1537452515000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1537452515000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"070e1d906aea702c1f1b97965e179a17e0fab101","modified":1537452515000},{"_id":"themes/next/.git/ORIG_HEAD","hash":"d6c22a05113bbbce7488f021e3b6950149e5c281","modified":1537452515000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1537452515000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1537452515000},{"_id":"themes/next/.git/index","hash":"8a5437de1aff9488ff59cfa1026cdcfeae7a3e7b","modified":1537590724000},{"_id":"themes/next/.git/packed-refs","hash":"243bd8ada9526c51366f18d4e63883e562312bcb","modified":1537452515000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1537452515000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1537452515000},{"_id":"themes/next/languages/en.yml","hash":"63de36e9f5822084b61b03a507f6246f8f962b3f","modified":1537452515000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1537452515000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1537452515000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1537452515000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1537452515000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1537452515000},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1537452515000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1537452515000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"ed36a28104f3c185fc4a0b3e52071d0efabe168c","modified":1537452515000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1537452515000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1537452515000},{"_id":"themes/next/layout/_layout.swig","hash":"627aa021dd052d3700e84f8c2eeabd4e30989158","modified":1537452515000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1537452515000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1537452515000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1537452515000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1537452515000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1537452515000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1537452515000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1537452515000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1537452515000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1537452515000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1537452515000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1537452515000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"source/_posts/ProgramStudy/scala-for-impatients-ch2.markdown","hash":"d51622b3946e697c1ec8c3e7b66d8b9e5cee1f27","modified":1537589793000},{"_id":"source/_posts/ProgramStudy/typingsinstall.markdown","hash":"160156192eaf0ed1abdc61ab3e4dfa658c0fdd61","modified":1537589710000},{"_id":"source/_posts/ProgramStudy/scala-for-impatients-ch4.markdown","hash":"a054266aacbbbe7757647c87be3ac6a8480d3ad6","modified":1537589787000},{"_id":"source/_posts/tools/2016-11-06-hexo1.markdown","hash":"1835147803614a66bbfadf7fd79bfd26c641eef5","modified":1537589735000},{"_id":"source/_posts/ProgramStudy/scala-for-impatients-ch3.markdown","hash":"ee622353b970b0c7bd07fd79c5112c8a87ea44bf","modified":1537589791000},{"_id":"source/_posts/tools/geeknote.md","hash":"6e5398b6223f56c08f249b64dac91d18e0969aa4","modified":1537590687000},{"_id":"source/_posts/tools/markdown_syntax_help.md","hash":"2df25599bd0f4942bf33bb06a83e9e97d035c5e0","modified":1537451270000},{"_id":"source/_posts/tools/swagger-convert-wiki-md.md","hash":"cbed0f54728cca3e359071d0b5245a5b7fb69ada","modified":1537451270000},{"_id":"source/_posts/读书笔记/关于无效的碎片思考.md","hash":"08800f49430a2edf965c52504b0d7737928156f7","modified":1537452667000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1537452515000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1537452515000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1537452515000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1537452515000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1537452515000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1537452515000},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1537452515000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1537452515000},{"_id":"themes/next/.git/logs/HEAD","hash":"37b2762be2a3b6f48bea4cb07d66fbd3368547ea","modified":1537452515000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1537452515000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1537452515000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"bc311e9f4333188da5c9c721ae467ba14410d5b2","modified":1537452515000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1537452515000},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"edda627c96332c35809b0f48d5d3947b10bca551","modified":1537590265000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1537452515000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1537452515000},{"_id":"themes/next/layout/_macro/post.swig","hash":"112c0c4599b7c14fb67c40e2302c70ba1d4efc13","modified":1537590539000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"ff1a73ae3bc0e3d85fd2218a0e5350304b893623","modified":1537452515000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"084867c289c95c5ebc18435a3b2092091bb8e2ba","modified":1537452515000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1537452515000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1537452515000},{"_id":"themes/next/layout/_partials/head.swig","hash":"06b6604176367af52587312e2575b52ecf53c3d9","modified":1537452515000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1537452515000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1537452515000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1537452515000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1537452515000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1537452515000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1537452515000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1537452515000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537452515000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537452515000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537452515000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537452515000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537452515000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537452515000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537452515000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537452515000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537452515000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537452515000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537452515000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537452515000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537452515000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1537452515000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1537452515000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1537452515000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537452515000},{"_id":"source/_posts/ProgramStudy/JAVA/list.markdown","hash":"20a4e1df8fd6e6529eb50d05d819803addd27455","modified":1537589633000},{"_id":"source/_posts/ProgramStudy/JAVA/serialization.md","hash":"1b7950db2cc544a643b9fca43c86a6d1fb8f8ff9","modified":1537589626000},{"_id":"themes/next/.git/refs/heads/master","hash":"d6c22a05113bbbce7488f021e3b6950149e5c281","modified":1537452515000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1537452515000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1537452515000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1537452515000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1537452515000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1537452515000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1537452515000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1537452515000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1537452515000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1537452515000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"dc8023c524594b6b85905c776899f5f53973577f","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1537452515000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1537452515000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1537452515000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1537452515000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1537452515000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1537452515000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1537452515000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1537452515000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1537452515000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1537452515000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1537452515000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1537452515000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1537452515000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1537452515000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1537452515000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1537452515000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1537452515000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1537452515000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1537452515000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1537452515000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1537452515000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1537452515000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1537452515000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537452515000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1537452515000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537452515000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1537452515000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537452515000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1537452515000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1537452515000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537452515000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"37b2762be2a3b6f48bea4cb07d66fbd3368547ea","modified":1537452515000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1537452515000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3065c1bcb54da1e0018136595741341ac71ef9e7","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1537452515000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1537452515000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1537452515000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1537452515000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1537452515000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1537452515000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c3c35d623744bf7a471dd68db6258a3271f1a1dd","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1537452515000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1537452515000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537452515000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537452515000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1537452515000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537452515000},{"_id":"themes/next/.git/objects/pack/pack-d7f9900e407f50cf6854c435d4f274ead2f5117b.idx","hash":"f4a5ac1fe0329243bf6b253a0ea4691d0afe924c","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1537452515000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1537452515000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"37b2762be2a3b6f48bea4cb07d66fbd3368547ea","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"d23db2f598b8eb274680023745ba6d6d466cd84a","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"ffc850397129a85102295b9d5eb0fb545f909b40","modified":1537590388000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8b00cd759e1dfd782619bfd22dbbcacfc0d2a033","modified":1537590626000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1537452515000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1537452515000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1537452515000},{"_id":"themes/next/source/images/mahadun.png","hash":"bf902896bb7e0080875e98f6ae9b8e10cd8aaada","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1537452515000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1537452515000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1537452515000},{"_id":"themes/next/.git/objects/pack/pack-d7f9900e407f50cf6854c435d4f274ead2f5117b.pack","hash":"d7c2c82c7ad561df7778869a4aed0b762d416269","modified":1537452515000},{"_id":"public/categories/index.html","hash":"fdc4522cb07e20ef74605f3abe2d676c418d1707","modified":1537612373972},{"_id":"public/tags/index.html","hash":"ce5e0de5a79f0cbb918d03b7f79fc392e6ec1fd9","modified":1537612373973},{"_id":"public/archives/page/2/index.html","hash":"0283818e8e029b904ff830e5f94fe5a5fe71c58c","modified":1537612373973},{"_id":"public/archives/2016/index.html","hash":"294ce930f879dfbbd6ee63b5e37233414a625af4","modified":1537612373973},{"_id":"public/archives/2016/11/index.html","hash":"9c244d05fd6fefaf811897c042c7e4683acd374b","modified":1537612373973},{"_id":"public/archives/2017/index.html","hash":"47f1711c0f61e2addec13eed59ff8f2e7f8a1e85","modified":1537612373973},{"_id":"public/archives/2017/03/index.html","hash":"14e60802427e23727e9c00052ffd818b9eb4e7e9","modified":1537612373973},{"_id":"public/archives/2018/index.html","hash":"b0cd2aa9556e9c9a72bd5360743c64b8c41039f4","modified":1537612373973},{"_id":"public/archives/2018/09/index.html","hash":"5d9053ba7724642237f2264be70427593c5e1955","modified":1537612373973},{"_id":"public/tags/读书笔记/index.html","hash":"1534f42ad0ece24a0b4e30d6f92f73ea54665fdf","modified":1537612373974},{"_id":"public/tags/book-Scala-for-impatients/index.html","hash":"898a3eafe918721dbacbbec4b74ac01825540ed9","modified":1537612373974},{"_id":"public/tags/scala/index.html","hash":"81f9d43fba74f0ab75a2a1c7b7ee4562f7dd3519","modified":1537612373974},{"_id":"public/tags/Angular2/index.html","hash":"798e4e9555b31115c7f4bfaeb78871962eea9a83","modified":1537612373974},{"_id":"public/tags/Typings/index.html","hash":"1f251edef484233084ef536c75ae08ab29a578a6","modified":1537612373974},{"_id":"public/tags/nodeJs/index.html","hash":"5d39262b4677996ae8c42c24749d0ac0d67725bc","modified":1537612373974},{"_id":"public/tags/Tool/index.html","hash":"24690b3d1715fe276744235b8006b35f97f4e935","modified":1537612373974},{"_id":"public/tags/Hexo/index.html","hash":"26ed18fb8d8098aa3e1a179cb28e3f5970a8f8fc","modified":1537612373974},{"_id":"public/tags/evernote/index.html","hash":"21857d3a6727dd2de9fbcc2afc6aa7d4f2d75271","modified":1537612373974},{"_id":"public/tags/hexo/index.html","hash":"a54d83d61434ff0053c0fdeb7ba4cd127973a304","modified":1537612373974},{"_id":"public/tags/swagger/index.html","hash":"dde937aa45be5290545208d8abde0c29417b249d","modified":1537612373974},{"_id":"public/tags/思考/index.html","hash":"15cc5e0d29cf8096436588a15bfa24886212cbaa","modified":1537612373974},{"_id":"public/tags/java/index.html","hash":"10580d5b6afaeaef52c8308fad5bf25259706779","modified":1537612373974},{"_id":"public/tags/collection/index.html","hash":"1e9483f7c8084e628b48036b07ed48a650f3db2c","modified":1537612373974},{"_id":"public/tags/tech/index.html","hash":"0a1687c08fbaf713c436e7e17c0c6136b339acc8","modified":1537612373974},{"_id":"public/tags/Java/index.html","hash":"8983d45f3e21f76307546423fa7b950d5ac69cbf","modified":1537612373974},{"_id":"public/tags/基础/index.html","hash":"8ebb5f15e88d1dfe7759df1de8e1a9cda44c3429","modified":1537612373974},{"_id":"public/tags/Serializable/index.html","hash":"23c5b8ecab2f74ed4413e125f5e4633781207102","modified":1537612373974},{"_id":"public/categories/Study/index.html","hash":"544a8b521c74e964ecde9ea06818532969eaea53","modified":1537612373974},{"_id":"public/categories/Tool/index.html","hash":"b3a870e3d9f06cfbdab6359128419d4ce65dc8b3","modified":1537612373974},{"_id":"public/categories/Study/Scala/index.html","hash":"d7b8f8e0d7c3eca8fa3b6e1c20395ef1bf85ec25","modified":1537612373974},{"_id":"public/categories/Study/前端/index.html","hash":"509d587e46ec47de65d9c9f7172a48ffac024efe","modified":1537612373974},{"_id":"public/categories/读书笔记/index.html","hash":"f1955497d56380d3b9b0593e3507bdceebb2f123","modified":1537612373974},{"_id":"public/categories/Study/Java/index.html","hash":"f98466d0362b9b91076c7c70cd39811f4a4a0621","modified":1537612373974},{"_id":"public/page/2/index.html","hash":"b6745d268f027cc8ef4f0813ca9ef4ce5956edb3","modified":1537612373974},{"_id":"public/2018/09/20/tools/geeknote/index.html","hash":"60493a66e9556faf3e3fbe80322615a3f4a8940f","modified":1537612373974},{"_id":"public/2018/09/19/读书笔记/关于无效的碎片思考/index.html","hash":"fbb9281611ef38fd71023cfbbf1c492d76b096cd","modified":1537612373974},{"_id":"public/2018/09/18/ProgramStudy/JAVA/serialization/index.html","hash":"432619fc88ec66a2c8d38f23b1f39bb463214c65","modified":1537612373974},{"_id":"public/2018/09/18/tools/swagger-convert-wiki-md/index.html","hash":"bdc822d81c02111fe7c281400370c040bd314300","modified":1537612373975},{"_id":"public/2018/09/01/ProgramStudy/JAVA/list/index.html","hash":"c72853720ba3df00d872c2007033491599d36a5a","modified":1537612373975},{"_id":"public/2017/03/17/ProgramStudy/scala-for-impatients-ch4/index.html","hash":"4d0a3cdf01b73e2c43efa384291d93bc90bd26dd","modified":1537612373975},{"_id":"public/2017/03/16/ProgramStudy/scala-for-impatients-ch3/index.html","hash":"1e563d0da042907ceb8efdfd4cbf1348844d15af","modified":1537612373975},{"_id":"public/2017/03/15/ProgramStudy/scala-for-impatients-ch2/index.html","hash":"32a1d81647cc6043d8749ebd5a50ed1fee85772f","modified":1537612373975},{"_id":"public/2016/11/16/ProgramStudy/typingsinstall/index.html","hash":"e6993ca6a9b351a7c84269150ccadda30688658d","modified":1537612373975},{"_id":"public/2016/11/06/tools/2016-11-06-hexo1/index.html","hash":"ed9c800f60cb1446a554fa281d6c85ea8fc99db6","modified":1537612373975},{"_id":"public/2016/11/06/tools/markdown_syntax_help/index.html","hash":"d4290468c7b99f133b8d5b803efeb70ef120287d","modified":1537612373975},{"_id":"public/archives/index.html","hash":"006a4539e23b9e6fd4c072900855cf9e9b08866d","modified":1537612373975},{"_id":"public/index.html","hash":"ba12258effa343dc843a582f4c2fd2811164df1b","modified":1537612373975},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537612373993},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537612373993},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537612373994},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537612373994},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537612373994},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537612373994},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537612373994},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537612373994},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537612373994},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537612373994},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537612373994},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537612373995},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537612373995},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1537612373995},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1537612373995},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1537612373995},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1537612373995},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1537612373995},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1537612373995},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1537612373995},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1537612373995},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537612373995},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1537612373995},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1537612373996},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1537612374665},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1537612374678},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1537612374681},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1537612374687},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1537612374687},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1537612374687},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1537612374687},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1537612374687},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1537612374687},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1537612374688},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1537612374688},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1537612374688},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1537612374688},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1537612374688},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537612374688},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1537612374688},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1537612374688},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1537612374688},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1537612374688},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537612374688},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537612374688},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1537612374688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1537612374688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1537612374688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1537612374688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1537612374688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1537612374688},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1537612374688},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1537612374688},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1537612374688},{"_id":"public/css/main.css","hash":"8881c9f93d009c315da86a489e77c463d7021aa6","modified":1537612374688},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537612374688},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537612374688},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537612374688},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1537612374689},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1537612374689},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1537612374689},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1537612374689},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1537612374689},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537612374689},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1537612374689},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1537612374770},{"_id":"public/images/mahadun.png","hash":"bf902896bb7e0080875e98f6ae9b8e10cd8aaada","modified":1537612374774}],"Category":[{"name":"Study","_id":"cjmdapdnw0004ap9knuvnn4v0"},{"name":"Tool","_id":"cjmdapdoh000hap9kr9qxr2df"},{"name":"Scala","parent":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdoj000kap9k63nu0mf1"},{"name":"前端","parent":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdon000wap9klk4jxsuk"},{"name":"读书笔记","_id":"cjmdapdos001fap9kznug5o92"},{"name":"Java","parent":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdpa0024ap9k0kl60m45"}],"Data":[],"Page":[{"layout":"categories","type":"categories","_content":"","source":"categories/index.md","raw":"---\nlayout: categories\ntype: \"categories\"\n---\n","date":"2018-09-22T03:49:55.000Z","updated":"2018-09-22T03:49:55.000Z","path":"categories/index.html","title":"","comments":1,"_id":"cjmdapdlu0000ap9k7ak9bqul","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","type":"tags","_content":"","source":"tags/index.md","raw":"---\nlayout: tags\ntype: \"tags\"\n---\n","date":"2018-09-22T03:42:09.000Z","updated":"2018-09-22T03:42:09.000Z","path":"tags/index.html","title":"","comments":1,"_id":"cjmdapdly0001ap9kx8nbmchf","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"Scala_for_impatients_Ch2","date":"2017-03-15T10:01:00.000Z","_content":"\n## Note\n-  An if expression has a value.\n- A block has a value—the value of its last expression.\n- The Scala for loop is like an “enhanced” Java for loop.\n    - for ( i -> 0 to n)\n    - for ( i -> 0 until n)\n- Semicolons are (mostly) optional.\n    - Need when: more than one statements on a single line\n- The void type is Unit.\n- Avoid using return in a function.\n    - With a recursive function, you must specify the return type.\n- Beware of missing = in a function definition.\n    - Because the procedure doesn’t return any value, we omit the = symbol\n    - It is a common error to accidentally omit the = in a function definition.You then get an error message at the point where the function is called, and you are told that Unit is not acceptable at that location.\n- Exceptions work just like in Java or C++, but you use a “pattern matching” syntax for catch.\n- Scala has no checked exceptions.\n- Variable Arguments\n    -  The remedy is to tell the compiler that you want the parameter to be considered an argument sequence. Append : _*, like this:\n        - `val s = sum(1 to 5: _*) // Consider 1 to 5 as an argument sequence`\n\n<!--more-->\n## Exercises\n\n1. The signum of a number is 1 if the number is positive, –1 if it is negative, and 0 if it is zero. Write a function that computes this value.\n\n    Answer:\n    ```\n    def signum(i:Int)={\n      if (i>0) 1 else {\n        if (i<0) -1 else 0\n      }\n    }\n    ```\n\n2. What is the value of an empty block expression {}? What is its type?\n  Answer: Unit\n\n3. Come up with one situation where the assignment x = y = 1 is valid in Scala.\n(Hint: Pick a suitable type for x.)\n\n    Answer: x is type of Unit\n    ```\n      var y = 1\n      var x = {}\n      x = y = 1\n    ```\n4. Write a Scala equivalent for the Java loop\nfor (int i = 10; i >= 0; i--) System.out.println(i);\n\n    Answer:\n    ```\n    for(i<- 0 to 10) println(10-i)\n\n    // another version of Answer\n\n    for(i <- 0 to 10 reverse)print(i)\n    ```\n\n5. Write a procedure countdown(n: Int) that prints the numbers from n to 0.\n\n    Answer:\n    ```\n    def countdown(n:Int) {\n      for(i<- 0 to n reverse) print(i)\n    }\n\n    // another version:  \n\n    def countdown(n:Int) {\n      0 to n reverse foreach print\n    }\n    ```\n6. Write a for loop for computing the product of the Unicode codes of all letters in a string. For example, the product of the characters in \"Hello\" is 825152896.\n\n\n    Answer:\n    ```\n      def productUcode(str: String):Long = {\n        var result: Long = 1\n        for(c<-str) result *= c.toLong\n        result\n      }\n    ```\n7. Solve the preceding exercise without writing a loop. (Hint: Look at the StringOps Scaladoc.)\n\n\n    Answer:\n    ```\n      def productUcode(str: String):Long = {\n        var result: Long = 1\n        str.foreach(result *= _.toLong)\n        result\n      }\n    ```\n8. Write a function product(s : String) that computes the product, as described in the preceding exercises.\n\n    same with above\n\n9. Make the function of the preceding exercise a recursive function\n\n    Answer:\n    ```\n      def productUcode2(str:String):Long = {\n        if(str.length == 1) return str.head.toLong\n        else str.head.toLong * productUcode2(str.tail)\n      }\n    ```\n\n\n10. Write a function that computes xn, where n is an integer. Use the following recursive definition:\n• xn = y2 if n is even and positive, where y = xn / 2.\n• xn = x· xn – 1 if n is odd and positive.\n• x0 = 1.\n• xn = 1 / x–n if n is negative.\nDon’t use a return statement.\n\n\n    Answer:\n    ```\n    def computesXn(x:Double, n:Int):Double = {\n      if (n==0) 1.toDouble else {\n        if (n < 0) 1/computesXn(x, -n) else {\n          if (n%2 == 0) {\n            val y = computesXn(x, n/2); y*y\n            } else {\n            x*computesXn(x, n-1)\n          }\n        }\n      }\n    }\n\n    //\n\n    def computesXn(x:Double, n:Int):Double = {\n      if (n==0) 1.toDouble\n      else if (n>0 && n%2==0) {\n        val y = computesXn(x, n/2); y*y\n      }\n      else if (n>0 && n%2==1) {\n        x*computesXn(x, n-1)\n      }\n      else 1/computesXn(x, -n)\n    }\n    ```\n","source":"_posts/ProgramStudy/scala-for-impatients-ch2.markdown","raw":"---\nlayout: \"post\"\ntitle: \"Scala_for_impatients_Ch2\"\ndate: \"2017-03-15 18:01\"\n\ntags:\n  - 读书笔记\n  - book:Scala for impatients\n  - scala\n\ncategories:\n  - Study\n  - Scala\n\n\n---\n\n## Note\n-  An if expression has a value.\n- A block has a value—the value of its last expression.\n- The Scala for loop is like an “enhanced” Java for loop.\n    - for ( i -> 0 to n)\n    - for ( i -> 0 until n)\n- Semicolons are (mostly) optional.\n    - Need when: more than one statements on a single line\n- The void type is Unit.\n- Avoid using return in a function.\n    - With a recursive function, you must specify the return type.\n- Beware of missing = in a function definition.\n    - Because the procedure doesn’t return any value, we omit the = symbol\n    - It is a common error to accidentally omit the = in a function definition.You then get an error message at the point where the function is called, and you are told that Unit is not acceptable at that location.\n- Exceptions work just like in Java or C++, but you use a “pattern matching” syntax for catch.\n- Scala has no checked exceptions.\n- Variable Arguments\n    -  The remedy is to tell the compiler that you want the parameter to be considered an argument sequence. Append : _*, like this:\n        - `val s = sum(1 to 5: _*) // Consider 1 to 5 as an argument sequence`\n\n<!--more-->\n## Exercises\n\n1. The signum of a number is 1 if the number is positive, –1 if it is negative, and 0 if it is zero. Write a function that computes this value.\n\n    Answer:\n    ```\n    def signum(i:Int)={\n      if (i>0) 1 else {\n        if (i<0) -1 else 0\n      }\n    }\n    ```\n\n2. What is the value of an empty block expression {}? What is its type?\n  Answer: Unit\n\n3. Come up with one situation where the assignment x = y = 1 is valid in Scala.\n(Hint: Pick a suitable type for x.)\n\n    Answer: x is type of Unit\n    ```\n      var y = 1\n      var x = {}\n      x = y = 1\n    ```\n4. Write a Scala equivalent for the Java loop\nfor (int i = 10; i >= 0; i--) System.out.println(i);\n\n    Answer:\n    ```\n    for(i<- 0 to 10) println(10-i)\n\n    // another version of Answer\n\n    for(i <- 0 to 10 reverse)print(i)\n    ```\n\n5. Write a procedure countdown(n: Int) that prints the numbers from n to 0.\n\n    Answer:\n    ```\n    def countdown(n:Int) {\n      for(i<- 0 to n reverse) print(i)\n    }\n\n    // another version:  \n\n    def countdown(n:Int) {\n      0 to n reverse foreach print\n    }\n    ```\n6. Write a for loop for computing the product of the Unicode codes of all letters in a string. For example, the product of the characters in \"Hello\" is 825152896.\n\n\n    Answer:\n    ```\n      def productUcode(str: String):Long = {\n        var result: Long = 1\n        for(c<-str) result *= c.toLong\n        result\n      }\n    ```\n7. Solve the preceding exercise without writing a loop. (Hint: Look at the StringOps Scaladoc.)\n\n\n    Answer:\n    ```\n      def productUcode(str: String):Long = {\n        var result: Long = 1\n        str.foreach(result *= _.toLong)\n        result\n      }\n    ```\n8. Write a function product(s : String) that computes the product, as described in the preceding exercises.\n\n    same with above\n\n9. Make the function of the preceding exercise a recursive function\n\n    Answer:\n    ```\n      def productUcode2(str:String):Long = {\n        if(str.length == 1) return str.head.toLong\n        else str.head.toLong * productUcode2(str.tail)\n      }\n    ```\n\n\n10. Write a function that computes xn, where n is an integer. Use the following recursive definition:\n• xn = y2 if n is even and positive, where y = xn / 2.\n• xn = x· xn – 1 if n is odd and positive.\n• x0 = 1.\n• xn = 1 / x–n if n is negative.\nDon’t use a return statement.\n\n\n    Answer:\n    ```\n    def computesXn(x:Double, n:Int):Double = {\n      if (n==0) 1.toDouble else {\n        if (n < 0) 1/computesXn(x, -n) else {\n          if (n%2 == 0) {\n            val y = computesXn(x, n/2); y*y\n            } else {\n            x*computesXn(x, n-1)\n          }\n        }\n      }\n    }\n\n    //\n\n    def computesXn(x:Double, n:Int):Double = {\n      if (n==0) 1.toDouble\n      else if (n>0 && n%2==0) {\n        val y = computesXn(x, n/2); y*y\n      }\n      else if (n>0 && n%2==1) {\n        x*computesXn(x, n-1)\n      }\n      else 1/computesXn(x, -n)\n    }\n    ```\n","slug":"ProgramStudy/scala-for-impatients-ch2","published":1,"updated":"2018-09-22T04:16:33.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdnp0002ap9kxj9d7lwb","content":"<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>An if expression has a value.</li>\n<li>A block has a value&#x2014;the value of its last expression.</li>\n<li>The Scala for loop is like an &#x201C;enhanced&#x201D; Java for loop.<ul>\n<li>for ( i -&gt; 0 to n)</li>\n<li>for ( i -&gt; 0 until n)</li>\n</ul>\n</li>\n<li>Semicolons are (mostly) optional.<ul>\n<li>Need when: more than one statements on a single line</li>\n</ul>\n</li>\n<li>The void type is Unit.</li>\n<li>Avoid using return in a function.<ul>\n<li>With a recursive function, you must specify the return type.</li>\n</ul>\n</li>\n<li>Beware of missing = in a function definition.<ul>\n<li>Because the procedure doesn&#x2019;t return any value, we omit the = symbol</li>\n<li>It is a common error to accidentally omit the = in a function definition.You then get an error message at the point where the function is called, and you are told that Unit is not acceptable at that location.</li>\n</ul>\n</li>\n<li>Exceptions work just like in Java or C++, but you use a &#x201C;pattern matching&#x201D; syntax for catch.</li>\n<li>Scala has no checked exceptions.</li>\n<li>Variable Arguments<ul>\n<li>The remedy is to tell the compiler that you want the parameter to be considered an argument sequence. Append : _*, like this:<ul>\n<li><code>val s = sum(1 to 5: _*) // Consider 1 to 5 as an argument sequence</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"Exercises\"><a href=\"#Exercises\" class=\"headerlink\" title=\"Exercises\"></a>Exercises</h2><ol>\n<li><p>The signum of a number is 1 if the number is positive, &#x2013;1 if it is negative, and 0 if it is zero. Write a function that computes this value.</p>\n<p> Answer:</p>\n <figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">signum</span><span class=\"params\">(<span class=\"symbol\">i:</span>Int)</span></span>={</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i&gt;<span class=\"number\">0</span>) <span class=\"number\">1</span> <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i&lt;<span class=\"number\">0</span>) -<span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>What is the value of an empty block expression {}? What is its type?<br>Answer: Unit</p>\n</li>\n<li><p>Come up with one situation where the assignment x = y = 1 is valid in Scala.<br>(Hint: Pick a suitable type for x.)</p>\n<p> Answer: x is type of Unit</p>\n <figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"attr\">y</span> = <span class=\"number\">1</span></span><br><span class=\"line\">var <span class=\"attr\">x</span> = {}</span><br><span class=\"line\"><span class=\"attr\">x</span> = <span class=\"attr\">y</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a Scala equivalent for the Java loop<br>for (int i = 10; i &gt;= 0; i&#x2013;) System.out.println(i);</p>\n<p> Answer:</p>\n <figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">for</span><span class=\"params\">(i&lt;- <span class=\"number\">0</span> to <span class=\"number\">10</span>)</span></span> println(<span class=\"number\">10</span>-i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// another version of Answer</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">for</span><span class=\"params\">(i &lt;- <span class=\"number\">0</span> to <span class=\"number\">10</span> reverse)</span><span class=\"title\">print</span><span class=\"params\">(i)</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a procedure countdown(n: Int) that prints the numbers from n to 0.</p>\n<p> Answer:</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> countdown(n:<span class=\"keyword\">Int</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i&lt;- <span class=\"number\">0</span> to n <span class=\"keyword\">reverse</span>) <span class=\"keyword\">print</span>(i)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// another version:  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> countdown(n:<span class=\"keyword\">Int</span>) {</span><br><span class=\"line\">  <span class=\"number\">0</span> to n <span class=\"keyword\">reverse</span> foreach <span class=\"keyword\">print</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a for loop for computing the product of the Unicode codes of all letters in a string. For example, the product of the characters in &#x201C;Hello&#x201D; is 825152896.</p>\n</li>\n</ol>\n<pre><code>Answer:\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">productUcode</span><span class=\"params\">(<span class=\"symbol\">str:</span> String)</span></span><span class=\"symbol\">:Long</span> = {</span><br><span class=\"line\">  var <span class=\"symbol\">result:</span> Long = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(c&lt;-str) result *= c.toLong</span><br><span class=\"line\">  result</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"7\">\n<li>Solve the preceding exercise without writing a loop. (Hint: Look at the StringOps Scaladoc.)</li>\n</ol>\n<pre><code>Answer:\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">productUcode</span><span class=\"params\">(<span class=\"symbol\">str:</span> String)</span></span><span class=\"symbol\">:Long</span> = {</span><br><span class=\"line\">  var <span class=\"symbol\">result:</span> Long = <span class=\"number\">1</span></span><br><span class=\"line\">  str.foreach(result *= <span class=\"number\">_</span>.toLong)</span><br><span class=\"line\">  result</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"8\">\n<li><p>Write a function product(s : String) that computes the product, as described in the preceding exercises.</p>\n<p> same with above</p>\n</li>\n<li><p>Make the function of the preceding exercise a recursive function</p>\n<p> Answer:</p>\n <figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def productUcode2(<span class=\"built_in\">str</span>:<span class=\"keyword\">String</span>):Long = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">str</span>.length == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>.head.toLong</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">str</span>.head.toLong * productUcode2(<span class=\"built_in\">str</span>.tail)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a function that computes xn, where n is an integer. Use the following recursive definition:<br>&#x2022; xn = y2 if n is even and positive, where y = xn / 2.<br>&#x2022; xn = x&#xB7; xn &#x2013; 1 if n is odd and positive.<br>&#x2022; x0 = 1.<br>&#x2022; xn = 1 / x&#x2013;n if n is negative.<br>Don&#x2019;t use a return statement.</p>\n</li>\n</ol>\n<pre><code>Answer:\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def computesXn(x:Double, n:Int):Double = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"attribute\">n</span>==0) 1.toDouble <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; 0) 1/computesXn(x, -n) <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (n%2 == 0) {</span><br><span class=\"line\">        val y = computesXn(x, n/2); y*y</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        x<span class=\"number\">*c</span>omputesXn(x, n-1)</span><br><span class=\"line\">      }</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">def computesXn(x:Double, n:Int):Double = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"attribute\">n</span>==0) 1.toDouble</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n&gt;0 &amp;&amp; n%<span class=\"attribute\">2</span>==0) {</span><br><span class=\"line\">    val y = computesXn(x, n/2); y*y</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n&gt;0 &amp;&amp; n%<span class=\"attribute\">2</span>==1) {</span><br><span class=\"line\">    x<span class=\"number\">*c</span>omputesXn(x, n-1)</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">else</span> 1/computesXn(x, -n)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre>","site":{"data":{}},"excerpt":"<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>An if expression has a value.</li>\n<li>A block has a value&#x2014;the value of its last expression.</li>\n<li>The Scala for loop is like an &#x201C;enhanced&#x201D; Java for loop.<ul>\n<li>for ( i -&gt; 0 to n)</li>\n<li>for ( i -&gt; 0 until n)</li>\n</ul>\n</li>\n<li>Semicolons are (mostly) optional.<ul>\n<li>Need when: more than one statements on a single line</li>\n</ul>\n</li>\n<li>The void type is Unit.</li>\n<li>Avoid using return in a function.<ul>\n<li>With a recursive function, you must specify the return type.</li>\n</ul>\n</li>\n<li>Beware of missing = in a function definition.<ul>\n<li>Because the procedure doesn&#x2019;t return any value, we omit the = symbol</li>\n<li>It is a common error to accidentally omit the = in a function definition.You then get an error message at the point where the function is called, and you are told that Unit is not acceptable at that location.</li>\n</ul>\n</li>\n<li>Exceptions work just like in Java or C++, but you use a &#x201C;pattern matching&#x201D; syntax for catch.</li>\n<li>Scala has no checked exceptions.</li>\n<li>Variable Arguments<ul>\n<li>The remedy is to tell the compiler that you want the parameter to be considered an argument sequence. Append : _*, like this:<ul>\n<li><code>val s = sum(1 to 5: _*) // Consider 1 to 5 as an argument sequence</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","more":"<h2 id=\"Exercises\"><a href=\"#Exercises\" class=\"headerlink\" title=\"Exercises\"></a>Exercises</h2><ol>\n<li><p>The signum of a number is 1 if the number is positive, &#x2013;1 if it is negative, and 0 if it is zero. Write a function that computes this value.</p>\n<p> Answer:</p>\n <figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">signum</span><span class=\"params\">(<span class=\"symbol\">i:</span>Int)</span></span>={</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i&gt;<span class=\"number\">0</span>) <span class=\"number\">1</span> <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i&lt;<span class=\"number\">0</span>) -<span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>What is the value of an empty block expression {}? What is its type?<br>Answer: Unit</p>\n</li>\n<li><p>Come up with one situation where the assignment x = y = 1 is valid in Scala.<br>(Hint: Pick a suitable type for x.)</p>\n<p> Answer: x is type of Unit</p>\n <figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"attr\">y</span> = <span class=\"number\">1</span></span><br><span class=\"line\">var <span class=\"attr\">x</span> = {}</span><br><span class=\"line\"><span class=\"attr\">x</span> = <span class=\"attr\">y</span> = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a Scala equivalent for the Java loop<br>for (int i = 10; i &gt;= 0; i&#x2013;) System.out.println(i);</p>\n<p> Answer:</p>\n <figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">for</span><span class=\"params\">(i&lt;- <span class=\"number\">0</span> to <span class=\"number\">10</span>)</span></span> println(<span class=\"number\">10</span>-i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// another version of Answer</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">for</span><span class=\"params\">(i &lt;- <span class=\"number\">0</span> to <span class=\"number\">10</span> reverse)</span><span class=\"title\">print</span><span class=\"params\">(i)</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a procedure countdown(n: Int) that prints the numbers from n to 0.</p>\n<p> Answer:</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> countdown(n:<span class=\"keyword\">Int</span>) {</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i&lt;- <span class=\"number\">0</span> to n <span class=\"keyword\">reverse</span>) <span class=\"keyword\">print</span>(i)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// another version:  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> countdown(n:<span class=\"keyword\">Int</span>) {</span><br><span class=\"line\">  <span class=\"number\">0</span> to n <span class=\"keyword\">reverse</span> foreach <span class=\"keyword\">print</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a for loop for computing the product of the Unicode codes of all letters in a string. For example, the product of the characters in &#x201C;Hello&#x201D; is 825152896.</p>\n</li>\n</ol>\n<pre><code>Answer:\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">productUcode</span><span class=\"params\">(<span class=\"symbol\">str:</span> String)</span></span><span class=\"symbol\">:Long</span> = {</span><br><span class=\"line\">  var <span class=\"symbol\">result:</span> Long = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(c&lt;-str) result *= c.toLong</span><br><span class=\"line\">  result</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"7\">\n<li>Solve the preceding exercise without writing a loop. (Hint: Look at the StringOps Scaladoc.)</li>\n</ol>\n<pre><code>Answer:\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">productUcode</span><span class=\"params\">(<span class=\"symbol\">str:</span> String)</span></span><span class=\"symbol\">:Long</span> = {</span><br><span class=\"line\">  var <span class=\"symbol\">result:</span> Long = <span class=\"number\">1</span></span><br><span class=\"line\">  str.foreach(result *= <span class=\"number\">_</span>.toLong)</span><br><span class=\"line\">  result</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"8\">\n<li><p>Write a function product(s : String) that computes the product, as described in the preceding exercises.</p>\n<p> same with above</p>\n</li>\n<li><p>Make the function of the preceding exercise a recursive function</p>\n<p> Answer:</p>\n <figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def productUcode2(<span class=\"built_in\">str</span>:<span class=\"keyword\">String</span>):Long = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">str</span>.length == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>.head.toLong</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">str</span>.head.toLong * productUcode2(<span class=\"built_in\">str</span>.tail)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a function that computes xn, where n is an integer. Use the following recursive definition:<br>&#x2022; xn = y2 if n is even and positive, where y = xn / 2.<br>&#x2022; xn = x&#xB7; xn &#x2013; 1 if n is odd and positive.<br>&#x2022; x0 = 1.<br>&#x2022; xn = 1 / x&#x2013;n if n is negative.<br>Don&#x2019;t use a return statement.</p>\n</li>\n</ol>\n<pre><code>Answer:\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def computesXn(x:Double, n:Int):Double = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"attribute\">n</span>==0) 1.toDouble <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; 0) 1/computesXn(x, -n) <span class=\"keyword\">else</span> {</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (n%2 == 0) {</span><br><span class=\"line\">        val y = computesXn(x, n/2); y*y</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        x<span class=\"number\">*c</span>omputesXn(x, n-1)</span><br><span class=\"line\">      }</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">def computesXn(x:Double, n:Int):Double = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"attribute\">n</span>==0) 1.toDouble</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n&gt;0 &amp;&amp; n%<span class=\"attribute\">2</span>==0) {</span><br><span class=\"line\">    val y = computesXn(x, n/2); y*y</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n&gt;0 &amp;&amp; n%<span class=\"attribute\">2</span>==1) {</span><br><span class=\"line\">    x<span class=\"number\">*c</span>omputesXn(x, n-1)</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">else</span> 1/computesXn(x, -n)</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre>"},{"layout":"post","title":"Angular2项目demo——安装","date":"2016-11-16T03:11:00.000Z","_content":"\n好友最近在学Angular2，刚完成一个feature，还提交到GIT上。我心下好奇，就准备玩一下他的这个小功能。谁知，卡在工程部署上。\n\n[Frey-Fu][e43976ac]\n\n  [e43976ac]: https://github.com/Frey-Fu/ng2-echarts \"Frey-Fu's ng2-echars\"\n\n\n## 部署过程\n### clone项目到本地\n  ```bash\ngit clone https://github.com/Frey-Fu/ng2-echarts.git\n  ```\n\n### 阅读README.md\n\n> This is ECharts for Angular2, code is in src/, there's an example project in example/, feel free to use it. The example is based on angular2-webpack-starter.\n\n#### How to use:\n```\ncd example\nnpm install\ntypings install\nnpm run build:prod\nnpm run server:prod\n```\n\n### 安装typings\n\n查看官方手册：\nhttps://www.npmjs.com/package/typings\n\n#### Install Typings CLI utility.\n``` bash\nnpm install typings --global\n```\n结果好像成功了：\n```\ntypings@2.0.0 node_modules/typings\n├── elegant-spinner@1.0.1\n├── has-unicode@2.0.1\n├── listify@1.0.0\n...\n...\n\n```\n\n### 测试Typings,报错\n\n```\n# Search for definitions.\ntypings search tape\n```\n\n结果：\n\n```\n/usr/local/lib/node_modules/typings/node_modules/typings-core/node_modules/strip-bom/index.js:2\n\nmodule.exports = x => {\n                    ^\nSyntaxError: Unexpected token >\n    at Module._compile (module.js:439:25)\n    at Object.Module._extensions..j\n...\n...\n\n```\n### Review typings的安装日志，发现一些警告\n\n我的node版本低于要求\n```\n...\nnpm http 304 https://registry.npm.taobao.org/is-utf8\nnpm WARN engine deep-extend@0.4.1: wanted: {\"node\":\">=0.12.0\",\"iojs\":\">=1.0.0\"} (current: {\"node\":\"v0.10.24\",\"npm\":\"1.3.21\"})\nnpm http GET https://registry.npm.taobao.org/wrappy\nnpm http GET\n...\n```\n\n## 升级node\n\nhttp://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/\n\n1: Check your current version of Node.\n\n```\n$node -v\n```\n2: Clear your npm cache\n```\nsudo npm cache clean -f  \n```\n\n3: Install ‘n’\n```\nsudo npm install -g n\n```\n\n4: Upgrade to a stable version\n```\nsudo n stable  \n\n```\n5: Check the running version of Node to verify that it has worked:\n```\n$node -v v0.8.11\n```\n\n## 重装node\n\n参考1： http://linyehui.me/2016/03/03/reinstall-nodejs-on-osx.html\n\n参考2： http://icarus4.logdown.com/posts/175092-nodejs-installation-guide\n\n### 再安装\n\n```\n\n\n$ typings install\n\n\n...\nnpm WARN webpack-dev-server@2.1.0-beta.11 requires a peer of webpack@^2.1.0-beta.26 but none was installed.\njingchen@chentekiair ~/work/gitlab/fuwei/ng2-echarts/example $ typings install\n\n└── echarts (global)\n```\n\n### 编译运行\n```\nnpm run build:prod\nnpm run server:prod\n```\n\n服务启动成功，结果如下：\n\n```\n\n> angular2-webpack-starter@5.0.5 server:prod /Users/jingchen/work/gitlab/fuwei/ng2-echarts/example\n> http-server dist --cors\n\nStarting up http-server, serving dist\nAvailable on:\n  http://127.0.0.1:8080\n```\n\n### 打开页面\n\n![fuwei_ng_echarts_demo](http://ogqir9ige.bkt.clouddn.com/826660e135fa7da8393a25133803a9da.png)\n","source":"_posts/ProgramStudy/typingsinstall.markdown","raw":"---\nlayout: \"post\"\ntitle: \"Angular2项目demo——安装\"\ndate: \"2016-11-16 11:11\"\ntags:\n- Angular2\n- Typings\n- nodeJs\ncategories:\n- Study\n- 前端\n---\n\n好友最近在学Angular2，刚完成一个feature，还提交到GIT上。我心下好奇，就准备玩一下他的这个小功能。谁知，卡在工程部署上。\n\n[Frey-Fu][e43976ac]\n\n  [e43976ac]: https://github.com/Frey-Fu/ng2-echarts \"Frey-Fu's ng2-echars\"\n\n\n## 部署过程\n### clone项目到本地\n  ```bash\ngit clone https://github.com/Frey-Fu/ng2-echarts.git\n  ```\n\n### 阅读README.md\n\n> This is ECharts for Angular2, code is in src/, there's an example project in example/, feel free to use it. The example is based on angular2-webpack-starter.\n\n#### How to use:\n```\ncd example\nnpm install\ntypings install\nnpm run build:prod\nnpm run server:prod\n```\n\n### 安装typings\n\n查看官方手册：\nhttps://www.npmjs.com/package/typings\n\n#### Install Typings CLI utility.\n``` bash\nnpm install typings --global\n```\n结果好像成功了：\n```\ntypings@2.0.0 node_modules/typings\n├── elegant-spinner@1.0.1\n├── has-unicode@2.0.1\n├── listify@1.0.0\n...\n...\n\n```\n\n### 测试Typings,报错\n\n```\n# Search for definitions.\ntypings search tape\n```\n\n结果：\n\n```\n/usr/local/lib/node_modules/typings/node_modules/typings-core/node_modules/strip-bom/index.js:2\n\nmodule.exports = x => {\n                    ^\nSyntaxError: Unexpected token >\n    at Module._compile (module.js:439:25)\n    at Object.Module._extensions..j\n...\n...\n\n```\n### Review typings的安装日志，发现一些警告\n\n我的node版本低于要求\n```\n...\nnpm http 304 https://registry.npm.taobao.org/is-utf8\nnpm WARN engine deep-extend@0.4.1: wanted: {\"node\":\">=0.12.0\",\"iojs\":\">=1.0.0\"} (current: {\"node\":\"v0.10.24\",\"npm\":\"1.3.21\"})\nnpm http GET https://registry.npm.taobao.org/wrappy\nnpm http GET\n...\n```\n\n## 升级node\n\nhttp://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/\n\n1: Check your current version of Node.\n\n```\n$node -v\n```\n2: Clear your npm cache\n```\nsudo npm cache clean -f  \n```\n\n3: Install ‘n’\n```\nsudo npm install -g n\n```\n\n4: Upgrade to a stable version\n```\nsudo n stable  \n\n```\n5: Check the running version of Node to verify that it has worked:\n```\n$node -v v0.8.11\n```\n\n## 重装node\n\n参考1： http://linyehui.me/2016/03/03/reinstall-nodejs-on-osx.html\n\n参考2： http://icarus4.logdown.com/posts/175092-nodejs-installation-guide\n\n### 再安装\n\n```\n\n\n$ typings install\n\n\n...\nnpm WARN webpack-dev-server@2.1.0-beta.11 requires a peer of webpack@^2.1.0-beta.26 but none was installed.\njingchen@chentekiair ~/work/gitlab/fuwei/ng2-echarts/example $ typings install\n\n└── echarts (global)\n```\n\n### 编译运行\n```\nnpm run build:prod\nnpm run server:prod\n```\n\n服务启动成功，结果如下：\n\n```\n\n> angular2-webpack-starter@5.0.5 server:prod /Users/jingchen/work/gitlab/fuwei/ng2-echarts/example\n> http-server dist --cors\n\nStarting up http-server, serving dist\nAvailable on:\n  http://127.0.0.1:8080\n```\n\n### 打开页面\n\n![fuwei_ng_echarts_demo](http://ogqir9ige.bkt.clouddn.com/826660e135fa7da8393a25133803a9da.png)\n","slug":"ProgramStudy/typingsinstall","published":1,"updated":"2018-09-22T04:15:10.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdnt0003ap9kbpd9tzic","content":"<p>&#x597D;&#x53CB;&#x6700;&#x8FD1;&#x5728;&#x5B66;Angular2&#xFF0C;&#x521A;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;feature&#xFF0C;&#x8FD8;&#x63D0;&#x4EA4;&#x5230;GIT&#x4E0A;&#x3002;&#x6211;&#x5FC3;&#x4E0B;&#x597D;&#x5947;&#xFF0C;&#x5C31;&#x51C6;&#x5907;&#x73A9;&#x4E00;&#x4E0B;&#x4ED6;&#x7684;&#x8FD9;&#x4E2A;&#x5C0F;&#x529F;&#x80FD;&#x3002;&#x8C01;&#x77E5;&#xFF0C;&#x5361;&#x5728;&#x5DE5;&#x7A0B;&#x90E8;&#x7F72;&#x4E0A;&#x3002;</p>\n<p><a href=\"https://github.com/Frey-Fu/ng2-echarts\" title=\"Frey-Fu&apos;s ng2-echars\" target=\"_blank\" rel=\"noopener\">Frey-Fu</a></p>\n<h2 id=\"&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;\"><a href=\"#&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;\" class=\"headerlink\" title=\"&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;\"></a>&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;</h2><h3 id=\"clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;\"><a href=\"#clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;\" class=\"headerlink\" title=\"clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;\"></a>clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/Frey-Fu/ng2-echarts.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x9605;&#x8BFB;README-md\"><a href=\"#&#x9605;&#x8BFB;README-md\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;README.md\"></a>&#x9605;&#x8BFB;README.md</h3><blockquote>\n<p>This is ECharts for Angular2, code is in src/, there&#x2019;s an example project in example/, feel free to use it. The example is based on angular2-webpack-starter.</p>\n</blockquote>\n<h4 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use:\"></a>How to use:</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd example</span><br><span class=\"line\">npm install</span><br><span class=\"line\">typings install</span><br><span class=\"line\">npm <span class=\"keyword\">run</span><span class=\"bash\"> build:prod</span></span><br><span class=\"line\"><span class=\"bash\">npm run server:prod</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x5B89;&#x88C5;typings\"><a href=\"#&#x5B89;&#x88C5;typings\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;typings\"></a>&#x5B89;&#x88C5;typings</h3><p>&#x67E5;&#x770B;&#x5B98;&#x65B9;&#x624B;&#x518C;&#xFF1A;<br><a href=\"https://www.npmjs.com/package/typings\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/typings</a></p>\n<h4 id=\"Install-Typings-CLI-utility\"><a href=\"#Install-Typings-CLI-utility\" class=\"headerlink\" title=\"Install Typings CLI utility.\"></a>Install Typings CLI utility.</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install typings --global</span><br></pre></td></tr></table></figure>\n<p>&#x7ED3;&#x679C;&#x597D;&#x50CF;&#x6210;&#x529F;&#x4E86;&#xFF1A;<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typings@<span class=\"number\">2.0</span><span class=\"number\">.0</span> node_modules/typings</span><br><span class=\"line\">&#x251C;&#x2500;&#x2500; elegant-spinner@<span class=\"number\">1.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">&#x251C;&#x2500;&#x2500; has-unicode@<span class=\"number\">2.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">&#x251C;&#x2500;&#x2500; listify@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"&#x6D4B;&#x8BD5;Typings-&#x62A5;&#x9519;\"><a href=\"#&#x6D4B;&#x8BD5;Typings-&#x62A5;&#x9519;\" class=\"headerlink\" title=\"&#x6D4B;&#x8BD5;Typings,&#x62A5;&#x9519;\"></a>&#x6D4B;&#x8BD5;Typings,&#x62A5;&#x9519;</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Search <span class=\"keyword\">for</span> definitions.</span></span><br><span class=\"line\">typings search tape</span><br></pre></td></tr></table></figure>\n<p>&#x7ED3;&#x679C;&#xFF1A;</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/lib/node_modules/typings/node_modules/typings-core/node_modules/strip-bom/index<span class=\"selector-class\">.js</span>:<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">module<span class=\"selector-class\">.exports</span> = x =&gt; {</span><br><span class=\"line\">                    ^</span><br><span class=\"line\">SyntaxError: Unexpected token &gt;</span><br><span class=\"line\">    at Module._compile (module<span class=\"selector-class\">.js</span>:<span class=\"number\">439</span>:<span class=\"number\">25</span>)</span><br><span class=\"line\">    at Object<span class=\"selector-class\">.Module</span>._extensions..j</span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"Review-typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;\"><a href=\"#Review-typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;\" class=\"headerlink\" title=\"Review typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;\"></a>Review typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;</h3><p>&#x6211;&#x7684;node&#x7248;&#x672C;&#x4F4E;&#x4E8E;&#x8981;&#x6C42;<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"built_in\">npm</span> http <span class=\"number\">304</span> https:<span class=\"regexp\">//</span>registry.<span class=\"built_in\">npm</span>.taobao.org/<span class=\"keyword\">is</span>-utf8</span><br><span class=\"line\"><span class=\"built_in\">npm</span> WARN engine deep-extend@<span class=\"number\">0.4</span><span class=\"number\">.1</span>: wanted: {<span class=\"string\">&quot;node&quot;</span>:<span class=\"string\">&quot;&gt;=0.12.0&quot;</span>,<span class=\"string\">&quot;iojs&quot;</span>:<span class=\"string\">&quot;&gt;=1.0.0&quot;</span>} (current: {<span class=\"string\">&quot;node&quot;</span>:<span class=\"string\">&quot;v0.10.24&quot;</span>,<span class=\"string\">&quot;npm&quot;</span>:<span class=\"string\">&quot;1.3.21&quot;</span>})</span><br><span class=\"line\"><span class=\"built_in\">npm</span> http GET https:<span class=\"regexp\">//</span>registry.<span class=\"built_in\">npm</span>.taobao.org/wrappy</span><br><span class=\"line\"><span class=\"built_in\">npm</span> http GET</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"&#x5347;&#x7EA7;node\"><a href=\"#&#x5347;&#x7EA7;node\" class=\"headerlink\" title=\"&#x5347;&#x7EA7;node\"></a>&#x5347;&#x7EA7;node</h2><p><a href=\"http://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/\" target=\"_blank\" rel=\"noopener\">http://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/</a></p>\n<p>1: Check your current version of Node.</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$<span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br></pre></td></tr></table></figure>\n<p>2: Clear your npm cache<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">npm</span> cache clean -f</span><br></pre></td></tr></table></figure></p>\n<p>3: Install &#x2018;n&#x2019;<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm <span class=\"keyword\">install</span> -g n</span><br></pre></td></tr></table></figure></p>\n<p>4: Upgrade to a stable version<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo n stable</span></span><br></pre></td></tr></table></figure></p>\n<p>5: Check the running version of Node to verify that it has worked:<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$<span class=\"keyword\">node</span> <span class=\"title\">-v</span> v0.<span class=\"number\">8.11</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"&#x91CD;&#x88C5;node\"><a href=\"#&#x91CD;&#x88C5;node\" class=\"headerlink\" title=\"&#x91CD;&#x88C5;node\"></a>&#x91CD;&#x88C5;node</h2><p>&#x53C2;&#x8003;1&#xFF1A; <a href=\"http://linyehui.me/2016/03/03/reinstall-nodejs-on-osx.html\" target=\"_blank\" rel=\"noopener\">http://linyehui.me/2016/03/03/reinstall-nodejs-on-osx.html</a></p>\n<p>&#x53C2;&#x8003;2&#xFF1A; <a href=\"http://icarus4.logdown.com/posts/175092-nodejs-installation-guide\" target=\"_blank\" rel=\"noopener\">http://icarus4.logdown.com/posts/175092-nodejs-installation-guide</a></p>\n<h3 id=\"&#x518D;&#x5B89;&#x88C5;\"><a href=\"#&#x518D;&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x518D;&#x5B89;&#x88C5;\"></a>&#x518D;&#x5B89;&#x88C5;</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ typings install</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">npm WARN webpack-dev-server@2.1.0-beta.11 requires a peer of webpack@^2.1.0-beta.26 but none was installed.</span><br><span class=\"line\">jingchen@chentekiair ~/work/gitlab/fuwei/ng2-echarts/example $ typings install</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2514;&#x2500;&#x2500; echarts (global)</span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x7F16;&#x8BD1;&#x8FD0;&#x884C;\"><a href=\"#&#x7F16;&#x8BD1;&#x8FD0;&#x884C;\" class=\"headerlink\" title=\"&#x7F16;&#x8BD1;&#x8FD0;&#x884C;\"></a>&#x7F16;&#x8BD1;&#x8FD0;&#x884C;</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">run</span><span class=\"bash\"> build:prod</span></span><br><span class=\"line\"><span class=\"bash\">npm run server:prod</span></span><br></pre></td></tr></table></figure>\n<p>&#x670D;&#x52A1;&#x542F;&#x52A8;&#x6210;&#x529F;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&gt; angular2-webpack-starter@<span class=\"number\">5.0</span><span class=\"number\">.5</span> <span class=\"string\">server:</span>prod <span class=\"regexp\">/Users/</span>jingchen<span class=\"regexp\">/work/</span>gitlab<span class=\"regexp\">/fuwei/</span>ng2-echarts/example</span><br><span class=\"line\">&gt; http-server dist --cors</span><br><span class=\"line\"></span><br><span class=\"line\">Starting up http-server, serving dist</span><br><span class=\"line\">Available <span class=\"string\">on:</span></span><br><span class=\"line\"><span class=\"symbol\">  http:</span><span class=\"comment\">//127.0.0.1:8080</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x6253;&#x5F00;&#x9875;&#x9762;\"><a href=\"#&#x6253;&#x5F00;&#x9875;&#x9762;\" class=\"headerlink\" title=\"&#x6253;&#x5F00;&#x9875;&#x9762;\"></a>&#x6253;&#x5F00;&#x9875;&#x9762;</h3><p><img src=\"http://ogqir9ige.bkt.clouddn.com/826660e135fa7da8393a25133803a9da.png\" alt=\"fuwei_ng_echarts_demo\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>&#x597D;&#x53CB;&#x6700;&#x8FD1;&#x5728;&#x5B66;Angular2&#xFF0C;&#x521A;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;feature&#xFF0C;&#x8FD8;&#x63D0;&#x4EA4;&#x5230;GIT&#x4E0A;&#x3002;&#x6211;&#x5FC3;&#x4E0B;&#x597D;&#x5947;&#xFF0C;&#x5C31;&#x51C6;&#x5907;&#x73A9;&#x4E00;&#x4E0B;&#x4ED6;&#x7684;&#x8FD9;&#x4E2A;&#x5C0F;&#x529F;&#x80FD;&#x3002;&#x8C01;&#x77E5;&#xFF0C;&#x5361;&#x5728;&#x5DE5;&#x7A0B;&#x90E8;&#x7F72;&#x4E0A;&#x3002;</p>\n<p><a href=\"https://github.com/Frey-Fu/ng2-echarts\" title=\"Frey-Fu&apos;s ng2-echars\" target=\"_blank\" rel=\"noopener\">Frey-Fu</a></p>\n<h2 id=\"&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;\"><a href=\"#&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;\" class=\"headerlink\" title=\"&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;\"></a>&#x90E8;&#x7F72;&#x8FC7;&#x7A0B;</h2><h3 id=\"clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;\"><a href=\"#clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;\" class=\"headerlink\" title=\"clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;\"></a>clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/Frey-Fu/ng2-echarts.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x9605;&#x8BFB;README-md\"><a href=\"#&#x9605;&#x8BFB;README-md\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;README.md\"></a>&#x9605;&#x8BFB;README.md</h3><blockquote>\n<p>This is ECharts for Angular2, code is in src/, there&#x2019;s an example project in example/, feel free to use it. The example is based on angular2-webpack-starter.</p>\n</blockquote>\n<h4 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use:\"></a>How to use:</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd example</span><br><span class=\"line\">npm install</span><br><span class=\"line\">typings install</span><br><span class=\"line\">npm <span class=\"keyword\">run</span><span class=\"bash\"> build:prod</span></span><br><span class=\"line\"><span class=\"bash\">npm run server:prod</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x5B89;&#x88C5;typings\"><a href=\"#&#x5B89;&#x88C5;typings\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;typings\"></a>&#x5B89;&#x88C5;typings</h3><p>&#x67E5;&#x770B;&#x5B98;&#x65B9;&#x624B;&#x518C;&#xFF1A;<br><a href=\"https://www.npmjs.com/package/typings\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/typings</a></p>\n<h4 id=\"Install-Typings-CLI-utility\"><a href=\"#Install-Typings-CLI-utility\" class=\"headerlink\" title=\"Install Typings CLI utility.\"></a>Install Typings CLI utility.</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install typings --global</span><br></pre></td></tr></table></figure>\n<p>&#x7ED3;&#x679C;&#x597D;&#x50CF;&#x6210;&#x529F;&#x4E86;&#xFF1A;<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typings@<span class=\"number\">2.0</span><span class=\"number\">.0</span> node_modules/typings</span><br><span class=\"line\">&#x251C;&#x2500;&#x2500; elegant-spinner@<span class=\"number\">1.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">&#x251C;&#x2500;&#x2500; has-unicode@<span class=\"number\">2.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">&#x251C;&#x2500;&#x2500; listify@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"&#x6D4B;&#x8BD5;Typings-&#x62A5;&#x9519;\"><a href=\"#&#x6D4B;&#x8BD5;Typings-&#x62A5;&#x9519;\" class=\"headerlink\" title=\"&#x6D4B;&#x8BD5;Typings,&#x62A5;&#x9519;\"></a>&#x6D4B;&#x8BD5;Typings,&#x62A5;&#x9519;</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Search <span class=\"keyword\">for</span> definitions.</span></span><br><span class=\"line\">typings search tape</span><br></pre></td></tr></table></figure>\n<p>&#x7ED3;&#x679C;&#xFF1A;</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/lib/node_modules/typings/node_modules/typings-core/node_modules/strip-bom/index<span class=\"selector-class\">.js</span>:<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">module<span class=\"selector-class\">.exports</span> = x =&gt; {</span><br><span class=\"line\">                    ^</span><br><span class=\"line\">SyntaxError: Unexpected token &gt;</span><br><span class=\"line\">    at Module._compile (module<span class=\"selector-class\">.js</span>:<span class=\"number\">439</span>:<span class=\"number\">25</span>)</span><br><span class=\"line\">    at Object<span class=\"selector-class\">.Module</span>._extensions..j</span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"Review-typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;\"><a href=\"#Review-typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;\" class=\"headerlink\" title=\"Review typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;\"></a>Review typings&#x7684;&#x5B89;&#x88C5;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x4E9B;&#x8B66;&#x544A;</h3><p>&#x6211;&#x7684;node&#x7248;&#x672C;&#x4F4E;&#x4E8E;&#x8981;&#x6C42;<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"built_in\">npm</span> http <span class=\"number\">304</span> https:<span class=\"regexp\">//</span>registry.<span class=\"built_in\">npm</span>.taobao.org/<span class=\"keyword\">is</span>-utf8</span><br><span class=\"line\"><span class=\"built_in\">npm</span> WARN engine deep-extend@<span class=\"number\">0.4</span><span class=\"number\">.1</span>: wanted: {<span class=\"string\">&quot;node&quot;</span>:<span class=\"string\">&quot;&gt;=0.12.0&quot;</span>,<span class=\"string\">&quot;iojs&quot;</span>:<span class=\"string\">&quot;&gt;=1.0.0&quot;</span>} (current: {<span class=\"string\">&quot;node&quot;</span>:<span class=\"string\">&quot;v0.10.24&quot;</span>,<span class=\"string\">&quot;npm&quot;</span>:<span class=\"string\">&quot;1.3.21&quot;</span>})</span><br><span class=\"line\"><span class=\"built_in\">npm</span> http GET https:<span class=\"regexp\">//</span>registry.<span class=\"built_in\">npm</span>.taobao.org/wrappy</span><br><span class=\"line\"><span class=\"built_in\">npm</span> http GET</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"&#x5347;&#x7EA7;node\"><a href=\"#&#x5347;&#x7EA7;node\" class=\"headerlink\" title=\"&#x5347;&#x7EA7;node\"></a>&#x5347;&#x7EA7;node</h2><p><a href=\"http://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/\" target=\"_blank\" rel=\"noopener\">http://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/</a></p>\n<p>1: Check your current version of Node.</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$<span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br></pre></td></tr></table></figure>\n<p>2: Clear your npm cache<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">npm</span> cache clean -f</span><br></pre></td></tr></table></figure></p>\n<p>3: Install &#x2018;n&#x2019;<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm <span class=\"keyword\">install</span> -g n</span><br></pre></td></tr></table></figure></p>\n<p>4: Upgrade to a stable version<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo n stable</span></span><br></pre></td></tr></table></figure></p>\n<p>5: Check the running version of Node to verify that it has worked:<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$<span class=\"keyword\">node</span> <span class=\"title\">-v</span> v0.<span class=\"number\">8.11</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"&#x91CD;&#x88C5;node\"><a href=\"#&#x91CD;&#x88C5;node\" class=\"headerlink\" title=\"&#x91CD;&#x88C5;node\"></a>&#x91CD;&#x88C5;node</h2><p>&#x53C2;&#x8003;1&#xFF1A; <a href=\"http://linyehui.me/2016/03/03/reinstall-nodejs-on-osx.html\" target=\"_blank\" rel=\"noopener\">http://linyehui.me/2016/03/03/reinstall-nodejs-on-osx.html</a></p>\n<p>&#x53C2;&#x8003;2&#xFF1A; <a href=\"http://icarus4.logdown.com/posts/175092-nodejs-installation-guide\" target=\"_blank\" rel=\"noopener\">http://icarus4.logdown.com/posts/175092-nodejs-installation-guide</a></p>\n<h3 id=\"&#x518D;&#x5B89;&#x88C5;\"><a href=\"#&#x518D;&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x518D;&#x5B89;&#x88C5;\"></a>&#x518D;&#x5B89;&#x88C5;</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ typings install</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\">npm WARN webpack-dev-server@2.1.0-beta.11 requires a peer of webpack@^2.1.0-beta.26 but none was installed.</span><br><span class=\"line\">jingchen@chentekiair ~/work/gitlab/fuwei/ng2-echarts/example $ typings install</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2514;&#x2500;&#x2500; echarts (global)</span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x7F16;&#x8BD1;&#x8FD0;&#x884C;\"><a href=\"#&#x7F16;&#x8BD1;&#x8FD0;&#x884C;\" class=\"headerlink\" title=\"&#x7F16;&#x8BD1;&#x8FD0;&#x884C;\"></a>&#x7F16;&#x8BD1;&#x8FD0;&#x884C;</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">run</span><span class=\"bash\"> build:prod</span></span><br><span class=\"line\"><span class=\"bash\">npm run server:prod</span></span><br></pre></td></tr></table></figure>\n<p>&#x670D;&#x52A1;&#x542F;&#x52A8;&#x6210;&#x529F;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&gt; angular2-webpack-starter@<span class=\"number\">5.0</span><span class=\"number\">.5</span> <span class=\"string\">server:</span>prod <span class=\"regexp\">/Users/</span>jingchen<span class=\"regexp\">/work/</span>gitlab<span class=\"regexp\">/fuwei/</span>ng2-echarts/example</span><br><span class=\"line\">&gt; http-server dist --cors</span><br><span class=\"line\"></span><br><span class=\"line\">Starting up http-server, serving dist</span><br><span class=\"line\">Available <span class=\"string\">on:</span></span><br><span class=\"line\"><span class=\"symbol\">  http:</span><span class=\"comment\">//127.0.0.1:8080</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"&#x6253;&#x5F00;&#x9875;&#x9762;\"><a href=\"#&#x6253;&#x5F00;&#x9875;&#x9762;\" class=\"headerlink\" title=\"&#x6253;&#x5F00;&#x9875;&#x9762;\"></a>&#x6253;&#x5F00;&#x9875;&#x9762;</h3><p><img src=\"http://ogqir9ige.bkt.clouddn.com/826660e135fa7da8393a25133803a9da.png\" alt=\"fuwei_ng_echarts_demo\"></p>\n"},{"layout":"post","title":"Scala_for_impatients_Ch4","date":"2017-03-17T14:22:00.000Z","_content":"# Chapter 4: maps and tuples\n## Note\n\n\n- Scala has a pleasant syntax for creating, querying, and traversing maps.\n    - the call map.get(key) returns an Option object that is either Some(value for key) or None.\n    - for ((k, v) <- map) process k and v\n    - for (v <- scores.values) println(v)\n- You need to choose between mutable and immutable maps.\n    - updating map values only when it is mutable\n    - You can’t update an immutable map, but you can do something that’s just as useful—obtain a new map that has the desired update:\n- By default, you get a hash map, but you can also get a tree map.\n    -  You might want a tree map if you need to visit the keys in sorted order.\n- You can easily convert between Scala and Java maps.\n    - First: import related class\n        - e.g: `import scala.collection.JavaConversions.mapAsScalaMap`\n        -\n    - Second: use java class\n        - e.g: `val scores: scala.collection.mutable.Map[String, Int] = new java.util.TreeMap[String, Int]`\n- Tuples are useful for aggregating values.\n    - Zipping is used to bundle together values so that they can be pro- cessed together\n      - If you have a collection of keys and a parallel collection of values, then zip them up and turn them into a map like` this:keys.zip(values).toMap`\n\n<!--more-->\n## Exercises\n1. Set up a map of prices for a number of gizmos that you covet. Then produce a second map with the same keys and the prices at a 10 percent discount.\n\n\n    ```\n    val prices = Map(\"A\" -> 10, \"B\" -> 20, \"C\" -> 8)\n    val secondPrices = for((k,v) <- prices) yield (k,0.9*v)\n    ```\n2. Write a program that reads words from a file. Use a mutable map to count how often each word appears. To read the words, simply use a java.util.Scanner:\nval in = new java.util.Scanner(java.io.File(\"myfile.txt\")) while (in.hasNext()) process in.next()\nOr look at Chapter 9 for a Scalaesque way.\nAt the end, print out all words and their counts.\n\n\n    ```\n    // 1. reads words from a File\n    val source = Source.fromFile(\"../README.md\").mkString\n    val words = source.split(\"\\\\s+\")\n\n    // 2. Use a mutable map to count how often each word appears.\n    val wordsCount = new HashMap[String, Int]()\n    for(k <- words) {\n      wordsCount(k) = wordsCount.getOrElse(k,0) + 1\n    }\n    println(wordsCount.mkString(\"\\n\"))\n    //\n\n\n    ```\n3. Repeat the preceding exercise with an immutable map.\n\n    ```\n      var wordMap2 = Map[String,Int]()\n      val in = new java.util.Scanner(new java.io.File(\"../README.MD\"))\n\n      while(in.hasNext()) {\n        val key = in.next()\n        wordMap2 += (key -> (wordMap2.getOrElse(key,0)+1))\n      }\n      println(wordMap2)\n    ```\n4. Repeat the preceding exercise with a sorted map, so that the words are printed in sorted order.\n\n\n    ```\n    var wordMap3 = scala.collection.immutable.SortedMap[String,Int]()\n    val in = new java.util.Scanner(new java.io.File(\"../README.MD\"))\n\n    while(in.hasNext()) {\n      val key = in.next()\n      wordMap3 += (key -> (wordMap3.getOrElse(key,0)+1))\n    }\n    println(wordMap3)\n    ```\n\n5. Repeat the preceding exercise with a java.util.TreeMap that you adapt to the Scala API.\n\n\n    ```\n    val wordMap4:scala.collection.mutable.Map[String,Int] = new java.util.TreeMap[String,Int]\n    val in = new java.util.Scanner(new java.io.File(\"../README.MD\"))\n\n    while(in.hasNext()) {\n      val key = in.next()\n      wordMap4 += (key -> (wordMap4.getOrElse(key,0)+1))\n    }\n    println(wordMap4)\n\n    ```\n6. Define a linked hash map that maps \"Monday\" to java.util.Calendar.MONDAY, and similarly for the other weekdays. Demonstrate that the elements are visited in insertion order.\n\n\n    ```\n    import java.util.Calendar\n    import scala.collection.mutable.LinkedHashMap\n\n\n    val map = new LinkedHashMap[String,Int]  \n\n    map += (\"Monday\"->Calendar.MONDAY)  \n    map += (\"Tuesday\"->Calendar.TUESDAY)  \n    map += (\"Wednesday\"->Calendar.WEDNESDAY)  \n    map += (\"Thursday\"->Calendar.THURSDAY)  \n    map += (\"Friday\"->Calendar.FRIDAY)  \n    map += (\"Saturday\"->Calendar.SATURDAY)  \n    map += (\"Sunday\"->Calendar.SUNDAY)  \n\n\n    println(map.mkString(\",\"))  \n\n    ```\n\n7. Print a table of all Java properties, like this:\n49\n\n    ```\n    java.runtime.name sun.boot.library.path java.vm.version java.vm.vendor java.vendor.url path.separator java.vm.name\n    | Java(TM) SE Runtime Environment\n    | /home/apps/jdk1.6.0_21/jre/lib/i386 | 17.0-b16\n    | Sun Microsystems Inc.\n    | http://java.sun.com/\n    | :\n    | Java HotSpot(TM) Server VM\n\n    ```\nYou need to find the length of the longest key before you can print the table.\n\n\n    ```\n      import scala.collection.JavaConversions.propertiesAsScalaMap\n      val pros:scala.collection.Map[String,String] = System.getProperties()\n      val keys = pros.keySet()\n      val keys = pros.keySet\n      val keyLens = for(key <- keys) yield key.length\n      val maxLen = keyLens.max\n      for (key <- keys) {\n        print(key)\n        print(\" \" * (maxLen - key.length))\n        print(\" | \")\n        println(pros(key))\n      }\n    ```\n8. Write a function minmax(values: Array[Int]) that returns a pair containing the smallest and largest values in the array.\n\n    ```\n\n      val values = Array(1,2,3,4,-7,-5,3,-1,6,0)\n\n      def minmax(values: Array[Int]) = {\n        val minV = values.min\n        val maxV = values.max\n        (minV, maxV)\n      }\n\n      minmax(values)\n    ```\n9. Write a function lteqgt(values: Array[Int], v: Int) that returns a triple containing the counts of values less than v, equal to v, and greater than v.\n\n\n    ```\n    def iteqgt(values:Array[Int],v:Int)={\n      (values.count(_<v),values.count(_==v),values.count(_>v))\n    }\n    ```\n10. What happens when you zip together two strings, such as \"Hello\".zip(\"World\")? Come up with a plausible use case.\n","source":"_posts/ProgramStudy/scala-for-impatients-ch4.markdown","raw":"---\nlayout: \"post\"\ntitle: \"Scala_for_impatients_Ch4\"\ndate: \"2017-03-17 22:22\"\n\ntags:\n  - 读书笔记\n  - book:Scala for impatients\n  - scala\n\ncategories:\n  - Study\n  - Scala\n---\n# Chapter 4: maps and tuples\n## Note\n\n\n- Scala has a pleasant syntax for creating, querying, and traversing maps.\n    - the call map.get(key) returns an Option object that is either Some(value for key) or None.\n    - for ((k, v) <- map) process k and v\n    - for (v <- scores.values) println(v)\n- You need to choose between mutable and immutable maps.\n    - updating map values only when it is mutable\n    - You can’t update an immutable map, but you can do something that’s just as useful—obtain a new map that has the desired update:\n- By default, you get a hash map, but you can also get a tree map.\n    -  You might want a tree map if you need to visit the keys in sorted order.\n- You can easily convert between Scala and Java maps.\n    - First: import related class\n        - e.g: `import scala.collection.JavaConversions.mapAsScalaMap`\n        -\n    - Second: use java class\n        - e.g: `val scores: scala.collection.mutable.Map[String, Int] = new java.util.TreeMap[String, Int]`\n- Tuples are useful for aggregating values.\n    - Zipping is used to bundle together values so that they can be pro- cessed together\n      - If you have a collection of keys and a parallel collection of values, then zip them up and turn them into a map like` this:keys.zip(values).toMap`\n\n<!--more-->\n## Exercises\n1. Set up a map of prices for a number of gizmos that you covet. Then produce a second map with the same keys and the prices at a 10 percent discount.\n\n\n    ```\n    val prices = Map(\"A\" -> 10, \"B\" -> 20, \"C\" -> 8)\n    val secondPrices = for((k,v) <- prices) yield (k,0.9*v)\n    ```\n2. Write a program that reads words from a file. Use a mutable map to count how often each word appears. To read the words, simply use a java.util.Scanner:\nval in = new java.util.Scanner(java.io.File(\"myfile.txt\")) while (in.hasNext()) process in.next()\nOr look at Chapter 9 for a Scalaesque way.\nAt the end, print out all words and their counts.\n\n\n    ```\n    // 1. reads words from a File\n    val source = Source.fromFile(\"../README.md\").mkString\n    val words = source.split(\"\\\\s+\")\n\n    // 2. Use a mutable map to count how often each word appears.\n    val wordsCount = new HashMap[String, Int]()\n    for(k <- words) {\n      wordsCount(k) = wordsCount.getOrElse(k,0) + 1\n    }\n    println(wordsCount.mkString(\"\\n\"))\n    //\n\n\n    ```\n3. Repeat the preceding exercise with an immutable map.\n\n    ```\n      var wordMap2 = Map[String,Int]()\n      val in = new java.util.Scanner(new java.io.File(\"../README.MD\"))\n\n      while(in.hasNext()) {\n        val key = in.next()\n        wordMap2 += (key -> (wordMap2.getOrElse(key,0)+1))\n      }\n      println(wordMap2)\n    ```\n4. Repeat the preceding exercise with a sorted map, so that the words are printed in sorted order.\n\n\n    ```\n    var wordMap3 = scala.collection.immutable.SortedMap[String,Int]()\n    val in = new java.util.Scanner(new java.io.File(\"../README.MD\"))\n\n    while(in.hasNext()) {\n      val key = in.next()\n      wordMap3 += (key -> (wordMap3.getOrElse(key,0)+1))\n    }\n    println(wordMap3)\n    ```\n\n5. Repeat the preceding exercise with a java.util.TreeMap that you adapt to the Scala API.\n\n\n    ```\n    val wordMap4:scala.collection.mutable.Map[String,Int] = new java.util.TreeMap[String,Int]\n    val in = new java.util.Scanner(new java.io.File(\"../README.MD\"))\n\n    while(in.hasNext()) {\n      val key = in.next()\n      wordMap4 += (key -> (wordMap4.getOrElse(key,0)+1))\n    }\n    println(wordMap4)\n\n    ```\n6. Define a linked hash map that maps \"Monday\" to java.util.Calendar.MONDAY, and similarly for the other weekdays. Demonstrate that the elements are visited in insertion order.\n\n\n    ```\n    import java.util.Calendar\n    import scala.collection.mutable.LinkedHashMap\n\n\n    val map = new LinkedHashMap[String,Int]  \n\n    map += (\"Monday\"->Calendar.MONDAY)  \n    map += (\"Tuesday\"->Calendar.TUESDAY)  \n    map += (\"Wednesday\"->Calendar.WEDNESDAY)  \n    map += (\"Thursday\"->Calendar.THURSDAY)  \n    map += (\"Friday\"->Calendar.FRIDAY)  \n    map += (\"Saturday\"->Calendar.SATURDAY)  \n    map += (\"Sunday\"->Calendar.SUNDAY)  \n\n\n    println(map.mkString(\",\"))  \n\n    ```\n\n7. Print a table of all Java properties, like this:\n49\n\n    ```\n    java.runtime.name sun.boot.library.path java.vm.version java.vm.vendor java.vendor.url path.separator java.vm.name\n    | Java(TM) SE Runtime Environment\n    | /home/apps/jdk1.6.0_21/jre/lib/i386 | 17.0-b16\n    | Sun Microsystems Inc.\n    | http://java.sun.com/\n    | :\n    | Java HotSpot(TM) Server VM\n\n    ```\nYou need to find the length of the longest key before you can print the table.\n\n\n    ```\n      import scala.collection.JavaConversions.propertiesAsScalaMap\n      val pros:scala.collection.Map[String,String] = System.getProperties()\n      val keys = pros.keySet()\n      val keys = pros.keySet\n      val keyLens = for(key <- keys) yield key.length\n      val maxLen = keyLens.max\n      for (key <- keys) {\n        print(key)\n        print(\" \" * (maxLen - key.length))\n        print(\" | \")\n        println(pros(key))\n      }\n    ```\n8. Write a function minmax(values: Array[Int]) that returns a pair containing the smallest and largest values in the array.\n\n    ```\n\n      val values = Array(1,2,3,4,-7,-5,3,-1,6,0)\n\n      def minmax(values: Array[Int]) = {\n        val minV = values.min\n        val maxV = values.max\n        (minV, maxV)\n      }\n\n      minmax(values)\n    ```\n9. Write a function lteqgt(values: Array[Int], v: Int) that returns a triple containing the counts of values less than v, equal to v, and greater than v.\n\n\n    ```\n    def iteqgt(values:Array[Int],v:Int)={\n      (values.count(_<v),values.count(_==v),values.count(_>v))\n    }\n    ```\n10. What happens when you zip together two strings, such as \"Hello\".zip(\"World\")? Come up with a plausible use case.\n","slug":"ProgramStudy/scala-for-impatients-ch4","published":1,"updated":"2018-09-22T04:16:27.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdo00006ap9kg8hi4ths","content":"<h1 id=\"Chapter-4-maps-and-tuples\"><a href=\"#Chapter-4-maps-and-tuples\" class=\"headerlink\" title=\"Chapter 4: maps and tuples\"></a>Chapter 4: maps and tuples</h1><h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>Scala has a pleasant syntax for creating, querying, and traversing maps.<ul>\n<li>the call map.get(key) returns an Option object that is either Some(value for key) or None.</li>\n<li>for ((k, v) &lt;- map) process k and v</li>\n<li>for (v &lt;- scores.values) println(v)</li>\n</ul>\n</li>\n<li>You need to choose between mutable and immutable maps.<ul>\n<li>updating map values only when it is mutable</li>\n<li>You can&#x2019;t update an immutable map, but you can do something that&#x2019;s just as useful&#x2014;obtain a new map that has the desired update:</li>\n</ul>\n</li>\n<li>By default, you get a hash map, but you can also get a tree map.<ul>\n<li>You might want a tree map if you need to visit the keys in sorted order.</li>\n</ul>\n</li>\n<li>You can easily convert between Scala and Java maps.<ul>\n<li>First: import related class<ul>\n<li>e.g: <code>import scala.collection.JavaConversions.mapAsScalaMap</code><br>-</li>\n</ul>\n</li>\n<li>Second: use java class<ul>\n<li>e.g: <code>val scores: scala.collection.mutable.Map[String, Int] = new java.util.TreeMap[String, Int]</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Tuples are useful for aggregating values.<ul>\n<li>Zipping is used to bundle together values so that they can be pro- cessed together<ul>\n<li>If you have a collection of keys and a parallel collection of values, then zip them up and turn them into a map like<code>this:keys.zip(values).toMap</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"Exercises\"><a href=\"#Exercises\" class=\"headerlink\" title=\"Exercises\"></a>Exercises</h2><ol>\n<li>Set up a map of prices for a number of gizmos that you covet. Then produce a second map with the same keys and the prices at a 10 percent discount.</li>\n</ol>\n<pre><code><figure class=\"highlight ocaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> prices = <span class=\"type\">Map</span>(<span class=\"string\">&quot;A&quot;</span> -&gt; <span class=\"number\">10</span>, <span class=\"string\">&quot;B&quot;</span> -&gt; <span class=\"number\">20</span>, <span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> secondPrices = <span class=\"keyword\">for</span>((k,v) &lt;- prices) yield (k,<span class=\"number\">0.9</span>*v)</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"2\">\n<li>Write a program that reads words from a file. Use a mutable map to count how often each word appears. To read the words, simply use a java.util.Scanner:<br>val in = new java.util.Scanner(java.io.File(&#x201C;myfile.txt&#x201D;)) while (in.hasNext()) process in.next()<br>Or look at Chapter 9 for a Scalaesque way.<br>At the end, print out all words and their counts.</li>\n</ol>\n<pre><code><figure class=\"highlight pony\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. reads words from a File</span></span><br><span class=\"line\"><span class=\"meta\">val</span> source = <span class=\"type\">Source</span>.fromFile(<span class=\"string\">&quot;../README.md&quot;</span>).mkString</span><br><span class=\"line\"><span class=\"meta\">val</span> words = source.split(<span class=\"string\">&quot;\\\\s+&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. Use a mutable map to count how often each word appears.</span></span><br><span class=\"line\"><span class=\"meta\">val</span> wordsCount = <span class=\"function\"><span class=\"keyword\">new</span> <span class=\"title\">HashMap</span>[<span class=\"title\">String</span>, <span class=\"title\">Int</span>]()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">for</span>(k &lt;- words) {</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">wordsCount</span>(k) = <span class=\"title\">wordsCount</span>.<span class=\"title\">getOrElse</span>(k,<span class=\"number\">0</span>) + 1</span></span><br><span class=\"line\"><span class=\"function\">}</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span>(wordsCount.mkString(&quot;\\n&quot;))</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//</span></span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"3\">\n<li><p>Repeat the preceding exercise with an immutable map.</p>\n <figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">var</span> wordMap2 = Map[String,Int]()</span><br><span class=\"line\">val <span class=\"keyword\">in</span> = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Scanner</span>(new java<span class=\"selector-class\">.io</span><span class=\"selector-class\">.File</span>(<span class=\"string\">&quot;../README.MD&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">while</span><span class=\"params\">(in.hasNext()</span></span>) {</span><br><span class=\"line\">  val key = <span class=\"keyword\">in</span>.next()</span><br><span class=\"line\">  wordMap2 += (key -&gt; (wordMap2.getOrElse(key,<span class=\"number\">0</span>)+<span class=\"number\">1</span>))</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span><span class=\"params\">(wordMap2)</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Repeat the preceding exercise with a sorted map, so that the words are printed in sorted order.</p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">var</span> wordMap3 = scala<span class=\"selector-class\">.collection</span><span class=\"selector-class\">.immutable</span><span class=\"selector-class\">.SortedMap</span>[String,Int]()</span><br><span class=\"line\">val <span class=\"keyword\">in</span> = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Scanner</span>(new java<span class=\"selector-class\">.io</span><span class=\"selector-class\">.File</span>(<span class=\"string\">&quot;../README.MD&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">while</span><span class=\"params\">(in.hasNext()</span></span>) {</span><br><span class=\"line\">  val key = <span class=\"keyword\">in</span>.next()</span><br><span class=\"line\">  wordMap3 += (key -&gt; (wordMap3.getOrElse(key,<span class=\"number\">0</span>)+<span class=\"number\">1</span>))</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span><span class=\"params\">(wordMap3)</span></span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"5\">\n<li>Repeat the preceding exercise with a java.util.TreeMap that you adapt to the Scala API.</li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val wordMap4:scala<span class=\"selector-class\">.collection</span><span class=\"selector-class\">.mutable</span><span class=\"selector-class\">.Map</span>[String,Int] = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.TreeMap</span>[String,Int]</span><br><span class=\"line\">val <span class=\"keyword\">in</span> = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Scanner</span>(new java<span class=\"selector-class\">.io</span><span class=\"selector-class\">.File</span>(<span class=\"string\">&quot;../README.MD&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">while</span><span class=\"params\">(in.hasNext()</span></span>) {</span><br><span class=\"line\">  val key = <span class=\"keyword\">in</span>.next()</span><br><span class=\"line\">  wordMap4 += (key -&gt; (wordMap4.getOrElse(key,<span class=\"number\">0</span>)+<span class=\"number\">1</span>))</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span><span class=\"params\">(wordMap4)</span></span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"6\">\n<li>Define a linked hash map that maps &#x201C;Monday&#x201D; to java.util.Calendar.MONDAY, and similarly for the other weekdays. Demonstrate that the elements are visited in insertion order.</li>\n</ol>\n<pre><code><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar</span><br><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.<span class=\"keyword\">mutable</span>.LinkedHashMap</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">val <span class=\"built_in\">map</span> = <span class=\"keyword\">new</span> LinkedHashMap[<span class=\"keyword\">String</span>,Int]  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Monday&quot;</span>-&gt;Calendar.MONDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Tuesday&quot;</span>-&gt;Calendar.TUESDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Wednesday&quot;</span>-&gt;Calendar.WEDNESDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Thursday&quot;</span>-&gt;Calendar.THURSDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Friday&quot;</span>-&gt;Calendar.FRIDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Saturday&quot;</span>-&gt;Calendar.SATURDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Sunday&quot;</span>-&gt;Calendar.SUNDAY)  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">println</span>(<span class=\"built_in\">map</span>.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"7\">\n<li><p>Print a table of all Java properties, like this:<br>49</p>\n <figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.<span class=\"keyword\">runtime</span>.name <span class=\"keyword\">sun</span>.boot.library.path java.<span class=\"keyword\">vm</span>.<span class=\"keyword\">version</span> java.<span class=\"keyword\">vm</span>.vendor java.vendor.url path.separator java.<span class=\"keyword\">vm</span>.name</span><br><span class=\"line\">| Java(TM) SE Runtime Environment</span><br><span class=\"line\">| /home/apps/jdk1.<span class=\"number\">6.0</span>_21/jre/lib/i386 | <span class=\"number\">17.0</span>-b16</span><br><span class=\"line\">| Sun Microsystems Inc.</span><br><span class=\"line\">| http://java.<span class=\"keyword\">sun</span>.<span class=\"keyword\">com</span>/</span><br><span class=\"line\">| :</span><br><span class=\"line\">| Java HotSpot(TM) Server VM</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>You need to find the length of the longest key before you can print the table.</p>\n<pre><code><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.JavaConversions.propertiesAsScalaMap</span><br><span class=\"line\">val pros:scala.collection.Map[<span class=\"keyword\">String</span>,<span class=\"keyword\">String</span>] = System.getProperties()</span><br><span class=\"line\">val keys = pros.keySet()</span><br><span class=\"line\">val keys = pros.keySet</span><br><span class=\"line\">val keyLens = <span class=\"keyword\">for</span>(<span class=\"built_in\">key</span> &lt;- keys) yield <span class=\"built_in\">key</span>.length</span><br><span class=\"line\">val maxLen = keyLens.<span class=\"built_in\">max</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">key</span> &lt;- keys) {</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"built_in\">key</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot; &quot;</span> * (maxLen - <span class=\"built_in\">key</span>.length))</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot; | &quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">println</span>(pros(<span class=\"built_in\">key</span>))</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"8\">\n<li><p>Write a function minmax(values: Array[Int]) that returns a pair containing the smallest and largest values in the array.</p>\n <figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">val <span class=\"built_in\">values</span> = Array(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,-<span class=\"number\">7</span>,-<span class=\"number\">5</span>,<span class=\"number\">3</span>,-<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">def minmax(<span class=\"built_in\">values</span>: Array[Int]) = {</span><br><span class=\"line\">  val minV = <span class=\"built_in\">values</span>.<span class=\"built_in\">min</span></span><br><span class=\"line\">  val maxV = <span class=\"built_in\">values</span>.<span class=\"built_in\">max</span></span><br><span class=\"line\">  (minV, maxV)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">minmax(<span class=\"built_in\">values</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a function lteqgt(values: Array[Int], v: Int) that returns a triple containing the counts of values less than v, equal to v, and greater than v.</p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def iteqgt(value<span class=\"variable\">s:Array</span>[Int],<span class=\"variable\">v:Int</span>)={</span><br><span class=\"line\">  (<span class=\"built_in\">values</span>.<span class=\"built_in\">count</span>(_&lt;v),<span class=\"built_in\">values</span>.<span class=\"built_in\">count</span>(_==v),<span class=\"built_in\">values</span>.<span class=\"built_in\">count</span>(_&gt;v))</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"10\">\n<li>What happens when you zip together two strings, such as &#x201C;Hello&#x201D;.zip(&#x201C;World&#x201D;)? Come up with a plausible use case.</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"Chapter-4-maps-and-tuples\"><a href=\"#Chapter-4-maps-and-tuples\" class=\"headerlink\" title=\"Chapter 4: maps and tuples\"></a>Chapter 4: maps and tuples</h1><h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>Scala has a pleasant syntax for creating, querying, and traversing maps.<ul>\n<li>the call map.get(key) returns an Option object that is either Some(value for key) or None.</li>\n<li>for ((k, v) &lt;- map) process k and v</li>\n<li>for (v &lt;- scores.values) println(v)</li>\n</ul>\n</li>\n<li>You need to choose between mutable and immutable maps.<ul>\n<li>updating map values only when it is mutable</li>\n<li>You can&#x2019;t update an immutable map, but you can do something that&#x2019;s just as useful&#x2014;obtain a new map that has the desired update:</li>\n</ul>\n</li>\n<li>By default, you get a hash map, but you can also get a tree map.<ul>\n<li>You might want a tree map if you need to visit the keys in sorted order.</li>\n</ul>\n</li>\n<li>You can easily convert between Scala and Java maps.<ul>\n<li>First: import related class<ul>\n<li>e.g: <code>import scala.collection.JavaConversions.mapAsScalaMap</code><br>-</li>\n</ul>\n</li>\n<li>Second: use java class<ul>\n<li>e.g: <code>val scores: scala.collection.mutable.Map[String, Int] = new java.util.TreeMap[String, Int]</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Tuples are useful for aggregating values.<ul>\n<li>Zipping is used to bundle together values so that they can be pro- cessed together<ul>\n<li>If you have a collection of keys and a parallel collection of values, then zip them up and turn them into a map like<code>this:keys.zip(values).toMap</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","more":"<h2 id=\"Exercises\"><a href=\"#Exercises\" class=\"headerlink\" title=\"Exercises\"></a>Exercises</h2><ol>\n<li>Set up a map of prices for a number of gizmos that you covet. Then produce a second map with the same keys and the prices at a 10 percent discount.</li>\n</ol>\n<pre><code><figure class=\"highlight ocaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> prices = <span class=\"type\">Map</span>(<span class=\"string\">&quot;A&quot;</span> -&gt; <span class=\"number\">10</span>, <span class=\"string\">&quot;B&quot;</span> -&gt; <span class=\"number\">20</span>, <span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> secondPrices = <span class=\"keyword\">for</span>((k,v) &lt;- prices) yield (k,<span class=\"number\">0.9</span>*v)</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"2\">\n<li>Write a program that reads words from a file. Use a mutable map to count how often each word appears. To read the words, simply use a java.util.Scanner:<br>val in = new java.util.Scanner(java.io.File(&#x201C;myfile.txt&#x201D;)) while (in.hasNext()) process in.next()<br>Or look at Chapter 9 for a Scalaesque way.<br>At the end, print out all words and their counts.</li>\n</ol>\n<pre><code><figure class=\"highlight pony\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. reads words from a File</span></span><br><span class=\"line\"><span class=\"meta\">val</span> source = <span class=\"type\">Source</span>.fromFile(<span class=\"string\">&quot;../README.md&quot;</span>).mkString</span><br><span class=\"line\"><span class=\"meta\">val</span> words = source.split(<span class=\"string\">&quot;\\\\s+&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. Use a mutable map to count how often each word appears.</span></span><br><span class=\"line\"><span class=\"meta\">val</span> wordsCount = <span class=\"function\"><span class=\"keyword\">new</span> <span class=\"title\">HashMap</span>[<span class=\"title\">String</span>, <span class=\"title\">Int</span>]()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">for</span>(k &lt;- words) {</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">wordsCount</span>(k) = <span class=\"title\">wordsCount</span>.<span class=\"title\">getOrElse</span>(k,<span class=\"number\">0</span>) + 1</span></span><br><span class=\"line\"><span class=\"function\">}</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span>(wordsCount.mkString(&quot;\\n&quot;))</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//</span></span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"3\">\n<li><p>Repeat the preceding exercise with an immutable map.</p>\n <figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">var</span> wordMap2 = Map[String,Int]()</span><br><span class=\"line\">val <span class=\"keyword\">in</span> = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Scanner</span>(new java<span class=\"selector-class\">.io</span><span class=\"selector-class\">.File</span>(<span class=\"string\">&quot;../README.MD&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">while</span><span class=\"params\">(in.hasNext()</span></span>) {</span><br><span class=\"line\">  val key = <span class=\"keyword\">in</span>.next()</span><br><span class=\"line\">  wordMap2 += (key -&gt; (wordMap2.getOrElse(key,<span class=\"number\">0</span>)+<span class=\"number\">1</span>))</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span><span class=\"params\">(wordMap2)</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Repeat the preceding exercise with a sorted map, so that the words are printed in sorted order.</p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">var</span> wordMap3 = scala<span class=\"selector-class\">.collection</span><span class=\"selector-class\">.immutable</span><span class=\"selector-class\">.SortedMap</span>[String,Int]()</span><br><span class=\"line\">val <span class=\"keyword\">in</span> = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Scanner</span>(new java<span class=\"selector-class\">.io</span><span class=\"selector-class\">.File</span>(<span class=\"string\">&quot;../README.MD&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">while</span><span class=\"params\">(in.hasNext()</span></span>) {</span><br><span class=\"line\">  val key = <span class=\"keyword\">in</span>.next()</span><br><span class=\"line\">  wordMap3 += (key -&gt; (wordMap3.getOrElse(key,<span class=\"number\">0</span>)+<span class=\"number\">1</span>))</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span><span class=\"params\">(wordMap3)</span></span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"5\">\n<li>Repeat the preceding exercise with a java.util.TreeMap that you adapt to the Scala API.</li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val wordMap4:scala<span class=\"selector-class\">.collection</span><span class=\"selector-class\">.mutable</span><span class=\"selector-class\">.Map</span>[String,Int] = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.TreeMap</span>[String,Int]</span><br><span class=\"line\">val <span class=\"keyword\">in</span> = new java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Scanner</span>(new java<span class=\"selector-class\">.io</span><span class=\"selector-class\">.File</span>(<span class=\"string\">&quot;../README.MD&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">while</span><span class=\"params\">(in.hasNext()</span></span>) {</span><br><span class=\"line\">  val key = <span class=\"keyword\">in</span>.next()</span><br><span class=\"line\">  wordMap4 += (key -&gt; (wordMap4.getOrElse(key,<span class=\"number\">0</span>)+<span class=\"number\">1</span>))</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">println</span><span class=\"params\">(wordMap4)</span></span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"6\">\n<li>Define a linked hash map that maps &#x201C;Monday&#x201D; to java.util.Calendar.MONDAY, and similarly for the other weekdays. Demonstrate that the elements are visited in insertion order.</li>\n</ol>\n<pre><code><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar</span><br><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.<span class=\"keyword\">mutable</span>.LinkedHashMap</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">val <span class=\"built_in\">map</span> = <span class=\"keyword\">new</span> LinkedHashMap[<span class=\"keyword\">String</span>,Int]  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Monday&quot;</span>-&gt;Calendar.MONDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Tuesday&quot;</span>-&gt;Calendar.TUESDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Wednesday&quot;</span>-&gt;Calendar.WEDNESDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Thursday&quot;</span>-&gt;Calendar.THURSDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Friday&quot;</span>-&gt;Calendar.FRIDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Saturday&quot;</span>-&gt;Calendar.SATURDAY)  </span><br><span class=\"line\"><span class=\"built_in\">map</span> += (<span class=\"string\">&quot;Sunday&quot;</span>-&gt;Calendar.SUNDAY)  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">println</span>(<span class=\"built_in\">map</span>.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"7\">\n<li><p>Print a table of all Java properties, like this:<br>49</p>\n <figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.<span class=\"keyword\">runtime</span>.name <span class=\"keyword\">sun</span>.boot.library.path java.<span class=\"keyword\">vm</span>.<span class=\"keyword\">version</span> java.<span class=\"keyword\">vm</span>.vendor java.vendor.url path.separator java.<span class=\"keyword\">vm</span>.name</span><br><span class=\"line\">| Java(TM) SE Runtime Environment</span><br><span class=\"line\">| /home/apps/jdk1.<span class=\"number\">6.0</span>_21/jre/lib/i386 | <span class=\"number\">17.0</span>-b16</span><br><span class=\"line\">| Sun Microsystems Inc.</span><br><span class=\"line\">| http://java.<span class=\"keyword\">sun</span>.<span class=\"keyword\">com</span>/</span><br><span class=\"line\">| :</span><br><span class=\"line\">| Java HotSpot(TM) Server VM</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>You need to find the length of the longest key before you can print the table.</p>\n<pre><code><figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scala.collection.JavaConversions.propertiesAsScalaMap</span><br><span class=\"line\">val pros:scala.collection.Map[<span class=\"keyword\">String</span>,<span class=\"keyword\">String</span>] = System.getProperties()</span><br><span class=\"line\">val keys = pros.keySet()</span><br><span class=\"line\">val keys = pros.keySet</span><br><span class=\"line\">val keyLens = <span class=\"keyword\">for</span>(<span class=\"built_in\">key</span> &lt;- keys) yield <span class=\"built_in\">key</span>.length</span><br><span class=\"line\">val maxLen = keyLens.<span class=\"built_in\">max</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">key</span> &lt;- keys) {</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"built_in\">key</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot; &quot;</span> * (maxLen - <span class=\"built_in\">key</span>.length))</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot; | &quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">println</span>(pros(<span class=\"built_in\">key</span>))</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"8\">\n<li><p>Write a function minmax(values: Array[Int]) that returns a pair containing the smallest and largest values in the array.</p>\n <figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">val <span class=\"built_in\">values</span> = Array(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,-<span class=\"number\">7</span>,-<span class=\"number\">5</span>,<span class=\"number\">3</span>,-<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">def minmax(<span class=\"built_in\">values</span>: Array[Int]) = {</span><br><span class=\"line\">  val minV = <span class=\"built_in\">values</span>.<span class=\"built_in\">min</span></span><br><span class=\"line\">  val maxV = <span class=\"built_in\">values</span>.<span class=\"built_in\">max</span></span><br><span class=\"line\">  (minV, maxV)</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">minmax(<span class=\"built_in\">values</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write a function lteqgt(values: Array[Int], v: Int) that returns a triple containing the counts of values less than v, equal to v, and greater than v.</p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def iteqgt(value<span class=\"variable\">s:Array</span>[Int],<span class=\"variable\">v:Int</span>)={</span><br><span class=\"line\">  (<span class=\"built_in\">values</span>.<span class=\"built_in\">count</span>(_&lt;v),<span class=\"built_in\">values</span>.<span class=\"built_in\">count</span>(_==v),<span class=\"built_in\">values</span>.<span class=\"built_in\">count</span>(_&gt;v))</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"10\">\n<li>What happens when you zip together two strings, such as &#x201C;Hello&#x201D;.zip(&#x201C;World&#x201D;)? Come up with a plausible use case.</li>\n</ol>"},{"layout":"post","title":"Hexo搭建个人BLOG","date":"2016-11-06T11:57:00.000Z","update":"2018-09-20 10:23","_content":"\n## Hexo介绍\n\n[使用 Hexo 为自己在 Github 上建一个静态 Blog 站点][1]\n[1]: http://xiaolai.li/2016/06/22/makecs-build-a-blog-with-hexo-on-github/ \"使用 Hexo 为自己在 Github 上建一个静态 Blog 站点\"\n\n[用 Hexo 搭建个人博客-01：6 步初体验][3]\n[3]: http://www.jianshu.com/p/6bd12ab160fa \"用 Hexo 搭建个人博客-01：6 步初体验\"\n\n本文\b介绍了`Hexo`搭建博客的主要步骤，以及迁移Hexo到新环境遇到的问题以及解决方案。\n\n\n<!-- More -->\n## 环境和工具准备\n\n### 工具准备\n\n- git\n- npm\n- hexo\n\n### GIT\n\n#### GIT安装\n\n关于GIT的用法，可以参考[《Pro Git》][2]。\n\n[2]: http://iissnan.com/progit/ \"《Pro Git》\"\n\n```\ngit -v\n```\n\n### NPM\n\n```\nnpm -v\n```\n\n\n## 安装\n### REPO准备\n\n- 准备一个REPO\n    - 自己本来就有\n    - REPO的申请方法可以参考\n\n\n### 安装HEXO\n  - npm install hexo -g\n  - npm install hexo-cli -g\n      - 这一步出错，暂时不管\n\n\n### 准备本地目录\n  - clone到本地，这部似乎是非必须的\n  - Hexo初始化本地目录\n\n```bash\nhexo init yourname.github. c  youname.github.io\nnpm install hexo-deployer-git --save\nhexo generate\nhexo server\n```\n\n- 在地址栏里输入： localhost:4000\n\n- 发布到github上\n    - 编辑_config.yml：\n\n```\ndeploy\n  type: git\n  repo: https://github.com/yourname/yourname.github.io.git\n\n```\n\n## 配置\n\n### 标签页\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ：\n```\n$ cd your-hexo-site\n$ hexo new page tags\n```\n\n\n### 分类页\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ：\n```\n$ cd your-hexo-site\n$ hexo new page categories\n```\n\n\n----\n## hexo迁移\n\n\b最近需要在另一台电脑部署hexo，将hexo的代码直接copy过去，遇到一些奇怪的问题。\n\n### 问题一：\n在hexo的目录里面执行hexo clean，提示：\n```\nERROR Plugin load failed: hexo-renderer-sass\n```\n采用很多方法，重装saas，安装也显示成功，最后还是不行。考虑到自己换了一个系统，可能hexo目录下面的node-moduels下面的库和npm版本并不兼容。采用[PabloEzequiel commented on 3 Jan 2017](https://github.com/sass/node-sass/issues/1527)的方法，删除node-module，重新安装依赖包\n```\nrm -rf node_module \nnpm install\n```\n果然，成功了。\n\n### 问题二：\n\nhexo g成功，但hexo s（server）时候，报错\n```\nWARN No layout: index.html出现这个问题会删除index.html的内容\n```\n出现这个问题，我先删除public里面的index.html文件。同时，发现theme里面文件不对，于是更新theme，然后重新generate\n\n### 问题三：\ntags和categoreis不生效，导致BLOG的分类和标签页没有正确显示。\n具体做法：\n\n```\n> hexo new page \"tags\" \n```\n\nedit tags/index.md\n\n```\n# tags/index.md\ntype: \"tags\"\nlayout: \"tags\"\n```\n\nedit categoreis/index.md\n```\ntype: \"categories\"\nlayout: \"categories\"\n```\n","source":"_posts/tools/2016-11-06-hexo1.markdown","raw":"---\nlayout: \"post\"\ntitle: \"Hexo搭建个人BLOG\"\ndate: \"2016-11-06 19:57\"\nupdate: \"2018-09-20 10:23\"\ntag:\n- Tool\n- Hexo\ncategories:\n- Tool\n\n---\n\n## Hexo介绍\n\n[使用 Hexo 为自己在 Github 上建一个静态 Blog 站点][1]\n[1]: http://xiaolai.li/2016/06/22/makecs-build-a-blog-with-hexo-on-github/ \"使用 Hexo 为自己在 Github 上建一个静态 Blog 站点\"\n\n[用 Hexo 搭建个人博客-01：6 步初体验][3]\n[3]: http://www.jianshu.com/p/6bd12ab160fa \"用 Hexo 搭建个人博客-01：6 步初体验\"\n\n本文\b介绍了`Hexo`搭建博客的主要步骤，以及迁移Hexo到新环境遇到的问题以及解决方案。\n\n\n<!-- More -->\n## 环境和工具准备\n\n### 工具准备\n\n- git\n- npm\n- hexo\n\n### GIT\n\n#### GIT安装\n\n关于GIT的用法，可以参考[《Pro Git》][2]。\n\n[2]: http://iissnan.com/progit/ \"《Pro Git》\"\n\n```\ngit -v\n```\n\n### NPM\n\n```\nnpm -v\n```\n\n\n## 安装\n### REPO准备\n\n- 准备一个REPO\n    - 自己本来就有\n    - REPO的申请方法可以参考\n\n\n### 安装HEXO\n  - npm install hexo -g\n  - npm install hexo-cli -g\n      - 这一步出错，暂时不管\n\n\n### 准备本地目录\n  - clone到本地，这部似乎是非必须的\n  - Hexo初始化本地目录\n\n```bash\nhexo init yourname.github. c  youname.github.io\nnpm install hexo-deployer-git --save\nhexo generate\nhexo server\n```\n\n- 在地址栏里输入： localhost:4000\n\n- 发布到github上\n    - 编辑_config.yml：\n\n```\ndeploy\n  type: git\n  repo: https://github.com/yourname/yourname.github.io.git\n\n```\n\n## 配置\n\n### 标签页\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ：\n```\n$ cd your-hexo-site\n$ hexo new page tags\n```\n\n\n### 分类页\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ：\n```\n$ cd your-hexo-site\n$ hexo new page categories\n```\n\n\n----\n## hexo迁移\n\n\b最近需要在另一台电脑部署hexo，将hexo的代码直接copy过去，遇到一些奇怪的问题。\n\n### 问题一：\n在hexo的目录里面执行hexo clean，提示：\n```\nERROR Plugin load failed: hexo-renderer-sass\n```\n采用很多方法，重装saas，安装也显示成功，最后还是不行。考虑到自己换了一个系统，可能hexo目录下面的node-moduels下面的库和npm版本并不兼容。采用[PabloEzequiel commented on 3 Jan 2017](https://github.com/sass/node-sass/issues/1527)的方法，删除node-module，重新安装依赖包\n```\nrm -rf node_module \nnpm install\n```\n果然，成功了。\n\n### 问题二：\n\nhexo g成功，但hexo s（server）时候，报错\n```\nWARN No layout: index.html出现这个问题会删除index.html的内容\n```\n出现这个问题，我先删除public里面的index.html文件。同时，发现theme里面文件不对，于是更新theme，然后重新generate\n\n### 问题三：\ntags和categoreis不生效，导致BLOG的分类和标签页没有正确显示。\n具体做法：\n\n```\n> hexo new page \"tags\" \n```\n\nedit tags/index.md\n\n```\n# tags/index.md\ntype: \"tags\"\nlayout: \"tags\"\n```\n\nedit categoreis/index.md\n```\ntype: \"categories\"\nlayout: \"categories\"\n```\n","slug":"tools/2016-11-06-hexo1","published":1,"updated":"2018-09-22T04:15:35.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdo30007ap9kb5mtdzsa","content":"<h2 id=\"Hexo&#x4ECB;&#x7ECD;\"><a href=\"#Hexo&#x4ECB;&#x7ECD;\" class=\"headerlink\" title=\"Hexo&#x4ECB;&#x7ECD;\"></a>Hexo&#x4ECB;&#x7ECD;</h2><p>[&#x4F7F;&#x7528; Hexo &#x4E3A;&#x81EA;&#x5DF1;&#x5728; Github &#x4E0A;&#x5EFA;&#x4E00;&#x4E2A;&#x9759;&#x6001; Blog &#x7AD9;&#x70B9;][1]<br>[1]: <a href=\"http://xiaolai.li/2016/06/22/makecs-build-a-blog-with-hexo-on-github/\" target=\"_blank\" rel=\"noopener\">http://xiaolai.li/2016/06/22/makecs-build-a-blog-with-hexo-on-github/</a> &#x201C;&#x4F7F;&#x7528; Hexo &#x4E3A;&#x81EA;&#x5DF1;&#x5728; Github &#x4E0A;&#x5EFA;&#x4E00;&#x4E2A;&#x9759;&#x6001; Blog &#x7AD9;&#x70B9;&#x201D;</p>\n<p>[&#x7528; Hexo &#x642D;&#x5EFA;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;-01&#xFF1A;6 &#x6B65;&#x521D;&#x4F53;&#x9A8C;][3]<br>[3]: <a href=\"http://www.jianshu.com/p/6bd12ab160fa\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/6bd12ab160fa</a> &#x201C;&#x7528; Hexo &#x642D;&#x5EFA;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;-01&#xFF1A;6 &#x6B65;&#x521D;&#x4F53;&#x9A8C;&#x201D;</p>\n<p>&#x672C;&#x6587;\b&#x4ECB;&#x7ECD;&#x4E86;<code>Hexo</code>&#x642D;&#x5EFA;&#x535A;&#x5BA2;&#x7684;&#x4E3B;&#x8981;&#x6B65;&#x9AA4;&#xFF0C;&#x4EE5;&#x53CA;&#x8FC1;&#x79FB;Hexo&#x5230;&#x65B0;&#x73AF;&#x5883;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x4EE5;&#x53CA;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p>\n<a id=\"more\"></a>\n<h2 id=\"&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;\"><a href=\"#&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;\" class=\"headerlink\" title=\"&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;\"></a>&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;</h2><h3 id=\"&#x5DE5;&#x5177;&#x51C6;&#x5907;\"><a href=\"#&#x5DE5;&#x5177;&#x51C6;&#x5907;\" class=\"headerlink\" title=\"&#x5DE5;&#x5177;&#x51C6;&#x5907;\"></a>&#x5DE5;&#x5177;&#x51C6;&#x5907;</h3><ul>\n<li>git</li>\n<li>npm</li>\n<li>hexo</li>\n</ul>\n<h3 id=\"GIT\"><a href=\"#GIT\" class=\"headerlink\" title=\"GIT\"></a>GIT</h3><h4 id=\"GIT&#x5B89;&#x88C5;\"><a href=\"#GIT&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"GIT&#x5B89;&#x88C5;\"></a>GIT&#x5B89;&#x88C5;</h4><p>&#x5173;&#x4E8E;GIT&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href=\"http://iissnan.com/progit/\" title=\"&#x300A;Pro Git&#x300B;\" target=\"_blank\" rel=\"noopener\">&#x300A;Pro Git&#x300B;</a>&#x3002;</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">git -v</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h3><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> -v</span><br></pre></td></tr></table></figure>\n<h2 id=\"&#x5B89;&#x88C5;\"><a href=\"#&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;\"></a>&#x5B89;&#x88C5;</h2><h3 id=\"REPO&#x51C6;&#x5907;\"><a href=\"#REPO&#x51C6;&#x5907;\" class=\"headerlink\" title=\"REPO&#x51C6;&#x5907;\"></a>REPO&#x51C6;&#x5907;</h3><ul>\n<li>&#x51C6;&#x5907;&#x4E00;&#x4E2A;REPO<ul>\n<li>&#x81EA;&#x5DF1;&#x672C;&#x6765;&#x5C31;&#x6709;</li>\n<li>REPO&#x7684;&#x7533;&#x8BF7;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"&#x5B89;&#x88C5;HEXO\"><a href=\"#&#x5B89;&#x88C5;HEXO\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;HEXO\"></a>&#x5B89;&#x88C5;HEXO</h3><ul>\n<li>npm install hexo -g</li>\n<li>npm install hexo-cli -g<ul>\n<li>&#x8FD9;&#x4E00;&#x6B65;&#x51FA;&#x9519;&#xFF0C;&#x6682;&#x65F6;&#x4E0D;&#x7BA1;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;\"><a href=\"#&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;\" class=\"headerlink\" title=\"&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;\"></a>&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;</h3><ul>\n<li>clone&#x5230;&#x672C;&#x5730;&#xFF0C;&#x8FD9;&#x90E8;&#x4F3C;&#x4E4E;&#x662F;&#x975E;&#x5FC5;&#x987B;&#x7684;</li>\n<li>Hexo&#x521D;&#x59CB;&#x5316;&#x672C;&#x5730;&#x76EE;&#x5F55;</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init yourname.github. c  youname.github.io</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>&#x5728;&#x5730;&#x5740;&#x680F;&#x91CC;&#x8F93;&#x5165;&#xFF1A; localhost:4000</p>\n</li>\n<li><p>&#x53D1;&#x5E03;&#x5230;github&#x4E0A;</p>\n<ul>\n<li>&#x7F16;&#x8F91;_config.yml&#xFF1A;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy</span><br><span class=\"line\"><span class=\"symbol\">  type:</span> git</span><br><span class=\"line\"><span class=\"symbol\">  repo:</span> https:<span class=\"comment\">//github.com/yourname/yourname.github.io.git</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"&#x914D;&#x7F6E;\"><a href=\"#&#x914D;&#x7F6E;\" class=\"headerlink\" title=\"&#x914D;&#x7F6E;\"></a>&#x914D;&#x7F6E;</h2><h3 id=\"&#x6807;&#x7B7E;&#x9875;\"><a href=\"#&#x6807;&#x7B7E;&#x9875;\" class=\"headerlink\" title=\"&#x6807;&#x7B7E;&#x9875;\"></a>&#x6807;&#x7B7E;&#x9875;</h3><p>&#x5728;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x4E0B;&#xFF0C;&#x5B9A;&#x4F4D;&#x5230; Hexo &#x7AD9;&#x70B9;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x4F7F;&#x7528; hexo new page &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x547D;&#x540D;&#x4E3A; tags &#xFF1A;<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>tags</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"&#x5206;&#x7C7B;&#x9875;\"><a href=\"#&#x5206;&#x7C7B;&#x9875;\" class=\"headerlink\" title=\"&#x5206;&#x7C7B;&#x9875;\"></a>&#x5206;&#x7C7B;&#x9875;</h3><p>&#x5728;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x4E0B;&#xFF0C;&#x5B9A;&#x4F4D;&#x5230; Hexo &#x7AD9;&#x70B9;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x4F7F;&#x7528; hexo new page &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x547D;&#x540D;&#x4E3A; categories &#xFF1A;<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>categories</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"hexo&#x8FC1;&#x79FB;\"><a href=\"#hexo&#x8FC1;&#x79FB;\" class=\"headerlink\" title=\"hexo&#x8FC1;&#x79FB;\"></a>hexo&#x8FC1;&#x79FB;</h2><p>\b&#x6700;&#x8FD1;&#x9700;&#x8981;&#x5728;&#x53E6;&#x4E00;&#x53F0;&#x7535;&#x8111;&#x90E8;&#x7F72;hexo&#xFF0C;&#x5C06;hexo&#x7684;&#x4EE3;&#x7801;&#x76F4;&#x63A5;copy&#x8FC7;&#x53BB;&#xFF0C;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x5947;&#x602A;&#x7684;&#x95EE;&#x9898;&#x3002;</p>\n<h3 id=\"&#x95EE;&#x9898;&#x4E00;&#xFF1A;\"><a href=\"#&#x95EE;&#x9898;&#x4E00;&#xFF1A;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;&#x4E00;&#xFF1A;\"></a>&#x95EE;&#x9898;&#x4E00;&#xFF1A;</h3><p>&#x5728;hexo&#x7684;&#x76EE;&#x5F55;&#x91CC;&#x9762;&#x6267;&#x884C;hexo clean&#xFF0C;&#x63D0;&#x793A;&#xFF1A;<br><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ERROR </span>Plugin load failed: hexo-renderer-sass</span><br></pre></td></tr></table></figure></p>\n<p>&#x91C7;&#x7528;&#x5F88;&#x591A;&#x65B9;&#x6CD5;&#xFF0C;&#x91CD;&#x88C5;saas&#xFF0C;&#x5B89;&#x88C5;&#x4E5F;&#x663E;&#x793A;&#x6210;&#x529F;&#xFF0C;&#x6700;&#x540E;&#x8FD8;&#x662F;&#x4E0D;&#x884C;&#x3002;&#x8003;&#x8651;&#x5230;&#x81EA;&#x5DF1;&#x6362;&#x4E86;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#xFF0C;&#x53EF;&#x80FD;hexo&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#x7684;node-moduels&#x4E0B;&#x9762;&#x7684;&#x5E93;&#x548C;npm&#x7248;&#x672C;&#x5E76;&#x4E0D;&#x517C;&#x5BB9;&#x3002;&#x91C7;&#x7528;<a href=\"https://github.com/sass/node-sass/issues/1527\" target=\"_blank\" rel=\"noopener\">PabloEzequiel commented on 3 Jan 2017</a>&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5220;&#x9664;node-module&#xFF0C;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#x5305;<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf node_module </span><br><span class=\"line\">npm <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure></p>\n<p>&#x679C;&#x7136;&#xFF0C;&#x6210;&#x529F;&#x4E86;&#x3002;</p>\n<h3 id=\"&#x95EE;&#x9898;&#x4E8C;&#xFF1A;\"><a href=\"#&#x95EE;&#x9898;&#x4E8C;&#xFF1A;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;&#x4E8C;&#xFF1A;\"></a>&#x95EE;&#x9898;&#x4E8C;&#xFF1A;</h3><p>hexo g&#x6210;&#x529F;&#xFF0C;&#x4F46;hexo s&#xFF08;server&#xFF09;&#x65F6;&#x5019;&#xFF0C;&#x62A5;&#x9519;<br><figure class=\"highlight glsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARN No <span class=\"keyword\">layout</span>: <span class=\"keyword\">index</span>.html&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4F1A;&#x5220;&#x9664;<span class=\"keyword\">index</span>.html&#x7684;&#x5185;&#x5BB9;</span><br></pre></td></tr></table></figure></p>\n<p>&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x5148;&#x5220;&#x9664;public&#x91CC;&#x9762;&#x7684;index.html&#x6587;&#x4EF6;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;theme&#x91CC;&#x9762;&#x6587;&#x4EF6;&#x4E0D;&#x5BF9;&#xFF0C;&#x4E8E;&#x662F;&#x66F4;&#x65B0;theme&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;generate</p>\n<h3 id=\"&#x95EE;&#x9898;&#x4E09;&#xFF1A;\"><a href=\"#&#x95EE;&#x9898;&#x4E09;&#xFF1A;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;&#x4E09;&#xFF1A;\"></a>&#x95EE;&#x9898;&#x4E09;&#xFF1A;</h3><p>tags&#x548C;categoreis&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x5BFC;&#x81F4;BLOG&#x7684;&#x5206;&#x7C7B;&#x548C;&#x6807;&#x7B7E;&#x9875;&#x6CA1;&#x6709;&#x6B63;&#x786E;&#x663E;&#x793A;&#x3002;<br>&#x5177;&#x4F53;&#x505A;&#x6CD5;&#xFF1A;</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; hexo new<span class=\"built_in\"> page </span><span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>\n<p>edit tags/index.md</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"keyword\">tags</span>/<span class=\"built_in\">index</span>.md</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">layou<span class=\"variable\">t:</span> <span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>\n<p>edit categoreis/index.md<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">type:</span> <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">layout:</span> <span class=\"string\">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Hexo&#x4ECB;&#x7ECD;\"><a href=\"#Hexo&#x4ECB;&#x7ECD;\" class=\"headerlink\" title=\"Hexo&#x4ECB;&#x7ECD;\"></a>Hexo&#x4ECB;&#x7ECD;</h2><p>[&#x4F7F;&#x7528; Hexo &#x4E3A;&#x81EA;&#x5DF1;&#x5728; Github &#x4E0A;&#x5EFA;&#x4E00;&#x4E2A;&#x9759;&#x6001; Blog &#x7AD9;&#x70B9;][1]<br>[1]: <a href=\"http://xiaolai.li/2016/06/22/makecs-build-a-blog-with-hexo-on-github/\" target=\"_blank\" rel=\"noopener\">http://xiaolai.li/2016/06/22/makecs-build-a-blog-with-hexo-on-github/</a> &#x201C;&#x4F7F;&#x7528; Hexo &#x4E3A;&#x81EA;&#x5DF1;&#x5728; Github &#x4E0A;&#x5EFA;&#x4E00;&#x4E2A;&#x9759;&#x6001; Blog &#x7AD9;&#x70B9;&#x201D;</p>\n<p>[&#x7528; Hexo &#x642D;&#x5EFA;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;-01&#xFF1A;6 &#x6B65;&#x521D;&#x4F53;&#x9A8C;][3]<br>[3]: <a href=\"http://www.jianshu.com/p/6bd12ab160fa\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/6bd12ab160fa</a> &#x201C;&#x7528; Hexo &#x642D;&#x5EFA;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;-01&#xFF1A;6 &#x6B65;&#x521D;&#x4F53;&#x9A8C;&#x201D;</p>\n<p>&#x672C;&#x6587;\b&#x4ECB;&#x7ECD;&#x4E86;<code>Hexo</code>&#x642D;&#x5EFA;&#x535A;&#x5BA2;&#x7684;&#x4E3B;&#x8981;&#x6B65;&#x9AA4;&#xFF0C;&#x4EE5;&#x53CA;&#x8FC1;&#x79FB;Hexo&#x5230;&#x65B0;&#x73AF;&#x5883;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x4EE5;&#x53CA;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p>","more":"<h2 id=\"&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;\"><a href=\"#&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;\" class=\"headerlink\" title=\"&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;\"></a>&#x73AF;&#x5883;&#x548C;&#x5DE5;&#x5177;&#x51C6;&#x5907;</h2><h3 id=\"&#x5DE5;&#x5177;&#x51C6;&#x5907;\"><a href=\"#&#x5DE5;&#x5177;&#x51C6;&#x5907;\" class=\"headerlink\" title=\"&#x5DE5;&#x5177;&#x51C6;&#x5907;\"></a>&#x5DE5;&#x5177;&#x51C6;&#x5907;</h3><ul>\n<li>git</li>\n<li>npm</li>\n<li>hexo</li>\n</ul>\n<h3 id=\"GIT\"><a href=\"#GIT\" class=\"headerlink\" title=\"GIT\"></a>GIT</h3><h4 id=\"GIT&#x5B89;&#x88C5;\"><a href=\"#GIT&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"GIT&#x5B89;&#x88C5;\"></a>GIT&#x5B89;&#x88C5;</h4><p>&#x5173;&#x4E8E;GIT&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href=\"http://iissnan.com/progit/\" title=\"&#x300A;Pro Git&#x300B;\" target=\"_blank\" rel=\"noopener\">&#x300A;Pro Git&#x300B;</a>&#x3002;</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">git -v</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h3><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> -v</span><br></pre></td></tr></table></figure>\n<h2 id=\"&#x5B89;&#x88C5;\"><a href=\"#&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;\"></a>&#x5B89;&#x88C5;</h2><h3 id=\"REPO&#x51C6;&#x5907;\"><a href=\"#REPO&#x51C6;&#x5907;\" class=\"headerlink\" title=\"REPO&#x51C6;&#x5907;\"></a>REPO&#x51C6;&#x5907;</h3><ul>\n<li>&#x51C6;&#x5907;&#x4E00;&#x4E2A;REPO<ul>\n<li>&#x81EA;&#x5DF1;&#x672C;&#x6765;&#x5C31;&#x6709;</li>\n<li>REPO&#x7684;&#x7533;&#x8BF7;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"&#x5B89;&#x88C5;HEXO\"><a href=\"#&#x5B89;&#x88C5;HEXO\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;HEXO\"></a>&#x5B89;&#x88C5;HEXO</h3><ul>\n<li>npm install hexo -g</li>\n<li>npm install hexo-cli -g<ul>\n<li>&#x8FD9;&#x4E00;&#x6B65;&#x51FA;&#x9519;&#xFF0C;&#x6682;&#x65F6;&#x4E0D;&#x7BA1;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;\"><a href=\"#&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;\" class=\"headerlink\" title=\"&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;\"></a>&#x51C6;&#x5907;&#x672C;&#x5730;&#x76EE;&#x5F55;</h3><ul>\n<li>clone&#x5230;&#x672C;&#x5730;&#xFF0C;&#x8FD9;&#x90E8;&#x4F3C;&#x4E4E;&#x662F;&#x975E;&#x5FC5;&#x987B;&#x7684;</li>\n<li>Hexo&#x521D;&#x59CB;&#x5316;&#x672C;&#x5730;&#x76EE;&#x5F55;</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init yourname.github. c  youname.github.io</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>&#x5728;&#x5730;&#x5740;&#x680F;&#x91CC;&#x8F93;&#x5165;&#xFF1A; localhost:4000</p>\n</li>\n<li><p>&#x53D1;&#x5E03;&#x5230;github&#x4E0A;</p>\n<ul>\n<li>&#x7F16;&#x8F91;_config.yml&#xFF1A;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy</span><br><span class=\"line\"><span class=\"symbol\">  type:</span> git</span><br><span class=\"line\"><span class=\"symbol\">  repo:</span> https:<span class=\"comment\">//github.com/yourname/yourname.github.io.git</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"&#x914D;&#x7F6E;\"><a href=\"#&#x914D;&#x7F6E;\" class=\"headerlink\" title=\"&#x914D;&#x7F6E;\"></a>&#x914D;&#x7F6E;</h2><h3 id=\"&#x6807;&#x7B7E;&#x9875;\"><a href=\"#&#x6807;&#x7B7E;&#x9875;\" class=\"headerlink\" title=\"&#x6807;&#x7B7E;&#x9875;\"></a>&#x6807;&#x7B7E;&#x9875;</h3><p>&#x5728;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x4E0B;&#xFF0C;&#x5B9A;&#x4F4D;&#x5230; Hexo &#x7AD9;&#x70B9;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x4F7F;&#x7528; hexo new page &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x547D;&#x540D;&#x4E3A; tags &#xFF1A;<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>tags</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"&#x5206;&#x7C7B;&#x9875;\"><a href=\"#&#x5206;&#x7C7B;&#x9875;\" class=\"headerlink\" title=\"&#x5206;&#x7C7B;&#x9875;\"></a>&#x5206;&#x7C7B;&#x9875;</h3><p>&#x5728;&#x7EC8;&#x7AEF;&#x7A97;&#x53E3;&#x4E0B;&#xFF0C;&#x5B9A;&#x4F4D;&#x5230; Hexo &#x7AD9;&#x70B9;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x4F7F;&#x7528; hexo new page &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x547D;&#x540D;&#x4E3A; categories &#xFF1A;<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>categories</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"hexo&#x8FC1;&#x79FB;\"><a href=\"#hexo&#x8FC1;&#x79FB;\" class=\"headerlink\" title=\"hexo&#x8FC1;&#x79FB;\"></a>hexo&#x8FC1;&#x79FB;</h2><p>\b&#x6700;&#x8FD1;&#x9700;&#x8981;&#x5728;&#x53E6;&#x4E00;&#x53F0;&#x7535;&#x8111;&#x90E8;&#x7F72;hexo&#xFF0C;&#x5C06;hexo&#x7684;&#x4EE3;&#x7801;&#x76F4;&#x63A5;copy&#x8FC7;&#x53BB;&#xFF0C;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x5947;&#x602A;&#x7684;&#x95EE;&#x9898;&#x3002;</p>\n<h3 id=\"&#x95EE;&#x9898;&#x4E00;&#xFF1A;\"><a href=\"#&#x95EE;&#x9898;&#x4E00;&#xFF1A;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;&#x4E00;&#xFF1A;\"></a>&#x95EE;&#x9898;&#x4E00;&#xFF1A;</h3><p>&#x5728;hexo&#x7684;&#x76EE;&#x5F55;&#x91CC;&#x9762;&#x6267;&#x884C;hexo clean&#xFF0C;&#x63D0;&#x793A;&#xFF1A;<br><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ERROR </span>Plugin load failed: hexo-renderer-sass</span><br></pre></td></tr></table></figure></p>\n<p>&#x91C7;&#x7528;&#x5F88;&#x591A;&#x65B9;&#x6CD5;&#xFF0C;&#x91CD;&#x88C5;saas&#xFF0C;&#x5B89;&#x88C5;&#x4E5F;&#x663E;&#x793A;&#x6210;&#x529F;&#xFF0C;&#x6700;&#x540E;&#x8FD8;&#x662F;&#x4E0D;&#x884C;&#x3002;&#x8003;&#x8651;&#x5230;&#x81EA;&#x5DF1;&#x6362;&#x4E86;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#xFF0C;&#x53EF;&#x80FD;hexo&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#x7684;node-moduels&#x4E0B;&#x9762;&#x7684;&#x5E93;&#x548C;npm&#x7248;&#x672C;&#x5E76;&#x4E0D;&#x517C;&#x5BB9;&#x3002;&#x91C7;&#x7528;<a href=\"https://github.com/sass/node-sass/issues/1527\" target=\"_blank\" rel=\"noopener\">PabloEzequiel commented on 3 Jan 2017</a>&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5220;&#x9664;node-module&#xFF0C;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#x5305;<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf node_module </span><br><span class=\"line\">npm <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure></p>\n<p>&#x679C;&#x7136;&#xFF0C;&#x6210;&#x529F;&#x4E86;&#x3002;</p>\n<h3 id=\"&#x95EE;&#x9898;&#x4E8C;&#xFF1A;\"><a href=\"#&#x95EE;&#x9898;&#x4E8C;&#xFF1A;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;&#x4E8C;&#xFF1A;\"></a>&#x95EE;&#x9898;&#x4E8C;&#xFF1A;</h3><p>hexo g&#x6210;&#x529F;&#xFF0C;&#x4F46;hexo s&#xFF08;server&#xFF09;&#x65F6;&#x5019;&#xFF0C;&#x62A5;&#x9519;<br><figure class=\"highlight glsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARN No <span class=\"keyword\">layout</span>: <span class=\"keyword\">index</span>.html&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4F1A;&#x5220;&#x9664;<span class=\"keyword\">index</span>.html&#x7684;&#x5185;&#x5BB9;</span><br></pre></td></tr></table></figure></p>\n<p>&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x5148;&#x5220;&#x9664;public&#x91CC;&#x9762;&#x7684;index.html&#x6587;&#x4EF6;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;theme&#x91CC;&#x9762;&#x6587;&#x4EF6;&#x4E0D;&#x5BF9;&#xFF0C;&#x4E8E;&#x662F;&#x66F4;&#x65B0;theme&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;generate</p>\n<h3 id=\"&#x95EE;&#x9898;&#x4E09;&#xFF1A;\"><a href=\"#&#x95EE;&#x9898;&#x4E09;&#xFF1A;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;&#x4E09;&#xFF1A;\"></a>&#x95EE;&#x9898;&#x4E09;&#xFF1A;</h3><p>tags&#x548C;categoreis&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x5BFC;&#x81F4;BLOG&#x7684;&#x5206;&#x7C7B;&#x548C;&#x6807;&#x7B7E;&#x9875;&#x6CA1;&#x6709;&#x6B63;&#x786E;&#x663E;&#x793A;&#x3002;<br>&#x5177;&#x4F53;&#x505A;&#x6CD5;&#xFF1A;</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; hexo new<span class=\"built_in\"> page </span><span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>\n<p>edit tags/index.md</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"keyword\">tags</span>/<span class=\"built_in\">index</span>.md</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">layou<span class=\"variable\">t:</span> <span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>\n<p>edit categoreis/index.md<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">type:</span> <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\"><span class=\"symbol\">layout:</span> <span class=\"string\">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure></p>"},{"layout":"post","title":"Scala_for_impatients_Ch3","date":"2017-03-16T09:23:00.000Z","_content":"\n## Note\n\n- Use an Array if the length is fixed, and an ArrayBuffer if the length can vary.\n- Don’t use new when supplying initial values.\n- Use () to access elements.\n- Use for (elem <- arr) to traverse the elements.\n    - elem <- 0 until s.length\n    - elem <- 0 until s. length reverse\n    - elem <- 0 untial (s.length, 2) reverse // visit every second element\n\n\n- Use for (elem <- arr if . . . ) . . . yield . . . to transform into a new array.\n    - The for (...) yield loop creates a new collection of the same type as the original collection.\n    - The result contains the expressions after the yield, one for each iteration of the loop.\n    - Keep in mind that the result is a new collection—the original collection is not affected.\n- Scala and Java arrays are interoperable; with ArrayBuffer, use scala.collection. JavaConversions.\n    - The Scala buffer is wrapped into an object of a Java class that implements the java.util.List interface.\n\n<!--more-->\n## Exercises\n1. Write a code snippet that sets a to an array of n random integers between 0 (inclusive) and n (exclusive).\n\n\n    ```\n    def randNum(n:Int):Array[Int] = {\n      val a = scala.util.Random\n      val b = new Array[Int](n)\n      for(i <- 0 until b.length) {\n        b(i) = a.nextInt(n)\n      }\n      b\n    }\n\n    val n = 10\n    println(randNum(n).mkString(\" \"))\n\n\n    ```\n2. Write a loop that swaps adjacent elements of an array of integers. For example, Array(1, 2, 3, 4, 5) becomes Array(2, 1, 4, 3, 5).\n\n\n    ```\n\n\n    def swapsArray(a:Array[Int]) = {\n\n      val b = new ArrayBuffer[Int]()\n\n      for (i <- 0 until a.length if i%2 == 0) {\n\n        if (i+1 < a.length) {\n          b += a(i+1)\n        }\n        b += a(i)\n      }\n      b\n\n    }\n    val a = Array(1,2,3,4,5,6,7,8,9,10)\n    val b = swapsArray(a)\n    println(b.mkString(\",\"))\n    ```\n\n3. Repeat the preceding assignment, but produce a new array with the swapped values. Use for/yield.\n\n    ```\n\n      def swapsArray2(a:Array[Int]) = {\n          val temp = for(i <- 0 until (a.length, 2)) yield {\n            if (i < a.length-1) Array(a(i+1), a(i))\n            else Array(a(i))\n          }\n          val b = temp.flatten.toArray\n          println(b.mkString(\",\"))\n          b\n      }\n\n      val a = Array(1,2,3,4,5,6,7,8,9,10)\n      val b = swapsArray(a)\n      println(b.mkString(\",\"))\n    ```\n4. Given an array of integers, produce a new array that contains all positive values of the original array, in their original order, followed by all values that are zero or negative, in their original order.\n\n\n    ```\n    def generate(a:Array[Int]) = {\n        val pos = for(i <- 0 until a.length if a(i)>0) yield {\n          a(i)\n        }\n        val neg = for(i <- 0 until a.length if a(i)<=0) yield {\n          a(i)\n        }\n        val b = Array(pos, neg).flatten.toArray\n        b\n    }\n\n    val a = Array(1,2,-4,-1,0,3,4,5,-8,6,7,8,9,10,-4,-5,-6)\n    val b = generate(a)\n    println(b.mkString(\",\"))\n\n    ```\n5. How do you compute the average of an Array[Double]?\n\n\n    ```\n      def avg(d: Array[Double]) = {\n        if (d.length <=0) 0\n        else {\n          d.sum/d.length\n        }\n      }\n    ```\n6. How do you rearrange the elements of an Array[Int] so that they appear in\n\n\n    ```\n    for(i <- 0 until h.length/2) {\n     val tmp = h(i)\n\n     h(i) = h(h.length-i-1)\n     h(h.length-i-1) = tmp\n     }\n    ```\nreverse sorted order? How do you do the same with an ArrayBuffer[Int]?\n7. Write a code snippet that produces all values from an array with duplicates\nremoved. (Hint: Look at Scaladoc.)\n\n    ```\n      val h = Array(1, 2, 2.3, 4.4,5.6,1,2,9,3,2)\n      println(h.distinct.mkString(\",\"))\n    ```\n\n\n> def distinct: Array[T]\n>\n> Builds a new mutable indexed sequence from this mutable indexed sequence without any duplicate elements.\n\n\n\n\n\n\n8. Rewrite the example at the end of Section 3.4, “Transforming Arrays,” on page 34 using the drop method for dropping the index of the first match. Look the method up in Scaladoc.\n\n\n9. Make a collection of all time zones returned by java.util.TimeZone.getAvailableIDs that are in America. Strip off the \"America/\" prefix and sort the result.\n\n\n      ```\n        val zonetime= java.util.TimeZone.getAvailableIDs\n        val timeList = zonetime.filter(_.take(8)==\"America/\")\n        val sortedAmericaTime = timeList.map(_.drop(8)).sorted\n\n      ```\n10. Import java.awt.datatransfer._ and make an object of type SystemFlavorMap with the call\nval flavors = SystemFlavorMap.getDefaultFlavorMap().asInstanceOf[SystemFlavorMap]\nThen call the getNativesForFlavor method with parameter DataFlavor.imageFlavor and get the return value as a Scala buffer. (Why this obscure class? It’s hard to find uses of java.util.List in the standard Java library.)\n","source":"_posts/ProgramStudy/scala-for-impatients-ch3.markdown","raw":"---\nlayout: \"post\"\ntitle: \"Scala_for_impatients_Ch3\"\ndate: \"2017-03-16 17:23\"\n\ntags:\n  - 读书笔记\n  - book:Scala for impatients\n  - scala\n\ncategories:\n  - Study\n  - Scala\n---\n\n## Note\n\n- Use an Array if the length is fixed, and an ArrayBuffer if the length can vary.\n- Don’t use new when supplying initial values.\n- Use () to access elements.\n- Use for (elem <- arr) to traverse the elements.\n    - elem <- 0 until s.length\n    - elem <- 0 until s. length reverse\n    - elem <- 0 untial (s.length, 2) reverse // visit every second element\n\n\n- Use for (elem <- arr if . . . ) . . . yield . . . to transform into a new array.\n    - The for (...) yield loop creates a new collection of the same type as the original collection.\n    - The result contains the expressions after the yield, one for each iteration of the loop.\n    - Keep in mind that the result is a new collection—the original collection is not affected.\n- Scala and Java arrays are interoperable; with ArrayBuffer, use scala.collection. JavaConversions.\n    - The Scala buffer is wrapped into an object of a Java class that implements the java.util.List interface.\n\n<!--more-->\n## Exercises\n1. Write a code snippet that sets a to an array of n random integers between 0 (inclusive) and n (exclusive).\n\n\n    ```\n    def randNum(n:Int):Array[Int] = {\n      val a = scala.util.Random\n      val b = new Array[Int](n)\n      for(i <- 0 until b.length) {\n        b(i) = a.nextInt(n)\n      }\n      b\n    }\n\n    val n = 10\n    println(randNum(n).mkString(\" \"))\n\n\n    ```\n2. Write a loop that swaps adjacent elements of an array of integers. For example, Array(1, 2, 3, 4, 5) becomes Array(2, 1, 4, 3, 5).\n\n\n    ```\n\n\n    def swapsArray(a:Array[Int]) = {\n\n      val b = new ArrayBuffer[Int]()\n\n      for (i <- 0 until a.length if i%2 == 0) {\n\n        if (i+1 < a.length) {\n          b += a(i+1)\n        }\n        b += a(i)\n      }\n      b\n\n    }\n    val a = Array(1,2,3,4,5,6,7,8,9,10)\n    val b = swapsArray(a)\n    println(b.mkString(\",\"))\n    ```\n\n3. Repeat the preceding assignment, but produce a new array with the swapped values. Use for/yield.\n\n    ```\n\n      def swapsArray2(a:Array[Int]) = {\n          val temp = for(i <- 0 until (a.length, 2)) yield {\n            if (i < a.length-1) Array(a(i+1), a(i))\n            else Array(a(i))\n          }\n          val b = temp.flatten.toArray\n          println(b.mkString(\",\"))\n          b\n      }\n\n      val a = Array(1,2,3,4,5,6,7,8,9,10)\n      val b = swapsArray(a)\n      println(b.mkString(\",\"))\n    ```\n4. Given an array of integers, produce a new array that contains all positive values of the original array, in their original order, followed by all values that are zero or negative, in their original order.\n\n\n    ```\n    def generate(a:Array[Int]) = {\n        val pos = for(i <- 0 until a.length if a(i)>0) yield {\n          a(i)\n        }\n        val neg = for(i <- 0 until a.length if a(i)<=0) yield {\n          a(i)\n        }\n        val b = Array(pos, neg).flatten.toArray\n        b\n    }\n\n    val a = Array(1,2,-4,-1,0,3,4,5,-8,6,7,8,9,10,-4,-5,-6)\n    val b = generate(a)\n    println(b.mkString(\",\"))\n\n    ```\n5. How do you compute the average of an Array[Double]?\n\n\n    ```\n      def avg(d: Array[Double]) = {\n        if (d.length <=0) 0\n        else {\n          d.sum/d.length\n        }\n      }\n    ```\n6. How do you rearrange the elements of an Array[Int] so that they appear in\n\n\n    ```\n    for(i <- 0 until h.length/2) {\n     val tmp = h(i)\n\n     h(i) = h(h.length-i-1)\n     h(h.length-i-1) = tmp\n     }\n    ```\nreverse sorted order? How do you do the same with an ArrayBuffer[Int]?\n7. Write a code snippet that produces all values from an array with duplicates\nremoved. (Hint: Look at Scaladoc.)\n\n    ```\n      val h = Array(1, 2, 2.3, 4.4,5.6,1,2,9,3,2)\n      println(h.distinct.mkString(\",\"))\n    ```\n\n\n> def distinct: Array[T]\n>\n> Builds a new mutable indexed sequence from this mutable indexed sequence without any duplicate elements.\n\n\n\n\n\n\n8. Rewrite the example at the end of Section 3.4, “Transforming Arrays,” on page 34 using the drop method for dropping the index of the first match. Look the method up in Scaladoc.\n\n\n9. Make a collection of all time zones returned by java.util.TimeZone.getAvailableIDs that are in America. Strip off the \"America/\" prefix and sort the result.\n\n\n      ```\n        val zonetime= java.util.TimeZone.getAvailableIDs\n        val timeList = zonetime.filter(_.take(8)==\"America/\")\n        val sortedAmericaTime = timeList.map(_.drop(8)).sorted\n\n      ```\n10. Import java.awt.datatransfer._ and make an object of type SystemFlavorMap with the call\nval flavors = SystemFlavorMap.getDefaultFlavorMap().asInstanceOf[SystemFlavorMap]\nThen call the getNativesForFlavor method with parameter DataFlavor.imageFlavor and get the return value as a Scala buffer. (Why this obscure class? It’s hard to find uses of java.util.List in the standard Java library.)\n","slug":"ProgramStudy/scala-for-impatients-ch3","published":1,"updated":"2018-09-22T04:16:31.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdo50008ap9ko4d6sftu","content":"<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>Use an Array if the length is fixed, and an ArrayBuffer if the length can vary.</li>\n<li>Don&#x2019;t use new when supplying initial values.</li>\n<li>Use () to access elements.</li>\n<li>Use for (elem &lt;- arr) to traverse the elements.<ul>\n<li>elem &lt;- 0 until s.length</li>\n<li>elem &lt;- 0 until s. length reverse</li>\n<li>elem &lt;- 0 untial (s.length, 2) reverse // visit every second element</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Use for (elem &lt;- arr if . . . ) . . . yield . . . to transform into a new array.<ul>\n<li>The for (&#x2026;) yield loop creates a new collection of the same type as the original collection.</li>\n<li>The result contains the expressions after the yield, one for each iteration of the loop.</li>\n<li>Keep in mind that the result is a new collection&#x2014;the original collection is not affected.</li>\n</ul>\n</li>\n<li>Scala and Java arrays are interoperable; with ArrayBuffer, use scala.collection. JavaConversions.<ul>\n<li>The Scala buffer is wrapped into an object of a Java class that implements the java.util.List interface.</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"Exercises\"><a href=\"#Exercises\" class=\"headerlink\" title=\"Exercises\"></a>Exercises</h2><ol>\n<li>Write a code snippet that sets a to an array of n random integers between 0 (inclusive) and n (exclusive).</li>\n</ol>\n<pre><code><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def randNum(n:Int):Array[Int] = {</span><br><span class=\"line\">  val a = scala.util.Random</span><br><span class=\"line\">  val b = new Array[<span class=\"string\">Int</span>](<span class=\"link\">n</span>)</span><br><span class=\"line\">  for(i <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span> <span class=\"attr\">0</span> <span class=\"attr\">until</span> <span class=\"attr\">b.length</span>) {</span></span></span><br><span class=\"line\"><span class=\"xml\">    b(i) = a.nextInt(n)</span></span><br><span class=\"line\"><span class=\"xml\">  }</span></span><br><span class=\"line\"><span class=\"xml\">  b</span></span><br><span class=\"line\"><span class=\"xml\">}</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">val n = 10</span></span><br><span class=\"line\"><span class=\"xml\">println(randNum(n).mkString(&quot; &quot;))</span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"2\">\n<li>Write a loop that swaps adjacent elements of an array of integers. For example, Array(1, 2, 3, 4, 5) becomes Array(2, 1, 4, 3, 5).</li>\n</ol>\n<pre><code><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def swapsArray(a:Array[Int]) = {</span><br><span class=\"line\"></span><br><span class=\"line\">  val b = new ArrayBuffer[Int]()</span><br><span class=\"line\"></span><br><span class=\"line\">  for (i &lt;- 0 until a.length if i%2 == 0) {</span><br><span class=\"line\"></span><br><span class=\"line\">    if (i+1 &lt; a.length) {</span><br><span class=\"line\">      b += a(i+1)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    b += a(i)</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"attribute\">b</span></span><br><span class=\"line\"><span class=\"attribute\"></span></span><br><span class=\"line\"><span class=\"attribute\">}</span></span><br><span class=\"line\">val a = Array(1,2,3,4,5,6,7,8,9,10)</span><br><span class=\"line\">val b = swapsArray(a)</span><br><span class=\"line\"><span class=\"attribute\">println(b.mkString(&quot;,&quot;))</span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"3\">\n<li><p>Repeat the preceding assignment, but produce a new array with the swapped values. Use for/yield.</p>\n <figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">swapsArray2</span></span>(a:<span class=\"type\">Array</span>[<span class=\"type\">Int</span>]) = {</span><br><span class=\"line\">    <span class=\"keyword\">val</span> temp = <span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> until (a.length, <span class=\"number\">2</span>)) <span class=\"keyword\">yield</span> {</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; a.length<span class=\"number\">-1</span>) <span class=\"type\">Array</span>(a(i+<span class=\"number\">1</span>), a(i))</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"type\">Array</span>(a(i))</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">val</span> b = temp.flatten.toArray</span><br><span class=\"line\">    println(b.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br><span class=\"line\">    b</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">val</span> a = <span class=\"type\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> b = swapsArray(a)</span><br><span class=\"line\">println(b.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Given an array of integers, produce a new array that contains all positive values of the original array, in their original order, followed by all values that are zero or negative, in their original order.</p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def <span class=\"keyword\">generate</span>(a:Array[Int]) = {</span><br><span class=\"line\">    val pos = <span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> <span class=\"keyword\">until</span> a<span class=\"variable\">.length</span> <span class=\"keyword\">if</span> a(i)&gt;<span class=\"number\">0</span>) yield {</span><br><span class=\"line\">      a(i)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    val neg = <span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> <span class=\"keyword\">until</span> a<span class=\"variable\">.length</span> <span class=\"keyword\">if</span> a(i)&lt;=<span class=\"number\">0</span>) yield {</span><br><span class=\"line\">      a(i)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    val b = Array(pos, neg)<span class=\"variable\">.flatten</span><span class=\"variable\">.toArray</span></span><br><span class=\"line\">    b</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">val a = Array(<span class=\"number\">1</span>,<span class=\"number\">2</span>,-<span class=\"number\">4</span>,-<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,-<span class=\"number\">8</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,-<span class=\"number\">4</span>,-<span class=\"number\">5</span>,-<span class=\"number\">6</span>)</span><br><span class=\"line\">val b = <span class=\"keyword\">generate</span>(a)</span><br><span class=\"line\">println(b<span class=\"variable\">.mkString</span>(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"5\">\n<li>How do you compute the average of an Array[Double]?</li>\n</ol>\n<pre><code><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">avg</span><span class=\"params\">(<span class=\"symbol\">d:</span> Array[Double])</span></span> = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (d.length &lt;=<span class=\"number\">0</span>) <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    d.sum/d.length</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"6\">\n<li>How do you rearrange the elements of an Array[Int] so that they appear in</li>\n</ol>\n<pre><code><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> <span class=\"keyword\">until</span> h.<span class=\"built_in\">length</span>/<span class=\"number\">2</span>) {</span><br><span class=\"line\"> val tmp = h(i)</span><br><span class=\"line\"></span><br><span class=\"line\"> h(i) = h(h.<span class=\"built_in\">length</span>-i<span class=\"number\">-1</span>)</span><br><span class=\"line\"> h(h.<span class=\"built_in\">length</span>-i<span class=\"number\">-1</span>) = tmp</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n</code></pre><p>reverse sorted order? How do you do the same with an ArrayBuffer[Int]?</p>\n<ol start=\"7\">\n<li><p>Write a code snippet that produces all values from an array with duplicates<br>removed. (Hint: Look at Scaladoc.)</p>\n <figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val h = Array(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2.3</span>, <span class=\"number\">4.4</span>,<span class=\"number\">5.6</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">println(h.distinct.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>def distinct: Array[T]</p>\n<p>Builds a new mutable indexed sequence from this mutable indexed sequence without any duplicate elements.</p>\n</blockquote>\n<ol start=\"8\">\n<li>Rewrite the example at the end of Section 3.4, &#x201C;Transforming Arrays,&#x201D; on page 34 using the drop method for dropping the index of the first match. Look the method up in Scaladoc.</li>\n</ol>\n<ol start=\"9\">\n<li>Make a collection of all time zones returned by java.util.TimeZone.getAvailableIDs that are in America. Strip off the &#x201C;America/&#x201C; prefix and sort the result.</li>\n</ol>\n<pre><code><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val <span class=\"attr\">zonetime=</span> java.util.TimeZone.getAvailableIDs</span><br><span class=\"line\">val <span class=\"attr\">timeList</span> = zonetime.filter(_.take(<span class=\"number\">8</span>)==<span class=\"string\">&quot;America/&quot;</span>)</span><br><span class=\"line\">val <span class=\"attr\">sortedAmericaTime</span> = timeList.<span class=\"built_in\">map</span>(_.drop(<span class=\"number\">8</span>)).sorted</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"10\">\n<li>Import java.awt.datatransfer._ and make an object of type SystemFlavorMap with the call<br>val flavors = SystemFlavorMap.getDefaultFlavorMap().asInstanceOf[SystemFlavorMap]<br>Then call the getNativesForFlavor method with parameter DataFlavor.imageFlavor and get the return value as a Scala buffer. (Why this obscure class? It&#x2019;s hard to find uses of java.util.List in the standard Java library.)</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>Use an Array if the length is fixed, and an ArrayBuffer if the length can vary.</li>\n<li>Don&#x2019;t use new when supplying initial values.</li>\n<li>Use () to access elements.</li>\n<li>Use for (elem &lt;- arr) to traverse the elements.<ul>\n<li>elem &lt;- 0 until s.length</li>\n<li>elem &lt;- 0 until s. length reverse</li>\n<li>elem &lt;- 0 untial (s.length, 2) reverse // visit every second element</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Use for (elem &lt;- arr if . . . ) . . . yield . . . to transform into a new array.<ul>\n<li>The for (&#x2026;) yield loop creates a new collection of the same type as the original collection.</li>\n<li>The result contains the expressions after the yield, one for each iteration of the loop.</li>\n<li>Keep in mind that the result is a new collection&#x2014;the original collection is not affected.</li>\n</ul>\n</li>\n<li>Scala and Java arrays are interoperable; with ArrayBuffer, use scala.collection. JavaConversions.<ul>\n<li>The Scala buffer is wrapped into an object of a Java class that implements the java.util.List interface.</li>\n</ul>\n</li>\n</ul>","more":"<h2 id=\"Exercises\"><a href=\"#Exercises\" class=\"headerlink\" title=\"Exercises\"></a>Exercises</h2><ol>\n<li>Write a code snippet that sets a to an array of n random integers between 0 (inclusive) and n (exclusive).</li>\n</ol>\n<pre><code><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def randNum(n:Int):Array[Int] = {</span><br><span class=\"line\">  val a = scala.util.Random</span><br><span class=\"line\">  val b = new Array[<span class=\"string\">Int</span>](<span class=\"link\">n</span>)</span><br><span class=\"line\">  for(i <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span> <span class=\"attr\">0</span> <span class=\"attr\">until</span> <span class=\"attr\">b.length</span>) {</span></span></span><br><span class=\"line\"><span class=\"xml\">    b(i) = a.nextInt(n)</span></span><br><span class=\"line\"><span class=\"xml\">  }</span></span><br><span class=\"line\"><span class=\"xml\">  b</span></span><br><span class=\"line\"><span class=\"xml\">}</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">val n = 10</span></span><br><span class=\"line\"><span class=\"xml\">println(randNum(n).mkString(&quot; &quot;))</span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"2\">\n<li>Write a loop that swaps adjacent elements of an array of integers. For example, Array(1, 2, 3, 4, 5) becomes Array(2, 1, 4, 3, 5).</li>\n</ol>\n<pre><code><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def swapsArray(a:Array[Int]) = {</span><br><span class=\"line\"></span><br><span class=\"line\">  val b = new ArrayBuffer[Int]()</span><br><span class=\"line\"></span><br><span class=\"line\">  for (i &lt;- 0 until a.length if i%2 == 0) {</span><br><span class=\"line\"></span><br><span class=\"line\">    if (i+1 &lt; a.length) {</span><br><span class=\"line\">      b += a(i+1)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    b += a(i)</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"attribute\">b</span></span><br><span class=\"line\"><span class=\"attribute\"></span></span><br><span class=\"line\"><span class=\"attribute\">}</span></span><br><span class=\"line\">val a = Array(1,2,3,4,5,6,7,8,9,10)</span><br><span class=\"line\">val b = swapsArray(a)</span><br><span class=\"line\"><span class=\"attribute\">println(b.mkString(&quot;,&quot;))</span></span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"3\">\n<li><p>Repeat the preceding assignment, but produce a new array with the swapped values. Use for/yield.</p>\n <figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">swapsArray2</span></span>(a:<span class=\"type\">Array</span>[<span class=\"type\">Int</span>]) = {</span><br><span class=\"line\">    <span class=\"keyword\">val</span> temp = <span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> until (a.length, <span class=\"number\">2</span>)) <span class=\"keyword\">yield</span> {</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; a.length<span class=\"number\">-1</span>) <span class=\"type\">Array</span>(a(i+<span class=\"number\">1</span>), a(i))</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"type\">Array</span>(a(i))</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">val</span> b = temp.flatten.toArray</span><br><span class=\"line\">    println(b.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br><span class=\"line\">    b</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">val</span> a = <span class=\"type\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> b = swapsArray(a)</span><br><span class=\"line\">println(b.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Given an array of integers, produce a new array that contains all positive values of the original array, in their original order, followed by all values that are zero or negative, in their original order.</p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def <span class=\"keyword\">generate</span>(a:Array[Int]) = {</span><br><span class=\"line\">    val pos = <span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> <span class=\"keyword\">until</span> a<span class=\"variable\">.length</span> <span class=\"keyword\">if</span> a(i)&gt;<span class=\"number\">0</span>) yield {</span><br><span class=\"line\">      a(i)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    val neg = <span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> <span class=\"keyword\">until</span> a<span class=\"variable\">.length</span> <span class=\"keyword\">if</span> a(i)&lt;=<span class=\"number\">0</span>) yield {</span><br><span class=\"line\">      a(i)</span><br><span class=\"line\">    }</span><br><span class=\"line\">    val b = Array(pos, neg)<span class=\"variable\">.flatten</span><span class=\"variable\">.toArray</span></span><br><span class=\"line\">    b</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">val a = Array(<span class=\"number\">1</span>,<span class=\"number\">2</span>,-<span class=\"number\">4</span>,-<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,-<span class=\"number\">8</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,-<span class=\"number\">4</span>,-<span class=\"number\">5</span>,-<span class=\"number\">6</span>)</span><br><span class=\"line\">val b = <span class=\"keyword\">generate</span>(a)</span><br><span class=\"line\">println(b<span class=\"variable\">.mkString</span>(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"5\">\n<li>How do you compute the average of an Array[Double]?</li>\n</ol>\n<pre><code><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">avg</span><span class=\"params\">(<span class=\"symbol\">d:</span> Array[Double])</span></span> = {</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (d.length &lt;=<span class=\"number\">0</span>) <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    d.sum/d.length</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"6\">\n<li>How do you rearrange the elements of an Array[Int] so that they appear in</li>\n</ol>\n<pre><code><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i &lt;- <span class=\"number\">0</span> <span class=\"keyword\">until</span> h.<span class=\"built_in\">length</span>/<span class=\"number\">2</span>) {</span><br><span class=\"line\"> val tmp = h(i)</span><br><span class=\"line\"></span><br><span class=\"line\"> h(i) = h(h.<span class=\"built_in\">length</span>-i<span class=\"number\">-1</span>)</span><br><span class=\"line\"> h(h.<span class=\"built_in\">length</span>-i<span class=\"number\">-1</span>) = tmp</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n</code></pre><p>reverse sorted order? How do you do the same with an ArrayBuffer[Int]?</p>\n<ol start=\"7\">\n<li><p>Write a code snippet that produces all values from an array with duplicates<br>removed. (Hint: Look at Scaladoc.)</p>\n <figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val h = Array(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2.3</span>, <span class=\"number\">4.4</span>,<span class=\"number\">5.6</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">println(h.distinct.mkString(<span class=\"string\">&quot;,&quot;</span>))</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>def distinct: Array[T]</p>\n<p>Builds a new mutable indexed sequence from this mutable indexed sequence without any duplicate elements.</p>\n</blockquote>\n<ol start=\"8\">\n<li>Rewrite the example at the end of Section 3.4, &#x201C;Transforming Arrays,&#x201D; on page 34 using the drop method for dropping the index of the first match. Look the method up in Scaladoc.</li>\n</ol>\n<ol start=\"9\">\n<li>Make a collection of all time zones returned by java.util.TimeZone.getAvailableIDs that are in America. Strip off the &#x201C;America/&#x201C; prefix and sort the result.</li>\n</ol>\n<pre><code><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val <span class=\"attr\">zonetime=</span> java.util.TimeZone.getAvailableIDs</span><br><span class=\"line\">val <span class=\"attr\">timeList</span> = zonetime.filter(_.take(<span class=\"number\">8</span>)==<span class=\"string\">&quot;America/&quot;</span>)</span><br><span class=\"line\">val <span class=\"attr\">sortedAmericaTime</span> = timeList.<span class=\"built_in\">map</span>(_.drop(<span class=\"number\">8</span>)).sorted</span><br></pre></td></tr></table></figure>\n</code></pre><ol start=\"10\">\n<li>Import java.awt.datatransfer._ and make an object of type SystemFlavorMap with the call<br>val flavors = SystemFlavorMap.getDefaultFlavorMap().asInstanceOf[SystemFlavorMap]<br>Then call the getNativesForFlavor method with parameter DataFlavor.imageFlavor and get the return value as a Scala buffer. (Why this obscure class? It&#x2019;s hard to find uses of java.util.List in the standard Java library.)</li>\n</ol>"},{"layout":"post","title":"Geetnote的安装和使用","date":"2018-09-20T02:23:00.000Z","copyright":true,"_content":"### geeknote安装和使用\n\n#### 写在前面\n\n### 安装 \n\n#### 注意要安装中国版的印象笔记的geeknote\n\n[geeknote 中国版印象笔记support版本](https://github.com/gmajian/geeknote)\n\n官方安装步骤如下\n```shell\n# Download the repository.\n$ git clone git://github.com/gmajian/geeknote.git\n\n$ cd geeknote\n\n# Installation\n$ [sudo] python setup.py install\n\n# Launch Geeknote and go through login procedure.\n$ geeknote login\n```\n\n### 问题1: 在运行geeknote login时，并没有进入登陆程序。\b\n\n#### 调试\n\n打开geeknote.pk,跟踪login代码：\n\n<!--more-->\n```python\n   @GeekNoneDBConnectOnly\n    def login(self):\n        # track from this\n        if self.getEvernote().checkAuth():\n            print(\"You have already logged in\")\n            out.successMessage(\"You have already logged in.\")\n            return tools.exit()\n\n        if self.getEvernote().auth():\n            out.successMessage(\"You have successfully logged in.\")\n        else:\n            out.failureMessage(\"Login error.\")\n            return tools.exit()\n```\n\n因为checkAuth返回401失败，而自己已经申请过dev token了，所以我在需要auth的地方都设置了dev token\n\n代码修改1\n```python\ndef auth(self):\n        print \"auth...\"\n        GNA = GeekNoteAuth()\n        self.authToken = \"my token\"\n        print self.authToken\n        userInfo = self.getUserInfo()\n        if not isinstance(userInfo, object):\n            logging.error(\"User info not get\")\n            return False\n\n        self.getStorage().createUser(self.authToken, userInfo)\n        return True\n```\n\n```python\n def checkAuth(self):\n        print \"checkAuth\"\n        self.authToken = \"my token xxxx\"\n        logging.debug(\"oAuth token : %s\", self.authToken)\n        if self.authToken:\n            return True\n        return False\n```\n\n#### 再次运行login\n\n```shell\n> python geeknote.py login\n```\n成功\n\n#### 后面就可以正常操作evernote\n\n```shell\n> python geeknote.py find -s \"java\"\n\nSearch request: intitle:java\nTotal found: 17\n  1 : 17.09.2018  java NIO - Rollen Holt - 博客园\n  2 : 10.09.2018  深入分析Java的序列化与反序列化-HollisChuang's Blog\n  3 : 10.09.2018  Java学习路径2018版\n  4 : 09.09.2018  TreeMap - Java 提高篇 - 极客学院Wiki\n  5 : 10.11.2017  22的JAVA学习计划\n  6 : 25.11.2017  深入理解Java枚举类型(enum) - zejian的博客 - CSDN博客\n  7 : 09.11.2017  Java核心技术——基础卷\n  8 : 10.11.2017  Java学习——参考\n  9 : 08.11.2017  Effective Java——item15:使可变性最小化\n 10 : 24.10.2017  package com._4paradigm.predictor.component.antifraud;  import com._4paradigm.predictor.component.antifraud.ColumnsExpander; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import com._4paradigm.antifraud.fe.schema.*; import java.text.SimpleDateFo\n 11 : 10.10.2016  JAVA学习路径\n 12 : 22.03.2017  Java面试\n 13 : 09.10.2016  JAVA基础\n 14 : 12.10.2016  JAVA高级篇\n 15 : 05.12.2014  Java自定义URL协议\n 16 : 03.12.2014  JAVA SOCKET 编程\n 17 : 28.08.2014  JAVA/android调试打印栈信息的窍门\n```\n","source":"_posts/tools/geeknote.md","raw":"---\nlayout: \"post\"\ntitle: \"Geetnote的安装和使用\"\ndate: \"2018-09-20 10:23\"\ntag:\n- Tool\n- evernote\ncategories:\n- Tool\ncopyright: true\n\n---\n### geeknote安装和使用\n\n#### 写在前面\n\n### 安装 \n\n#### 注意要安装中国版的印象笔记的geeknote\n\n[geeknote 中国版印象笔记support版本](https://github.com/gmajian/geeknote)\n\n官方安装步骤如下\n```shell\n# Download the repository.\n$ git clone git://github.com/gmajian/geeknote.git\n\n$ cd geeknote\n\n# Installation\n$ [sudo] python setup.py install\n\n# Launch Geeknote and go through login procedure.\n$ geeknote login\n```\n\n### 问题1: 在运行geeknote login时，并没有进入登陆程序。\b\n\n#### 调试\n\n打开geeknote.pk,跟踪login代码：\n\n<!--more-->\n```python\n   @GeekNoneDBConnectOnly\n    def login(self):\n        # track from this\n        if self.getEvernote().checkAuth():\n            print(\"You have already logged in\")\n            out.successMessage(\"You have already logged in.\")\n            return tools.exit()\n\n        if self.getEvernote().auth():\n            out.successMessage(\"You have successfully logged in.\")\n        else:\n            out.failureMessage(\"Login error.\")\n            return tools.exit()\n```\n\n因为checkAuth返回401失败，而自己已经申请过dev token了，所以我在需要auth的地方都设置了dev token\n\n代码修改1\n```python\ndef auth(self):\n        print \"auth...\"\n        GNA = GeekNoteAuth()\n        self.authToken = \"my token\"\n        print self.authToken\n        userInfo = self.getUserInfo()\n        if not isinstance(userInfo, object):\n            logging.error(\"User info not get\")\n            return False\n\n        self.getStorage().createUser(self.authToken, userInfo)\n        return True\n```\n\n```python\n def checkAuth(self):\n        print \"checkAuth\"\n        self.authToken = \"my token xxxx\"\n        logging.debug(\"oAuth token : %s\", self.authToken)\n        if self.authToken:\n            return True\n        return False\n```\n\n#### 再次运行login\n\n```shell\n> python geeknote.py login\n```\n成功\n\n#### 后面就可以正常操作evernote\n\n```shell\n> python geeknote.py find -s \"java\"\n\nSearch request: intitle:java\nTotal found: 17\n  1 : 17.09.2018  java NIO - Rollen Holt - 博客园\n  2 : 10.09.2018  深入分析Java的序列化与反序列化-HollisChuang's Blog\n  3 : 10.09.2018  Java学习路径2018版\n  4 : 09.09.2018  TreeMap - Java 提高篇 - 极客学院Wiki\n  5 : 10.11.2017  22的JAVA学习计划\n  6 : 25.11.2017  深入理解Java枚举类型(enum) - zejian的博客 - CSDN博客\n  7 : 09.11.2017  Java核心技术——基础卷\n  8 : 10.11.2017  Java学习——参考\n  9 : 08.11.2017  Effective Java——item15:使可变性最小化\n 10 : 24.10.2017  package com._4paradigm.predictor.component.antifraud;  import com._4paradigm.predictor.component.antifraud.ColumnsExpander; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import com._4paradigm.antifraud.fe.schema.*; import java.text.SimpleDateFo\n 11 : 10.10.2016  JAVA学习路径\n 12 : 22.03.2017  Java面试\n 13 : 09.10.2016  JAVA基础\n 14 : 12.10.2016  JAVA高级篇\n 15 : 05.12.2014  Java自定义URL协议\n 16 : 03.12.2014  JAVA SOCKET 编程\n 17 : 28.08.2014  JAVA/android调试打印栈信息的窍门\n```\n","slug":"tools/geeknote","published":1,"updated":"2018-09-22T04:31:27.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdo8000bap9k3k084ki0","content":"<h3 id=\"geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;\"><a href=\"#geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;\" class=\"headerlink\" title=\"geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;\"></a>geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;</h3><h4 id=\"&#x5199;&#x5728;&#x524D;&#x9762;\"><a href=\"#&#x5199;&#x5728;&#x524D;&#x9762;\" class=\"headerlink\" title=\"&#x5199;&#x5728;&#x524D;&#x9762;\"></a>&#x5199;&#x5728;&#x524D;&#x9762;</h4><h3 id=\"&#x5B89;&#x88C5;\"><a href=\"#&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;\"></a>&#x5B89;&#x88C5;</h3><h4 id=\"&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote\"><a href=\"#&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote\" class=\"headerlink\" title=\"&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote\"></a>&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote</h4><p><a href=\"https://github.com/gmajian/geeknote\" target=\"_blank\" rel=\"noopener\">geeknote &#x4E2D;&#x56FD;&#x7248;&#x5370;&#x8C61;&#x7B14;&#x8BB0;support&#x7248;&#x672C;</a></p>\n<p>&#x5B98;&#x65B9;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Download the repository.</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> git://github.com/gmajian/geeknote.git</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> geeknote</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Installation</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> [sudo] python setup.py install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Launch Geeknote and go through login procedure.</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> geeknote login</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"&#x95EE;&#x9898;1-&#x5728;&#x8FD0;&#x884C;geeknote-login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\"><a href=\"#&#x95EE;&#x9898;1-&#x5728;&#x8FD0;&#x884C;geeknote-login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;1: &#x5728;&#x8FD0;&#x884C;geeknote login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\b\"></a>&#x95EE;&#x9898;1: &#x5728;&#x8FD0;&#x884C;geeknote login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\b</h3><h4 id=\"&#x8C03;&#x8BD5;\"><a href=\"#&#x8C03;&#x8BD5;\" class=\"headerlink\" title=\"&#x8C03;&#x8BD5;\"></a>&#x8C03;&#x8BD5;</h4><p>&#x6253;&#x5F00;geeknote.pk,&#x8DDF;&#x8E2A;login&#x4EE3;&#x7801;&#xFF1A;</p>\n<a id=\"more\"></a>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GeekNoneDBConnectOnly</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">     <span class=\"comment\"># track from this</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> self.getEvernote().checkAuth():</span><br><span class=\"line\">         print(<span class=\"string\">&quot;You have already logged in&quot;</span>)</span><br><span class=\"line\">         out.successMessage(<span class=\"string\">&quot;You have already logged in.&quot;</span>)</span><br><span class=\"line\">         <span class=\"keyword\">return</span> tools.exit()</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> self.getEvernote().auth():</span><br><span class=\"line\">         out.successMessage(<span class=\"string\">&quot;You have successfully logged in.&quot;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">else</span>:</span><br><span class=\"line\">         out.failureMessage(<span class=\"string\">&quot;Login error.&quot;</span>)</span><br><span class=\"line\">         <span class=\"keyword\">return</span> tools.exit()</span><br></pre></td></tr></table></figure>\n<p>&#x56E0;&#x4E3A;checkAuth&#x8FD4;&#x56DE;401&#x5931;&#x8D25;&#xFF0C;&#x800C;&#x81EA;&#x5DF1;&#x5DF2;&#x7ECF;&#x7533;&#x8BF7;&#x8FC7;dev token&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x5728;&#x9700;&#x8981;auth&#x7684;&#x5730;&#x65B9;&#x90FD;&#x8BBE;&#x7F6E;&#x4E86;dev token</p>\n<p>&#x4EE3;&#x7801;&#x4FEE;&#x6539;1<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">auth</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">&quot;auth...&quot;</span></span><br><span class=\"line\">        GNA = GeekNoteAuth()</span><br><span class=\"line\">        self.authToken = <span class=\"string\">&quot;my token&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> self.authToken</span><br><span class=\"line\">        userInfo = self.getUserInfo()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(userInfo, object):</span><br><span class=\"line\">            logging.error(<span class=\"string\">&quot;User info not get&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.getStorage().createUser(self.authToken, userInfo)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkAuth</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">       <span class=\"keyword\">print</span> <span class=\"string\">&quot;checkAuth&quot;</span></span><br><span class=\"line\">       self.authToken = <span class=\"string\">&quot;my token xxxx&quot;</span></span><br><span class=\"line\">       logging.debug(<span class=\"string\">&quot;oAuth token : %s&quot;</span>, self.authToken)</span><br><span class=\"line\">       <span class=\"keyword\">if</span> self.authToken:</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"&#x518D;&#x6B21;&#x8FD0;&#x884C;login\"><a href=\"#&#x518D;&#x6B21;&#x8FD0;&#x884C;login\" class=\"headerlink\" title=\"&#x518D;&#x6B21;&#x8FD0;&#x884C;login\"></a>&#x518D;&#x6B21;&#x8FD0;&#x884C;login</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> python geeknote.py login</span></span><br></pre></td></tr></table></figure>\n<p>&#x6210;&#x529F;</p>\n<h4 id=\"&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote\"><a href=\"#&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote\" class=\"headerlink\" title=\"&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote\"></a>&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> python geeknote.py find -s <span class=\"string\">&quot;java&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Search request: intitle:java</span><br><span class=\"line\">Total found: 17</span><br><span class=\"line\">  1 : 17.09.2018  java NIO - Rollen Holt - &#x535A;&#x5BA2;&#x56ED;</span><br><span class=\"line\">  2 : 10.09.2018  &#x6DF1;&#x5165;&#x5206;&#x6790;Java&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;-HollisChuang&apos;s Blog</span><br><span class=\"line\">  3 : 10.09.2018  Java&#x5B66;&#x4E60;&#x8DEF;&#x5F84;2018&#x7248;</span><br><span class=\"line\">  4 : 09.09.2018  TreeMap - Java &#x63D0;&#x9AD8;&#x7BC7; - &#x6781;&#x5BA2;&#x5B66;&#x9662;Wiki</span><br><span class=\"line\">  5 : 10.11.2017  22&#x7684;JAVA&#x5B66;&#x4E60;&#x8BA1;&#x5212;</span><br><span class=\"line\">  6 : 25.11.2017  &#x6DF1;&#x5165;&#x7406;&#x89E3;Java&#x679A;&#x4E3E;&#x7C7B;&#x578B;(enum) - zejian&#x7684;&#x535A;&#x5BA2; - CSDN&#x535A;&#x5BA2;</span><br><span class=\"line\">  7 : 09.11.2017  Java&#x6838;&#x5FC3;&#x6280;&#x672F;&#x2014;&#x2014;&#x57FA;&#x7840;&#x5377;</span><br><span class=\"line\">  8 : 10.11.2017  Java&#x5B66;&#x4E60;&#x2014;&#x2014;&#x53C2;&#x8003;</span><br><span class=\"line\">  9 : 08.11.2017  Effective Java&#x2014;&#x2014;item15:&#x4F7F;&#x53EF;&#x53D8;&#x6027;&#x6700;&#x5C0F;&#x5316;</span><br><span class=\"line\"> 10 : 24.10.2017  package com._4paradigm.predictor.component.antifraud;  import com._4paradigm.predictor.component.antifraud.ColumnsExpander; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import com._4paradigm.antifraud.fe.schema.*; import java.text.SimpleDateFo</span><br><span class=\"line\"> 11 : 10.10.2016  JAVA&#x5B66;&#x4E60;&#x8DEF;&#x5F84;</span><br><span class=\"line\"> 12 : 22.03.2017  Java&#x9762;&#x8BD5;</span><br><span class=\"line\"> 13 : 09.10.2016  JAVA&#x57FA;&#x7840;</span><br><span class=\"line\"> 14 : 12.10.2016  JAVA&#x9AD8;&#x7EA7;&#x7BC7;</span><br><span class=\"line\"> 15 : 05.12.2014  Java&#x81EA;&#x5B9A;&#x4E49;URL&#x534F;&#x8BAE;</span><br><span class=\"line\"> 16 : 03.12.2014  JAVA SOCKET &#x7F16;&#x7A0B;</span><br><span class=\"line\"> 17 : 28.08.2014  JAVA/android&#x8C03;&#x8BD5;&#x6253;&#x5370;&#x6808;&#x4FE1;&#x606F;&#x7684;&#x7A8D;&#x95E8;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3 id=\"geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;\"><a href=\"#geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;\" class=\"headerlink\" title=\"geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;\"></a>geeknote&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;</h3><h4 id=\"&#x5199;&#x5728;&#x524D;&#x9762;\"><a href=\"#&#x5199;&#x5728;&#x524D;&#x9762;\" class=\"headerlink\" title=\"&#x5199;&#x5728;&#x524D;&#x9762;\"></a>&#x5199;&#x5728;&#x524D;&#x9762;</h4><h3 id=\"&#x5B89;&#x88C5;\"><a href=\"#&#x5B89;&#x88C5;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;\"></a>&#x5B89;&#x88C5;</h3><h4 id=\"&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote\"><a href=\"#&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote\" class=\"headerlink\" title=\"&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote\"></a>&#x6CE8;&#x610F;&#x8981;&#x5B89;&#x88C5;&#x4E2D;&#x56FD;&#x7248;&#x7684;&#x5370;&#x8C61;&#x7B14;&#x8BB0;&#x7684;geeknote</h4><p><a href=\"https://github.com/gmajian/geeknote\" target=\"_blank\" rel=\"noopener\">geeknote &#x4E2D;&#x56FD;&#x7248;&#x5370;&#x8C61;&#x7B14;&#x8BB0;support&#x7248;&#x672C;</a></p>\n<p>&#x5B98;&#x65B9;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Download the repository.</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> git://github.com/gmajian/geeknote.git</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> geeknote</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Installation</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> [sudo] python setup.py install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Launch Geeknote and go through login procedure.</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> geeknote login</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"&#x95EE;&#x9898;1-&#x5728;&#x8FD0;&#x884C;geeknote-login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\"><a href=\"#&#x95EE;&#x9898;1-&#x5728;&#x8FD0;&#x884C;geeknote-login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\" class=\"headerlink\" title=\"&#x95EE;&#x9898;1: &#x5728;&#x8FD0;&#x884C;geeknote login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\b\"></a>&#x95EE;&#x9898;1: &#x5728;&#x8FD0;&#x884C;geeknote login&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x767B;&#x9646;&#x7A0B;&#x5E8F;&#x3002;\b</h3><h4 id=\"&#x8C03;&#x8BD5;\"><a href=\"#&#x8C03;&#x8BD5;\" class=\"headerlink\" title=\"&#x8C03;&#x8BD5;\"></a>&#x8C03;&#x8BD5;</h4><p>&#x6253;&#x5F00;geeknote.pk,&#x8DDF;&#x8E2A;login&#x4EE3;&#x7801;&#xFF1A;</p>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GeekNoneDBConnectOnly</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">     <span class=\"comment\"># track from this</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> self.getEvernote().checkAuth():</span><br><span class=\"line\">         print(<span class=\"string\">&quot;You have already logged in&quot;</span>)</span><br><span class=\"line\">         out.successMessage(<span class=\"string\">&quot;You have already logged in.&quot;</span>)</span><br><span class=\"line\">         <span class=\"keyword\">return</span> tools.exit()</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> self.getEvernote().auth():</span><br><span class=\"line\">         out.successMessage(<span class=\"string\">&quot;You have successfully logged in.&quot;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">else</span>:</span><br><span class=\"line\">         out.failureMessage(<span class=\"string\">&quot;Login error.&quot;</span>)</span><br><span class=\"line\">         <span class=\"keyword\">return</span> tools.exit()</span><br></pre></td></tr></table></figure>\n<p>&#x56E0;&#x4E3A;checkAuth&#x8FD4;&#x56DE;401&#x5931;&#x8D25;&#xFF0C;&#x800C;&#x81EA;&#x5DF1;&#x5DF2;&#x7ECF;&#x7533;&#x8BF7;&#x8FC7;dev token&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x5728;&#x9700;&#x8981;auth&#x7684;&#x5730;&#x65B9;&#x90FD;&#x8BBE;&#x7F6E;&#x4E86;dev token</p>\n<p>&#x4EE3;&#x7801;&#x4FEE;&#x6539;1<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">auth</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">&quot;auth...&quot;</span></span><br><span class=\"line\">        GNA = GeekNoteAuth()</span><br><span class=\"line\">        self.authToken = <span class=\"string\">&quot;my token&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> self.authToken</span><br><span class=\"line\">        userInfo = self.getUserInfo()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(userInfo, object):</span><br><span class=\"line\">            logging.error(<span class=\"string\">&quot;User info not get&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.getStorage().createUser(self.authToken, userInfo)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkAuth</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">       <span class=\"keyword\">print</span> <span class=\"string\">&quot;checkAuth&quot;</span></span><br><span class=\"line\">       self.authToken = <span class=\"string\">&quot;my token xxxx&quot;</span></span><br><span class=\"line\">       logging.debug(<span class=\"string\">&quot;oAuth token : %s&quot;</span>, self.authToken)</span><br><span class=\"line\">       <span class=\"keyword\">if</span> self.authToken:</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"&#x518D;&#x6B21;&#x8FD0;&#x884C;login\"><a href=\"#&#x518D;&#x6B21;&#x8FD0;&#x884C;login\" class=\"headerlink\" title=\"&#x518D;&#x6B21;&#x8FD0;&#x884C;login\"></a>&#x518D;&#x6B21;&#x8FD0;&#x884C;login</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> python geeknote.py login</span></span><br></pre></td></tr></table></figure>\n<p>&#x6210;&#x529F;</p>\n<h4 id=\"&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote\"><a href=\"#&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote\" class=\"headerlink\" title=\"&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote\"></a>&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x64CD;&#x4F5C;evernote</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> python geeknote.py find -s <span class=\"string\">&quot;java&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Search request: intitle:java</span><br><span class=\"line\">Total found: 17</span><br><span class=\"line\">  1 : 17.09.2018  java NIO - Rollen Holt - &#x535A;&#x5BA2;&#x56ED;</span><br><span class=\"line\">  2 : 10.09.2018  &#x6DF1;&#x5165;&#x5206;&#x6790;Java&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;-HollisChuang&apos;s Blog</span><br><span class=\"line\">  3 : 10.09.2018  Java&#x5B66;&#x4E60;&#x8DEF;&#x5F84;2018&#x7248;</span><br><span class=\"line\">  4 : 09.09.2018  TreeMap - Java &#x63D0;&#x9AD8;&#x7BC7; - &#x6781;&#x5BA2;&#x5B66;&#x9662;Wiki</span><br><span class=\"line\">  5 : 10.11.2017  22&#x7684;JAVA&#x5B66;&#x4E60;&#x8BA1;&#x5212;</span><br><span class=\"line\">  6 : 25.11.2017  &#x6DF1;&#x5165;&#x7406;&#x89E3;Java&#x679A;&#x4E3E;&#x7C7B;&#x578B;(enum) - zejian&#x7684;&#x535A;&#x5BA2; - CSDN&#x535A;&#x5BA2;</span><br><span class=\"line\">  7 : 09.11.2017  Java&#x6838;&#x5FC3;&#x6280;&#x672F;&#x2014;&#x2014;&#x57FA;&#x7840;&#x5377;</span><br><span class=\"line\">  8 : 10.11.2017  Java&#x5B66;&#x4E60;&#x2014;&#x2014;&#x53C2;&#x8003;</span><br><span class=\"line\">  9 : 08.11.2017  Effective Java&#x2014;&#x2014;item15:&#x4F7F;&#x53EF;&#x53D8;&#x6027;&#x6700;&#x5C0F;&#x5316;</span><br><span class=\"line\"> 10 : 24.10.2017  package com._4paradigm.predictor.component.antifraud;  import com._4paradigm.predictor.component.antifraud.ColumnsExpander; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import com._4paradigm.antifraud.fe.schema.*; import java.text.SimpleDateFo</span><br><span class=\"line\"> 11 : 10.10.2016  JAVA&#x5B66;&#x4E60;&#x8DEF;&#x5F84;</span><br><span class=\"line\"> 12 : 22.03.2017  Java&#x9762;&#x8BD5;</span><br><span class=\"line\"> 13 : 09.10.2016  JAVA&#x57FA;&#x7840;</span><br><span class=\"line\"> 14 : 12.10.2016  JAVA&#x9AD8;&#x7EA7;&#x7BC7;</span><br><span class=\"line\"> 15 : 05.12.2014  Java&#x81EA;&#x5B9A;&#x4E49;URL&#x534F;&#x8BAE;</span><br><span class=\"line\"> 16 : 03.12.2014  JAVA SOCKET &#x7F16;&#x7A0B;</span><br><span class=\"line\"> 17 : 28.08.2014  JAVA/android&#x8C03;&#x8BD5;&#x6253;&#x5370;&#x6808;&#x4FE1;&#x606F;&#x7684;&#x7A8D;&#x95E8;</span><br></pre></td></tr></table></figure>"},{"title":"markdown 语法测试","tag":"markdown, hexo主题","date":"2016-11-06T09:47:00.000Z","update":"2016/11/06 17:57","mathjax":true,"_content":"\n## Enable code highlight\n\nthis is c language\n\n```\n#include <stdio.h>\n\nint main(int argc, char **argv) {\n  int a;\n  int b;\n  printf(\"a+b = %d\", a+b);\n}\n```\n <!--more-->\n## Enable Math\n\n1. Math rendering is disabled by default, to enable it, check on the *Enable Math* option in *Preferences* > *General* > *All Documents*:.\n\n2. Make sure you've connected to the internet.\n\n   The Math rendering is powered by [MathJax](http://www.mathjax.org), the resources such as fonts are all online, thus the internet connection is needed for it to work.\n\n\n\n3. For Users in mainland China\n<!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\n\n\t- [Enable code highlight](#enable-code-highlight)\n- [include <stdio.h>](#include-stdioh)\n\t- [Enable Math](#enable-math)\n\t\t- [Known issues of Math option](#known-issues-of-math-option)\n\t- [Block level vs Inline level](#block-level-vs-inline-level)\n\t- [The Math Syntax](#the-math-syntax)\n\t\t\t- [The Quadratic Formula](#the-quadratic-formula)\n\t\t\t- [The Lorenz Equations](#the-lorenz-equations)\n\t\t\t- [The Cauchy-Schwarz Inequality](#the-cauchy-schwarz-inequality)\n\t\t\t- [A Cross Product Formula](#a-cross-product-formula)\n\t\t\t- [The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is](#the-probability-of-getting-k-heads-when-flipping-n-coins-is)\n\t\t\t- [An Identity of Ramanujan](#an-identity-of-ramanujan)\n\t\t\t- [Maxwell’s Equations](#maxwells-equations)\n\t\t\t- [A Rogers-Ramanujan Identity](#a-rogers-ramanujan-identity)\n\n<!-- /TOC -->\n   Users in mainland China, if the Math option doesn't work for you, try if you can visit [MathJax](http://www.mathjax.org) without VPN connected. If you can't, maybe it's blocked by the Great Firewall of China. Try connect to a VPN, climb over the wall, then the Math rendering should work.\n\n### Known issues of Math option\n\n1. It makes the Preview blink and blink again whenever typing.\n\n   Math support is a good addition, except that it makes the Preview blink and blink again whenever typing, as it needs to refresh the whole typesetting.\n\n2. It makes the Right View always scroll to top whenever typing.\n\n\nThat's why I make it disabled by default. I suggest only enable it when you write Math Formulas, or better, only enable it when you export document to HTML which contains Math Formulas, when you are writing, disable it.\n\n\n## Block level vs Inline level\n\nUse double US dollors sign pair for Block level Math formula, and three US dollors sign pair for Inline Level.\n\nFor example this is a Block level $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$ formula, and this is an inline Level $$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$$ formula.\n\n\n## The Math Syntax\n\nThe syntax is the same as [**Tex**](http://en.wikipedia.org/wiki/TeX), expect one thing:\n\nBecause the characters such as \\ and _ and * and so on have special meanings in Markdown language, you need to add an extra \\ character before them to escape them to make the Math renders correctly.\n\nFor example in TeX syntax it starts with \\[ but here you need to add an extra \\ to escape it, thus \\\\[\n\nAnd so on… Luckily you don't have to escape every \\ characters, normally escape the beginning \\[ and ending \\] is enough, and perhaps \\\\ to \\\\\\.\n\n#### The Quadratic Formula\n\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$\n\n#### The Lorenz Equations\n\n\\\\[\\begin{aligned}\n\\dot{x} & = \\sigma(y-x) \\\\\\\n\\dot{y} & = \\rho x - y - xz \\\\\\\n\\dot{z} & = -\\beta z + xy\n\\end{aligned} \\\\]\n\n#### The Cauchy-Schwarz Inequality\n\n\\\\[ \\left( \\sum\\_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum\\_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right) \\\\]\n\n#### A Cross Product Formula\n\n\\\\[\\mathbf{V}\\_1 \\times \\mathbf{V}\\_2 =  \\begin{vmatrix}\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0\n\\end{vmatrix} \\\\]\n\n#### The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is\n\n\\\\[P(E) = {n \\choose k} p^k (1-p)^{ n-k} \\\\]\n\n#### An Identity of Ramanujan\n\n\\\\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =\n1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}\n{1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\\\]\n\n#### Maxwell’s Equations\n\n\\\\[  \\begin{aligned}\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\\\   \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\\n\\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{aligned}\n\\\\]\n\n#### A Rogers-Ramanujan Identity\n\n\\\\[  1 +  \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots =\n\\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})},\n\\quad\\quad \\text{for $|q|<1$}. \\\\]\n","source":"_posts/tools/markdown_syntax_help.md","raw":"---\ntitle: markdown 语法测试\ntag: markdown, hexo主题\ndate: 2016/11/06 17:47\nupdate: 2016/11/06 17:57\nmathjax: true\ncategories:\n- Tool\ntags:\n- hexo\n---\n\n## Enable code highlight\n\nthis is c language\n\n```\n#include <stdio.h>\n\nint main(int argc, char **argv) {\n  int a;\n  int b;\n  printf(\"a+b = %d\", a+b);\n}\n```\n <!--more-->\n## Enable Math\n\n1. Math rendering is disabled by default, to enable it, check on the *Enable Math* option in *Preferences* > *General* > *All Documents*:.\n\n2. Make sure you've connected to the internet.\n\n   The Math rendering is powered by [MathJax](http://www.mathjax.org), the resources such as fonts are all online, thus the internet connection is needed for it to work.\n\n\n\n3. For Users in mainland China\n<!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\n\n\t- [Enable code highlight](#enable-code-highlight)\n- [include <stdio.h>](#include-stdioh)\n\t- [Enable Math](#enable-math)\n\t\t- [Known issues of Math option](#known-issues-of-math-option)\n\t- [Block level vs Inline level](#block-level-vs-inline-level)\n\t- [The Math Syntax](#the-math-syntax)\n\t\t\t- [The Quadratic Formula](#the-quadratic-formula)\n\t\t\t- [The Lorenz Equations](#the-lorenz-equations)\n\t\t\t- [The Cauchy-Schwarz Inequality](#the-cauchy-schwarz-inequality)\n\t\t\t- [A Cross Product Formula](#a-cross-product-formula)\n\t\t\t- [The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is](#the-probability-of-getting-k-heads-when-flipping-n-coins-is)\n\t\t\t- [An Identity of Ramanujan](#an-identity-of-ramanujan)\n\t\t\t- [Maxwell’s Equations](#maxwells-equations)\n\t\t\t- [A Rogers-Ramanujan Identity](#a-rogers-ramanujan-identity)\n\n<!-- /TOC -->\n   Users in mainland China, if the Math option doesn't work for you, try if you can visit [MathJax](http://www.mathjax.org) without VPN connected. If you can't, maybe it's blocked by the Great Firewall of China. Try connect to a VPN, climb over the wall, then the Math rendering should work.\n\n### Known issues of Math option\n\n1. It makes the Preview blink and blink again whenever typing.\n\n   Math support is a good addition, except that it makes the Preview blink and blink again whenever typing, as it needs to refresh the whole typesetting.\n\n2. It makes the Right View always scroll to top whenever typing.\n\n\nThat's why I make it disabled by default. I suggest only enable it when you write Math Formulas, or better, only enable it when you export document to HTML which contains Math Formulas, when you are writing, disable it.\n\n\n## Block level vs Inline level\n\nUse double US dollors sign pair for Block level Math formula, and three US dollors sign pair for Inline Level.\n\nFor example this is a Block level $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$ formula, and this is an inline Level $$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$$ formula.\n\n\n## The Math Syntax\n\nThe syntax is the same as [**Tex**](http://en.wikipedia.org/wiki/TeX), expect one thing:\n\nBecause the characters such as \\ and _ and * and so on have special meanings in Markdown language, you need to add an extra \\ character before them to escape them to make the Math renders correctly.\n\nFor example in TeX syntax it starts with \\[ but here you need to add an extra \\ to escape it, thus \\\\[\n\nAnd so on… Luckily you don't have to escape every \\ characters, normally escape the beginning \\[ and ending \\] is enough, and perhaps \\\\ to \\\\\\.\n\n#### The Quadratic Formula\n\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$\n\n#### The Lorenz Equations\n\n\\\\[\\begin{aligned}\n\\dot{x} & = \\sigma(y-x) \\\\\\\n\\dot{y} & = \\rho x - y - xz \\\\\\\n\\dot{z} & = -\\beta z + xy\n\\end{aligned} \\\\]\n\n#### The Cauchy-Schwarz Inequality\n\n\\\\[ \\left( \\sum\\_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum\\_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right) \\\\]\n\n#### A Cross Product Formula\n\n\\\\[\\mathbf{V}\\_1 \\times \\mathbf{V}\\_2 =  \\begin{vmatrix}\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0\n\\end{vmatrix} \\\\]\n\n#### The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is\n\n\\\\[P(E) = {n \\choose k} p^k (1-p)^{ n-k} \\\\]\n\n#### An Identity of Ramanujan\n\n\\\\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =\n1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}\n{1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\\\]\n\n#### Maxwell’s Equations\n\n\\\\[  \\begin{aligned}\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\\\   \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\\n\\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{aligned}\n\\\\]\n\n#### A Rogers-Ramanujan Identity\n\n\\\\[  1 +  \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots =\n\\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})},\n\\quad\\quad \\text{for $|q|<1$}. \\\\]\n","slug":"tools/markdown_syntax_help","published":1,"updated":"2018-09-20T13:47:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmdapdoa000cap9kfsdcadr0","content":"<h2 id=\"Enable-code-highlight\"><a href=\"#Enable-code-highlight\" class=\"headerlink\" title=\"Enable code highlight\"></a>Enable code highlight</h2><p>this is c language</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span> </span>{</span><br><span class=\"line\">  <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> b;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a+b = %d&quot;</span>, a+b);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n <a id=\"more\"></a>\n<h2 id=\"Enable-Math\"><a href=\"#Enable-Math\" class=\"headerlink\" title=\"Enable Math\"></a>Enable Math</h2><ol>\n<li><p>Math rendering is disabled by default, to enable it, check on the <em>Enable Math</em> option in <em>Preferences</em> &gt; <em>General</em> &gt; <em>All Documents</em>:.</p>\n</li>\n<li><p>Make sure you&#x2019;ve connected to the internet.</p>\n<p>The Math rendering is powered by <a href=\"http://www.mathjax.org\" target=\"_blank\" rel=\"noopener\">MathJax</a>, the resources such as fonts are all online, thus the internet connection is needed for it to work.</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>For Users in mainland China</p>\n<!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\n<ul>\n<li><a href=\"#enable-code-highlight\">Enable code highlight</a></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><a href=\"#include-stdioh\">include &lt;stdio.h&gt;</a><ul>\n<li><a href=\"#enable-math\">Enable Math</a><ul>\n<li><a href=\"#known-issues-of-math-option\">Known issues of Math option</a></li>\n</ul>\n</li>\n<li><a href=\"#block-level-vs-inline-level\">Block level vs Inline level</a></li>\n<li><a href=\"#the-math-syntax\">The Math Syntax</a><pre><code>- [The Quadratic Formula](#the-quadratic-formula)\n- [The Lorenz Equations](#the-lorenz-equations)\n- [The Cauchy-Schwarz Inequality](#the-cauchy-schwarz-inequality)\n- [A Cross Product Formula](#a-cross-product-formula)\n- [The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is](#the-probability-of-getting-k-heads-when-flipping-n-coins-is)\n- [An Identity of Ramanujan](#an-identity-of-ramanujan)\n- [Maxwell&#x2019;s Equations](#maxwells-equations)\n- [A Rogers-Ramanujan Identity](#a-rogers-ramanujan-identity)\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<p>   Users in mainland China, if the Math option doesn&#x2019;t work for you, try if you can visit <a href=\"http://www.mathjax.org\" target=\"_blank\" rel=\"noopener\">MathJax</a> without VPN connected. If you can&#x2019;t, maybe it&#x2019;s blocked by the Great Firewall of China. Try connect to a VPN, climb over the wall, then the Math rendering should work.</p>\n<h3 id=\"Known-issues-of-Math-option\"><a href=\"#Known-issues-of-Math-option\" class=\"headerlink\" title=\"Known issues of Math option\"></a>Known issues of Math option</h3><ol>\n<li><p>It makes the Preview blink and blink again whenever typing.</p>\n<p>Math support is a good addition, except that it makes the Preview blink and blink again whenever typing, as it needs to refresh the whole typesetting.</p>\n</li>\n<li><p>It makes the Right View always scroll to top whenever typing.</p>\n</li>\n</ol>\n<p>That&#x2019;s why I make it disabled by default. I suggest only enable it when you write Math Formulas, or better, only enable it when you export document to HTML which contains Math Formulas, when you are writing, disable it.</p>\n<h2 id=\"Block-level-vs-Inline-level\"><a href=\"#Block-level-vs-Inline-level\" class=\"headerlink\" title=\"Block level vs Inline level\"></a>Block level vs Inline level</h2><p>Use double US dollors sign pair for Block level Math formula, and three US dollors sign pair for Inline Level.</p>\n<p>For example this is a Block level $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$ formula, and this is an inline Level $$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$$ formula.</p>\n<h2 id=\"The-Math-Syntax\"><a href=\"#The-Math-Syntax\" class=\"headerlink\" title=\"The Math Syntax\"></a>The Math Syntax</h2><p>The syntax is the same as <a href=\"http://en.wikipedia.org/wiki/TeX\" target=\"_blank\" rel=\"noopener\"><strong>Tex</strong></a>, expect one thing:</p>\n<p>Because the characters such as \\ and _ and * and so on have special meanings in Markdown language, you need to add an extra \\ character before them to escape them to make the Math renders correctly.</p>\n<p>For example in TeX syntax it starts with [ but here you need to add an extra \\ to escape it, thus \\[</p>\n<p>And so on&#x2026; Luckily you don&#x2019;t have to escape every \\ characters, normally escape the beginning [ and ending ] is enough, and perhaps \\ to \\.</p>\n<h4 id=\"The-Quadratic-Formula\"><a href=\"#The-Quadratic-Formula\" class=\"headerlink\" title=\"The Quadratic Formula\"></a>The Quadratic Formula</h4><p>$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$</p>\n<h4 id=\"The-Lorenz-Equations\"><a href=\"#The-Lorenz-Equations\" class=\"headerlink\" title=\"The Lorenz Equations\"></a>The Lorenz Equations</h4><p>\\[\\begin{aligned}<br>\\dot{x} &amp; = \\sigma(y-x) \\\\<br>\\dot{y} &amp; = \\rho x - y - xz \\\\<br>\\dot{z} &amp; = -\\beta z + xy<br>\\end{aligned} \\]</p>\n<h4 id=\"The-Cauchy-Schwarz-Inequality\"><a href=\"#The-Cauchy-Schwarz-Inequality\" class=\"headerlink\" title=\"The Cauchy-Schwarz Inequality\"></a>The Cauchy-Schwarz Inequality</h4><p>\\[ \\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right) \\]</p>\n<h4 id=\"A-Cross-Product-Formula\"><a href=\"#A-Cross-Product-Formula\" class=\"headerlink\" title=\"A Cross Product Formula\"></a>A Cross Product Formula</h4><p>\\[\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}<br>\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\<br>\\frac{\\partial X}{\\partial u} &amp;  \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\<br>\\frac{\\partial X}{\\partial v} &amp;  \\frac{\\partial Y}{\\partial v} &amp; 0<br>\\end{vmatrix} \\]</p>\n<h4 id=\"The-probability-of-getting-k-heads-when-flipping-n-coins-is\"><a href=\"#The-probability-of-getting-k-heads-when-flipping-n-coins-is\" class=\"headerlink\" title=\"The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is\"></a>The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is</h4><p>\\[P(E) = {n \\choose k} p^k (1-p)^{ n-k} \\]</p>\n<h4 id=\"An-Identity-of-Ramanujan\"><a href=\"#An-Identity-of-Ramanujan\" class=\"headerlink\" title=\"An Identity of Ramanujan\"></a>An Identity of Ramanujan</h4><p>\\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =<br>1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}<br>{1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\]</p>\n<h4 id=\"Maxwell&#x2019;s-Equations\"><a href=\"#Maxwell&#x2019;s-Equations\" class=\"headerlink\" title=\"Maxwell&#x2019;s Equations\"></a>Maxwell&#x2019;s Equations</h4><p>\\[  \\begin{aligned}<br>\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp; = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\   \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\<br>\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\<br>\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0 \\end{aligned}<br>\\]</p>\n<h4 id=\"A-Rogers-Ramanujan-Identity\"><a href=\"#A-Rogers-Ramanujan-Identity\" class=\"headerlink\" title=\"A Rogers-Ramanujan Identity\"></a>A Rogers-Ramanujan Identity</h4><p>\\[  1 +  \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots =<br>\\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})},<br>\\quad\\quad \\text{for $|q|&lt;1$}. \\]</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Enable-code-highlight\"><a href=\"#Enable-code-highlight\" class=\"headerlink\" title=\"Enable code highlight\"></a>Enable code highlight</h2><p>this is c language</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span> </span>{</span><br><span class=\"line\">  <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> b;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a+b = %d&quot;</span>, a+b);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"Enable-Math\"><a href=\"#Enable-Math\" class=\"headerlink\" title=\"Enable Math\"></a>Enable Math</h2><ol>\n<li><p>Math rendering is disabled by default, to enable it, check on the <em>Enable Math</em> option in <em>Preferences</em> &gt; <em>General</em> &gt; <em>All Documents</em>:.</p>\n</li>\n<li><p>Make sure you&#x2019;ve connected to the internet.</p>\n<p>The Math rendering is powered by <a href=\"http://www.mathjax.org\" target=\"_blank\" rel=\"noopener\">MathJax</a>, the resources such as fonts are all online, thus the internet connection is needed for it to work.</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>For Users in mainland China</p>\n<!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\n<ul>\n<li><a href=\"#enable-code-highlight\">Enable code highlight</a></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><a href=\"#include-stdioh\">include &lt;stdio.h&gt;</a><ul>\n<li><a href=\"#enable-math\">Enable Math</a><ul>\n<li><a href=\"#known-issues-of-math-option\">Known issues of Math option</a></li>\n</ul>\n</li>\n<li><a href=\"#block-level-vs-inline-level\">Block level vs Inline level</a></li>\n<li><a href=\"#the-math-syntax\">The Math Syntax</a><pre><code>- [The Quadratic Formula](#the-quadratic-formula)\n- [The Lorenz Equations](#the-lorenz-equations)\n- [The Cauchy-Schwarz Inequality](#the-cauchy-schwarz-inequality)\n- [A Cross Product Formula](#a-cross-product-formula)\n- [The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is](#the-probability-of-getting-k-heads-when-flipping-n-coins-is)\n- [An Identity of Ramanujan](#an-identity-of-ramanujan)\n- [Maxwell&#x2019;s Equations](#maxwells-equations)\n- [A Rogers-Ramanujan Identity](#a-rogers-ramanujan-identity)\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<p>   Users in mainland China, if the Math option doesn&#x2019;t work for you, try if you can visit <a href=\"http://www.mathjax.org\" target=\"_blank\" rel=\"noopener\">MathJax</a> without VPN connected. If you can&#x2019;t, maybe it&#x2019;s blocked by the Great Firewall of China. Try connect to a VPN, climb over the wall, then the Math rendering should work.</p>\n<h3 id=\"Known-issues-of-Math-option\"><a href=\"#Known-issues-of-Math-option\" class=\"headerlink\" title=\"Known issues of Math option\"></a>Known issues of Math option</h3><ol>\n<li><p>It makes the Preview blink and blink again whenever typing.</p>\n<p>Math support is a good addition, except that it makes the Preview blink and blink again whenever typing, as it needs to refresh the whole typesetting.</p>\n</li>\n<li><p>It makes the Right View always scroll to top whenever typing.</p>\n</li>\n</ol>\n<p>That&#x2019;s why I make it disabled by default. I suggest only enable it when you write Math Formulas, or better, only enable it when you export document to HTML which contains Math Formulas, when you are writing, disable it.</p>\n<h2 id=\"Block-level-vs-Inline-level\"><a href=\"#Block-level-vs-Inline-level\" class=\"headerlink\" title=\"Block level vs Inline level\"></a>Block level vs Inline level</h2><p>Use double US dollors sign pair for Block level Math formula, and three US dollors sign pair for Inline Level.</p>\n<p>For example this is a Block level $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$ formula, and this is an inline Level $$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$$ formula.</p>\n<h2 id=\"The-Math-Syntax\"><a href=\"#The-Math-Syntax\" class=\"headerlink\" title=\"The Math Syntax\"></a>The Math Syntax</h2><p>The syntax is the same as <a href=\"http://en.wikipedia.org/wiki/TeX\" target=\"_blank\" rel=\"noopener\"><strong>Tex</strong></a>, expect one thing:</p>\n<p>Because the characters such as \\ and _ and * and so on have special meanings in Markdown language, you need to add an extra \\ character before them to escape them to make the Math renders correctly.</p>\n<p>For example in TeX syntax it starts with [ but here you need to add an extra \\ to escape it, thus \\[</p>\n<p>And so on&#x2026; Luckily you don&#x2019;t have to escape every \\ characters, normally escape the beginning [ and ending ] is enough, and perhaps \\ to \\.</p>\n<h4 id=\"The-Quadratic-Formula\"><a href=\"#The-Quadratic-Formula\" class=\"headerlink\" title=\"The Quadratic Formula\"></a>The Quadratic Formula</h4><p>$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$</p>\n<h4 id=\"The-Lorenz-Equations\"><a href=\"#The-Lorenz-Equations\" class=\"headerlink\" title=\"The Lorenz Equations\"></a>The Lorenz Equations</h4><p>\\[\\begin{aligned}<br>\\dot{x} &amp; = \\sigma(y-x) \\\\<br>\\dot{y} &amp; = \\rho x - y - xz \\\\<br>\\dot{z} &amp; = -\\beta z + xy<br>\\end{aligned} \\]</p>\n<h4 id=\"The-Cauchy-Schwarz-Inequality\"><a href=\"#The-Cauchy-Schwarz-Inequality\" class=\"headerlink\" title=\"The Cauchy-Schwarz Inequality\"></a>The Cauchy-Schwarz Inequality</h4><p>\\[ \\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right) \\]</p>\n<h4 id=\"A-Cross-Product-Formula\"><a href=\"#A-Cross-Product-Formula\" class=\"headerlink\" title=\"A Cross Product Formula\"></a>A Cross Product Formula</h4><p>\\[\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}<br>\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\<br>\\frac{\\partial X}{\\partial u} &amp;  \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\<br>\\frac{\\partial X}{\\partial v} &amp;  \\frac{\\partial Y}{\\partial v} &amp; 0<br>\\end{vmatrix} \\]</p>\n<h4 id=\"The-probability-of-getting-k-heads-when-flipping-n-coins-is\"><a href=\"#The-probability-of-getting-k-heads-when-flipping-n-coins-is\" class=\"headerlink\" title=\"The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is\"></a>The probability of getting $$$k$$$ heads when flipping $$$n$$$ coins is</h4><p>\\[P(E) = {n \\choose k} p^k (1-p)^{ n-k} \\]</p>\n<h4 id=\"An-Identity-of-Ramanujan\"><a href=\"#An-Identity-of-Ramanujan\" class=\"headerlink\" title=\"An Identity of Ramanujan\"></a>An Identity of Ramanujan</h4><p>\\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =<br>1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}<br>{1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\]</p>\n<h4 id=\"Maxwell&#x2019;s-Equations\"><a href=\"#Maxwell&#x2019;s-Equations\" class=\"headerlink\" title=\"Maxwell&#x2019;s Equations\"></a>Maxwell&#x2019;s Equations</h4><p>\\[  \\begin{aligned}<br>\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp; = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\   \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\<br>\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\<br>\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0 \\end{aligned}<br>\\]</p>\n<h4 id=\"A-Rogers-Ramanujan-Identity\"><a href=\"#A-Rogers-Ramanujan-Identity\" class=\"headerlink\" title=\"A Rogers-Ramanujan Identity\"></a>A Rogers-Ramanujan Identity</h4><p>\\[  1 +  \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots =<br>\\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})},<br>\\quad\\quad \\text{for $|q|&lt;1$}. \\]</p>"},{"title":"Swagger转化为静态文档","date":"2018-09-18T10:21:35.000Z","update":"2018-09-18T10:29:00.000Z","_content":"\n\n#### 背景概要\n公司的spirng项目使用swagger2来生成线上的Restful API文档，现在需要方便的把最新的api同步到公司wiki中。因此，需要把swagger已经生成的api文档格式化成wiki能支持的格式。\n\n### 解决方案\n\n#### 使用swagger-ui生成api文档\n这部分工作之前就完成了，需要注意的是，之前的`swagger`注解不够规范，很多参数和返回结果没有定义清晰的schema。\n\n为此，需要加入`ApiModelProperty`对实体(`Request`和`Response`)进行注解和说明。这样生成的API文档才能有清晰的desc。 另外我加入了example，方便前端同学测试。\n<!--more-->\n\n```java\npublic class DemoQueryRequest extends BaseListRequest {\n\n    @ApiModelProperty(value = \"媒体渠道英文\", example = \"sinanewsapp\")\n    private String appCode;\n\n    @ApiModelProperty(value = \"文案模糊匹配\", example = \"瘦身\")\n    private String titleLike;\n\n    @ApiModelProperty(value = \"创意图数量\", example = \"2\", allowableValues = \"{1, 2, 3}\")\n    private Integer imageCount;\n\n    @ApiModelProperty(value = \"行业\", example = \"医疗健康\")\n    private String manualType;\n    //... 此处省略无数\n}\n```\n\n\n\n#### 使用插件生成静态文档\n\n* 在project的gradle中加入配置\n\n```gradle\ncompile group: 'io.github.swagger2markup', name: 'swagger2markup', version: '1.3.3'\n```\n\n* 选择参考文章中的方法，使用一个UnitTest来生成静态文档，由于有些自定义的操作，所以不采用plugin的方式。\n\n```java\npackage com._4paradigm.demo..api;\n\nimport io.github.swagger2markup.Swagger2MarkupConfig;\nimport io.github.swagger2markup.Swagger2MarkupConverter;\nimport io.github.swagger2markup.builder.Swagger2MarkupConfigBuilder;\nimport io.github.swagger2markup.markup.builder.MarkupLanguage;\nimport io.swagger.models.Swagger;\nimport io.swagger.parser.SwaggerParser;\nimport org.apache.commons.collections.CollectionUtils;\nimport org.apache.commons.io.FileUtils;\nimport org.assertj.core.util.Lists;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.nio.file.Paths;\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * generate swagger api docs\n *\n * @author chenjing\n * @create 2018/9/18\n **/\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = {DemoApiApplicationContext.class})\npublic class ApiDocTest {\n\n    private static final String DOC_DIR = \"docs/wiki/generated\";\n\n    /**\n     * use unit test to generate wiki docs\n     * @throws Exception\n     */\n    @Test\n    public void generateWikiDocs() throws Exception {\n        //    输出Ascii格式\n        Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()\n                .withMarkupLanguage(MarkupLanguage.CONFLUENCE_MARKUP)\n                .withGeneratedExamples()\n                .build();\n\n        Swagger2MarkupConverter.from(new URL(\"http://localhost:8065/v2/api-docs\"))\n                .withConfig(config)\n                .build()\n                .toFolder(Paths.get(DOC_DIR));\n\n\n        generateOneWikiDoc();\n    }\n\n    /**\n     * 读区{@CODE Swagger2MarkupConverter}生成的wiki文档，\n     * 加入一些字符串替换逻辑，因为公司的wiki并不支持language=json\n     * @param wikiFileName\n     * @return\n     */\n    private List<String> getWikiList(String wikiFileName) {\n        try {\n            List<String> list = FileUtils.readLines(new File(wikiFileName));\n            if (CollectionUtils.isNotEmpty(list)) {\n                List<String> filtedList = Lists.newArrayList();\n                list.forEach(line -> {\n                    if (line.indexOf(\"{code:language=json}\") >= 0) {\n                        line = line.replaceAll(\"code:language=json\", \"code:language=js\");\n                    }\n                    filtedList.add(line);\n                });\n                return filtedList;\n            } else {\n                return Collections.EMPTY_LIST;\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return Collections.EMPTY_LIST;\n    }\n\n    /**\n     * 将Path和Definitions以及Overview文档合并成一个大文档，并添加目录\n     */\n    private void generateOneWikiDoc() {\n        List<String> finalList = Lists.newArrayList();\n        String toc = \"{toc:maxLevel=3}\";\n        String splitLine = \"----\";\n        finalList.add(toc);\n        finalList.addAll(getWikiList(DOC_DIR + \"/overview.txt\"));\n        finalList.add(splitLine);\n        finalList.addAll(getWikiList(DOC_DIR + \"/paths.txt\"));\n        finalList.add(splitLine);\n        finalList.addAll(getWikiList(DOC_DIR + \"/definitions.txt\"));\n        finalList.add(splitLine);\n        finalList.addAll(getWikiList(DOC_DIR + \"/security.txt\"));\n        finalList.add(splitLine);\n\n\n        try {\n            FileUtils.writeLines(new File(DOC_DIR + \"/wiki.txt\"), finalList);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n* 运行unit test\n* 至此将在`docs/wiki/generated/`目录下生成wiki.txt\n* 将wiki.txt中的内容copy到wiki编辑器中即可\n\n\n### 参考文献\n[使用Swagger2Markup生成静态文档: https://blog.csdn.net/daijiguo/article/details/81350169](https://blog.csdn.net/daijiguo/article/details/81350169)\n\n\n","source":"_posts/tools/swagger-convert-wiki-md.md","raw":"---\ntitle: Swagger转化为静态文档\ndate: 2018-09-18 18:21:35\nupdate: 2018-09-18 18:29:00\ntags:\n- swagger\ncategories:\n- Tool\n---\n\n\n#### 背景概要\n公司的spirng项目使用swagger2来生成线上的Restful API文档，现在需要方便的把最新的api同步到公司wiki中。因此，需要把swagger已经生成的api文档格式化成wiki能支持的格式。\n\n### 解决方案\n\n#### 使用swagger-ui生成api文档\n这部分工作之前就完成了，需要注意的是，之前的`swagger`注解不够规范，很多参数和返回结果没有定义清晰的schema。\n\n为此，需要加入`ApiModelProperty`对实体(`Request`和`Response`)进行注解和说明。这样生成的API文档才能有清晰的desc。 另外我加入了example，方便前端同学测试。\n<!--more-->\n\n```java\npublic class DemoQueryRequest extends BaseListRequest {\n\n    @ApiModelProperty(value = \"媒体渠道英文\", example = \"sinanewsapp\")\n    private String appCode;\n\n    @ApiModelProperty(value = \"文案模糊匹配\", example = \"瘦身\")\n    private String titleLike;\n\n    @ApiModelProperty(value = \"创意图数量\", example = \"2\", allowableValues = \"{1, 2, 3}\")\n    private Integer imageCount;\n\n    @ApiModelProperty(value = \"行业\", example = \"医疗健康\")\n    private String manualType;\n    //... 此处省略无数\n}\n```\n\n\n\n#### 使用插件生成静态文档\n\n* 在project的gradle中加入配置\n\n```gradle\ncompile group: 'io.github.swagger2markup', name: 'swagger2markup', version: '1.3.3'\n```\n\n* 选择参考文章中的方法，使用一个UnitTest来生成静态文档，由于有些自定义的操作，所以不采用plugin的方式。\n\n```java\npackage com._4paradigm.demo..api;\n\nimport io.github.swagger2markup.Swagger2MarkupConfig;\nimport io.github.swagger2markup.Swagger2MarkupConverter;\nimport io.github.swagger2markup.builder.Swagger2MarkupConfigBuilder;\nimport io.github.swagger2markup.markup.builder.MarkupLanguage;\nimport io.swagger.models.Swagger;\nimport io.swagger.parser.SwaggerParser;\nimport org.apache.commons.collections.CollectionUtils;\nimport org.apache.commons.io.FileUtils;\nimport org.assertj.core.util.Lists;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.nio.file.Paths;\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * generate swagger api docs\n *\n * @author chenjing\n * @create 2018/9/18\n **/\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = {DemoApiApplicationContext.class})\npublic class ApiDocTest {\n\n    private static final String DOC_DIR = \"docs/wiki/generated\";\n\n    /**\n     * use unit test to generate wiki docs\n     * @throws Exception\n     */\n    @Test\n    public void generateWikiDocs() throws Exception {\n        //    输出Ascii格式\n        Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()\n                .withMarkupLanguage(MarkupLanguage.CONFLUENCE_MARKUP)\n                .withGeneratedExamples()\n                .build();\n\n        Swagger2MarkupConverter.from(new URL(\"http://localhost:8065/v2/api-docs\"))\n                .withConfig(config)\n                .build()\n                .toFolder(Paths.get(DOC_DIR));\n\n\n        generateOneWikiDoc();\n    }\n\n    /**\n     * 读区{@CODE Swagger2MarkupConverter}生成的wiki文档，\n     * 加入一些字符串替换逻辑，因为公司的wiki并不支持language=json\n     * @param wikiFileName\n     * @return\n     */\n    private List<String> getWikiList(String wikiFileName) {\n        try {\n            List<String> list = FileUtils.readLines(new File(wikiFileName));\n            if (CollectionUtils.isNotEmpty(list)) {\n                List<String> filtedList = Lists.newArrayList();\n                list.forEach(line -> {\n                    if (line.indexOf(\"{code:language=json}\") >= 0) {\n                        line = line.replaceAll(\"code:language=json\", \"code:language=js\");\n                    }\n                    filtedList.add(line);\n                });\n                return filtedList;\n            } else {\n                return Collections.EMPTY_LIST;\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return Collections.EMPTY_LIST;\n    }\n\n    /**\n     * 将Path和Definitions以及Overview文档合并成一个大文档，并添加目录\n     */\n    private void generateOneWikiDoc() {\n        List<String> finalList = Lists.newArrayList();\n        String toc = \"{toc:maxLevel=3}\";\n        String splitLine = \"----\";\n        finalList.add(toc);\n        finalList.addAll(getWikiList(DOC_DIR + \"/overview.txt\"));\n        finalList.add(splitLine);\n        finalList.addAll(getWikiList(DOC_DIR + \"/paths.txt\"));\n        finalList.add(splitLine);\n        finalList.addAll(getWikiList(DOC_DIR + \"/definitions.txt\"));\n        finalList.add(splitLine);\n        finalList.addAll(getWikiList(DOC_DIR + \"/security.txt\"));\n        finalList.add(splitLine);\n\n\n        try {\n            FileUtils.writeLines(new File(DOC_DIR + \"/wiki.txt\"), finalList);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n* 运行unit test\n* 至此将在`docs/wiki/generated/`目录下生成wiki.txt\n* 将wiki.txt中的内容copy到wiki编辑器中即可\n\n\n### 参考文献\n[使用Swagger2Markup生成静态文档: https://blog.csdn.net/daijiguo/article/details/81350169](https://blog.csdn.net/daijiguo/article/details/81350169)\n\n\n","slug":"tools/swagger-convert-wiki-md","published":1,"updated":"2018-09-20T13:47:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmdapdod000fap9kyd94qlgd","content":"<h4 id=\"&#x80CC;&#x666F;&#x6982;&#x8981;\"><a href=\"#&#x80CC;&#x666F;&#x6982;&#x8981;\" class=\"headerlink\" title=\"&#x80CC;&#x666F;&#x6982;&#x8981;\"></a>&#x80CC;&#x666F;&#x6982;&#x8981;</h4><p>&#x516C;&#x53F8;&#x7684;spirng&#x9879;&#x76EE;&#x4F7F;&#x7528;swagger2&#x6765;&#x751F;&#x6210;&#x7EBF;&#x4E0A;&#x7684;Restful API&#x6587;&#x6863;&#xFF0C;&#x73B0;&#x5728;&#x9700;&#x8981;&#x65B9;&#x4FBF;&#x7684;&#x628A;&#x6700;&#x65B0;&#x7684;api&#x540C;&#x6B65;&#x5230;&#x516C;&#x53F8;wiki&#x4E2D;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x628A;swagger&#x5DF2;&#x7ECF;&#x751F;&#x6210;&#x7684;api&#x6587;&#x6863;&#x683C;&#x5F0F;&#x5316;&#x6210;wiki&#x80FD;&#x652F;&#x6301;&#x7684;&#x683C;&#x5F0F;&#x3002;</p>\n<h3 id=\"&#x89E3;&#x51B3;&#x65B9;&#x6848;\"><a href=\"#&#x89E3;&#x51B3;&#x65B9;&#x6848;\" class=\"headerlink\" title=\"&#x89E3;&#x51B3;&#x65B9;&#x6848;\"></a>&#x89E3;&#x51B3;&#x65B9;&#x6848;</h3><h4 id=\"&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;\"><a href=\"#&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;\" class=\"headerlink\" title=\"&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;\"></a>&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;</h4><p>&#x8FD9;&#x90E8;&#x5206;&#x5DE5;&#x4F5C;&#x4E4B;&#x524D;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4E4B;&#x524D;&#x7684;<code>swagger</code>&#x6CE8;&#x89E3;&#x4E0D;&#x591F;&#x89C4;&#x8303;&#xFF0C;&#x5F88;&#x591A;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;&#x6E05;&#x6670;&#x7684;schema&#x3002;</p>\n<p>&#x4E3A;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x52A0;&#x5165;<code>ApiModelProperty</code>&#x5BF9;&#x5B9E;&#x4F53;(<code>Request</code>&#x548C;<code>Response</code>)&#x8FDB;&#x884C;&#x6CE8;&#x89E3;&#x548C;&#x8BF4;&#x660E;&#x3002;&#x8FD9;&#x6837;&#x751F;&#x6210;&#x7684;API&#x6587;&#x6863;&#x624D;&#x80FD;&#x6709;&#x6E05;&#x6670;&#x7684;desc&#x3002; &#x53E6;&#x5916;&#x6211;&#x52A0;&#x5165;&#x4E86;example&#xFF0C;&#x65B9;&#x4FBF;&#x524D;&#x7AEF;&#x540C;&#x5B66;&#x6D4B;&#x8BD5;&#x3002;<br><a id=\"more\"></a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoQueryRequest</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseListRequest</span> </span>{</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x5A92;&#x4F53;&#x6E20;&#x9053;&#x82F1;&#x6587;&quot;</span>, example = <span class=\"string\">&quot;sinanewsapp&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String appCode;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x6587;&#x6848;&#x6A21;&#x7CCA;&#x5339;&#x914D;&quot;</span>, example = <span class=\"string\">&quot;&#x7626;&#x8EAB;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String titleLike;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x521B;&#x610F;&#x56FE;&#x6570;&#x91CF;&quot;</span>, example = <span class=\"string\">&quot;2&quot;</span>, allowableValues = <span class=\"string\">&quot;{1, 2, 3}&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer imageCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x884C;&#x4E1A;&quot;</span>, example = <span class=\"string\">&quot;&#x533B;&#x7597;&#x5065;&#x5EB7;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String manualType;</span><br><span class=\"line\">    <span class=\"comment\">//... &#x6B64;&#x5904;&#x7701;&#x7565;&#x65E0;&#x6570;</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h4 id=\"&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;\"><a href=\"#&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;\" class=\"headerlink\" title=\"&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;\"></a>&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;</h4><ul>\n<li>&#x5728;project&#x7684;gradle&#x4E2D;&#x52A0;&#x5165;&#x914D;&#x7F6E;</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"keyword\">group</span>: <span class=\"string\">&apos;io.github.swagger2markup&apos;</span>, name: <span class=\"string\">&apos;swagger2markup&apos;</span>, version: <span class=\"string\">&apos;1.3.3&apos;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>&#x9009;&#x62E9;&#x53C2;&#x8003;&#x6587;&#x7AE0;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;UnitTest&#x6765;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;&#xFF0C;&#x7531;&#x4E8E;&#x6709;&#x4E9B;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x91C7;&#x7528;plugin&#x7684;&#x65B9;&#x5F0F;&#x3002;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com._4paradigm.demo..api;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.Swagger2MarkupConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.Swagger2MarkupConverter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.builder.Swagger2MarkupConfigBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.markup.builder.MarkupLanguage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.models.Swagger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.parser.SwaggerParser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.collections.CollectionUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.assertj.core.util.Lists;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * generate swagger api docs</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chenjing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@create</span> 2018/9/18</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(classes = {DemoApiApplicationContext.class})</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApiDocTest</span> </span>{</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DOC_DIR = <span class=\"string\">&quot;docs/wiki/generated&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * use unit test to generate wiki docs</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">generateWikiDocs</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>{</span><br><span class=\"line\">        <span class=\"comment\">//    &#x8F93;&#x51FA;Ascii&#x683C;&#x5F0F;</span></span><br><span class=\"line\">        Swagger2MarkupConfig config = <span class=\"keyword\">new</span> Swagger2MarkupConfigBuilder()</span><br><span class=\"line\">                .withMarkupLanguage(MarkupLanguage.CONFLUENCE_MARKUP)</span><br><span class=\"line\">                .withGeneratedExamples()</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        Swagger2MarkupConverter.from(<span class=\"keyword\">new</span> URL(<span class=\"string\">&quot;http://localhost:8065/v2/api-docs&quot;</span>))</span><br><span class=\"line\">                .withConfig(config)</span><br><span class=\"line\">                .build()</span><br><span class=\"line\">                .toFolder(Paths.get(DOC_DIR));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        generateOneWikiDoc();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &#x8BFB;&#x533A;{<span class=\"doctag\">@CODE</span> Swagger2MarkupConverter}&#x751F;&#x6210;&#x7684;wiki&#x6587;&#x6863;&#xFF0C;</span></span><br><span class=\"line\"><span class=\"comment\">     * &#x52A0;&#x5165;&#x4E00;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x66FF;&#x6362;&#x903B;&#x8F91;&#xFF0C;&#x56E0;&#x4E3A;&#x516C;&#x53F8;&#x7684;wiki&#x5E76;&#x4E0D;&#x652F;&#x6301;language=json</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> wikiFileName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> List&lt;String&gt; <span class=\"title\">getWikiList</span><span class=\"params\">(String wikiFileName)</span> </span>{</span><br><span class=\"line\">        <span class=\"keyword\">try</span> {</span><br><span class=\"line\">            List&lt;String&gt; list = FileUtils.readLines(<span class=\"keyword\">new</span> File(wikiFileName));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CollectionUtils.isNotEmpty(list)) {</span><br><span class=\"line\">                List&lt;String&gt; filtedList = Lists.newArrayList();</span><br><span class=\"line\">                list.forEach(line -&gt; {</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (line.indexOf(<span class=\"string\">&quot;{code:language=json}&quot;</span>) &gt;= <span class=\"number\">0</span>) {</span><br><span class=\"line\">                        line = line.replaceAll(<span class=\"string\">&quot;code:language=json&quot;</span>, <span class=\"string\">&quot;code:language=js&quot;</span>);</span><br><span class=\"line\">                    }</span><br><span class=\"line\">                    filtedList.add(line);</span><br><span class=\"line\">                });</span><br><span class=\"line\">                <span class=\"keyword\">return</span> filtedList;</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Collections.EMPTY_LIST;</span><br><span class=\"line\">            }</span><br><span class=\"line\"></span><br><span class=\"line\">        } <span class=\"keyword\">catch</span> (IOException e) {</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Collections.EMPTY_LIST;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &#x5C06;Path&#x548C;Definitions&#x4EE5;&#x53CA;Overview&#x6587;&#x6863;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x4E2A;&#x5927;&#x6587;&#x6863;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x76EE;&#x5F55;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">generateOneWikiDoc</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">        List&lt;String&gt; finalList = Lists.newArrayList();</span><br><span class=\"line\">        String toc = <span class=\"string\">&quot;{toc:maxLevel=3}&quot;</span>;</span><br><span class=\"line\">        String splitLine = <span class=\"string\">&quot;----&quot;</span>;</span><br><span class=\"line\">        finalList.add(toc);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/overview.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/paths.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/definitions.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/security.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> {</span><br><span class=\"line\">            FileUtils.writeLines(<span class=\"keyword\">new</span> File(DOC_DIR + <span class=\"string\">&quot;/wiki.txt&quot;</span>), finalList);</span><br><span class=\"line\">        } <span class=\"keyword\">catch</span> (IOException e) {</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<ul>\n<li>&#x8FD0;&#x884C;unit test</li>\n<li>&#x81F3;&#x6B64;&#x5C06;&#x5728;<code>docs/wiki/generated/</code>&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;wiki.txt</li>\n<li>&#x5C06;wiki.txt&#x4E2D;&#x7684;&#x5185;&#x5BB9;copy&#x5230;wiki&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x5373;&#x53EF;</li>\n</ul>\n<h3 id=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"><a href=\"#&#x53C2;&#x8003;&#x6587;&#x732E;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h3><p><a href=\"https://blog.csdn.net/daijiguo/article/details/81350169\" target=\"_blank\" rel=\"noopener\">&#x4F7F;&#x7528;Swagger2Markup&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;: https://blog.csdn.net/daijiguo/article/details/81350169</a></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"&#x80CC;&#x666F;&#x6982;&#x8981;\"><a href=\"#&#x80CC;&#x666F;&#x6982;&#x8981;\" class=\"headerlink\" title=\"&#x80CC;&#x666F;&#x6982;&#x8981;\"></a>&#x80CC;&#x666F;&#x6982;&#x8981;</h4><p>&#x516C;&#x53F8;&#x7684;spirng&#x9879;&#x76EE;&#x4F7F;&#x7528;swagger2&#x6765;&#x751F;&#x6210;&#x7EBF;&#x4E0A;&#x7684;Restful API&#x6587;&#x6863;&#xFF0C;&#x73B0;&#x5728;&#x9700;&#x8981;&#x65B9;&#x4FBF;&#x7684;&#x628A;&#x6700;&#x65B0;&#x7684;api&#x540C;&#x6B65;&#x5230;&#x516C;&#x53F8;wiki&#x4E2D;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x628A;swagger&#x5DF2;&#x7ECF;&#x751F;&#x6210;&#x7684;api&#x6587;&#x6863;&#x683C;&#x5F0F;&#x5316;&#x6210;wiki&#x80FD;&#x652F;&#x6301;&#x7684;&#x683C;&#x5F0F;&#x3002;</p>\n<h3 id=\"&#x89E3;&#x51B3;&#x65B9;&#x6848;\"><a href=\"#&#x89E3;&#x51B3;&#x65B9;&#x6848;\" class=\"headerlink\" title=\"&#x89E3;&#x51B3;&#x65B9;&#x6848;\"></a>&#x89E3;&#x51B3;&#x65B9;&#x6848;</h3><h4 id=\"&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;\"><a href=\"#&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;\" class=\"headerlink\" title=\"&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;\"></a>&#x4F7F;&#x7528;swagger-ui&#x751F;&#x6210;api&#x6587;&#x6863;</h4><p>&#x8FD9;&#x90E8;&#x5206;&#x5DE5;&#x4F5C;&#x4E4B;&#x524D;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4E4B;&#x524D;&#x7684;<code>swagger</code>&#x6CE8;&#x89E3;&#x4E0D;&#x591F;&#x89C4;&#x8303;&#xFF0C;&#x5F88;&#x591A;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;&#x6E05;&#x6670;&#x7684;schema&#x3002;</p>\n<p>&#x4E3A;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x52A0;&#x5165;<code>ApiModelProperty</code>&#x5BF9;&#x5B9E;&#x4F53;(<code>Request</code>&#x548C;<code>Response</code>)&#x8FDB;&#x884C;&#x6CE8;&#x89E3;&#x548C;&#x8BF4;&#x660E;&#x3002;&#x8FD9;&#x6837;&#x751F;&#x6210;&#x7684;API&#x6587;&#x6863;&#x624D;&#x80FD;&#x6709;&#x6E05;&#x6670;&#x7684;desc&#x3002; &#x53E6;&#x5916;&#x6211;&#x52A0;&#x5165;&#x4E86;example&#xFF0C;&#x65B9;&#x4FBF;&#x524D;&#x7AEF;&#x540C;&#x5B66;&#x6D4B;&#x8BD5;&#x3002;<br></p>","more":"<p></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoQueryRequest</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseListRequest</span> </span>{</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x5A92;&#x4F53;&#x6E20;&#x9053;&#x82F1;&#x6587;&quot;</span>, example = <span class=\"string\">&quot;sinanewsapp&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String appCode;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x6587;&#x6848;&#x6A21;&#x7CCA;&#x5339;&#x914D;&quot;</span>, example = <span class=\"string\">&quot;&#x7626;&#x8EAB;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String titleLike;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x521B;&#x610F;&#x56FE;&#x6570;&#x91CF;&quot;</span>, example = <span class=\"string\">&quot;2&quot;</span>, allowableValues = <span class=\"string\">&quot;{1, 2, 3}&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer imageCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">&quot;&#x884C;&#x4E1A;&quot;</span>, example = <span class=\"string\">&quot;&#x533B;&#x7597;&#x5065;&#x5EB7;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String manualType;</span><br><span class=\"line\">    <span class=\"comment\">//... &#x6B64;&#x5904;&#x7701;&#x7565;&#x65E0;&#x6570;</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h4 id=\"&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;\"><a href=\"#&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;\" class=\"headerlink\" title=\"&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;\"></a>&#x4F7F;&#x7528;&#x63D2;&#x4EF6;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;</h4><ul>\n<li>&#x5728;project&#x7684;gradle&#x4E2D;&#x52A0;&#x5165;&#x914D;&#x7F6E;</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"keyword\">group</span>: <span class=\"string\">&apos;io.github.swagger2markup&apos;</span>, name: <span class=\"string\">&apos;swagger2markup&apos;</span>, version: <span class=\"string\">&apos;1.3.3&apos;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>&#x9009;&#x62E9;&#x53C2;&#x8003;&#x6587;&#x7AE0;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;UnitTest&#x6765;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;&#xFF0C;&#x7531;&#x4E8E;&#x6709;&#x4E9B;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x91C7;&#x7528;plugin&#x7684;&#x65B9;&#x5F0F;&#x3002;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com._4paradigm.demo..api;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.Swagger2MarkupConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.Swagger2MarkupConverter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.builder.Swagger2MarkupConfigBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.github.swagger2markup.markup.builder.MarkupLanguage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.models.Swagger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.parser.SwaggerParser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.collections.CollectionUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.assertj.core.util.Lists;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * generate swagger api docs</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chenjing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@create</span> 2018/9/18</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(classes = {DemoApiApplicationContext.class})</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApiDocTest</span> </span>{</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DOC_DIR = <span class=\"string\">&quot;docs/wiki/generated&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * use unit test to generate wiki docs</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">generateWikiDocs</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>{</span><br><span class=\"line\">        <span class=\"comment\">//    &#x8F93;&#x51FA;Ascii&#x683C;&#x5F0F;</span></span><br><span class=\"line\">        Swagger2MarkupConfig config = <span class=\"keyword\">new</span> Swagger2MarkupConfigBuilder()</span><br><span class=\"line\">                .withMarkupLanguage(MarkupLanguage.CONFLUENCE_MARKUP)</span><br><span class=\"line\">                .withGeneratedExamples()</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        Swagger2MarkupConverter.from(<span class=\"keyword\">new</span> URL(<span class=\"string\">&quot;http://localhost:8065/v2/api-docs&quot;</span>))</span><br><span class=\"line\">                .withConfig(config)</span><br><span class=\"line\">                .build()</span><br><span class=\"line\">                .toFolder(Paths.get(DOC_DIR));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        generateOneWikiDoc();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &#x8BFB;&#x533A;{<span class=\"doctag\">@CODE</span> Swagger2MarkupConverter}&#x751F;&#x6210;&#x7684;wiki&#x6587;&#x6863;&#xFF0C;</span></span><br><span class=\"line\"><span class=\"comment\">     * &#x52A0;&#x5165;&#x4E00;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x66FF;&#x6362;&#x903B;&#x8F91;&#xFF0C;&#x56E0;&#x4E3A;&#x516C;&#x53F8;&#x7684;wiki&#x5E76;&#x4E0D;&#x652F;&#x6301;language=json</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> wikiFileName</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> List&lt;String&gt; <span class=\"title\">getWikiList</span><span class=\"params\">(String wikiFileName)</span> </span>{</span><br><span class=\"line\">        <span class=\"keyword\">try</span> {</span><br><span class=\"line\">            List&lt;String&gt; list = FileUtils.readLines(<span class=\"keyword\">new</span> File(wikiFileName));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CollectionUtils.isNotEmpty(list)) {</span><br><span class=\"line\">                List&lt;String&gt; filtedList = Lists.newArrayList();</span><br><span class=\"line\">                list.forEach(line -&gt; {</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (line.indexOf(<span class=\"string\">&quot;{code:language=json}&quot;</span>) &gt;= <span class=\"number\">0</span>) {</span><br><span class=\"line\">                        line = line.replaceAll(<span class=\"string\">&quot;code:language=json&quot;</span>, <span class=\"string\">&quot;code:language=js&quot;</span>);</span><br><span class=\"line\">                    }</span><br><span class=\"line\">                    filtedList.add(line);</span><br><span class=\"line\">                });</span><br><span class=\"line\">                <span class=\"keyword\">return</span> filtedList;</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Collections.EMPTY_LIST;</span><br><span class=\"line\">            }</span><br><span class=\"line\"></span><br><span class=\"line\">        } <span class=\"keyword\">catch</span> (IOException e) {</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Collections.EMPTY_LIST;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &#x5C06;Path&#x548C;Definitions&#x4EE5;&#x53CA;Overview&#x6587;&#x6863;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x4E2A;&#x5927;&#x6587;&#x6863;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x76EE;&#x5F55;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">generateOneWikiDoc</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">        List&lt;String&gt; finalList = Lists.newArrayList();</span><br><span class=\"line\">        String toc = <span class=\"string\">&quot;{toc:maxLevel=3}&quot;</span>;</span><br><span class=\"line\">        String splitLine = <span class=\"string\">&quot;----&quot;</span>;</span><br><span class=\"line\">        finalList.add(toc);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/overview.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/paths.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/definitions.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\">        finalList.addAll(getWikiList(DOC_DIR + <span class=\"string\">&quot;/security.txt&quot;</span>));</span><br><span class=\"line\">        finalList.add(splitLine);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> {</span><br><span class=\"line\">            FileUtils.writeLines(<span class=\"keyword\">new</span> File(DOC_DIR + <span class=\"string\">&quot;/wiki.txt&quot;</span>), finalList);</span><br><span class=\"line\">        } <span class=\"keyword\">catch</span> (IOException e) {</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<ul>\n<li>&#x8FD0;&#x884C;unit test</li>\n<li>&#x81F3;&#x6B64;&#x5C06;&#x5728;<code>docs/wiki/generated/</code>&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;wiki.txt</li>\n<li>&#x5C06;wiki.txt&#x4E2D;&#x7684;&#x5185;&#x5BB9;copy&#x5230;wiki&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x5373;&#x53EF;</li>\n</ul>\n<h3 id=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"><a href=\"#&#x53C2;&#x8003;&#x6587;&#x732E;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h3><p><a href=\"https://blog.csdn.net/daijiguo/article/details/81350169\" target=\"_blank\" rel=\"noopener\">&#x4F7F;&#x7528;Swagger2Markup&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x6863;: https://blog.csdn.net/daijiguo/article/details/81350169</a></p>"},{"title":"无效而琐碎的思考","date":"2018-09-18T16:00:00.000Z","update":"2018-09-18T16:00:00.000Z","_content":"\n#### 阅读材料一\n[为什么你应该（从现在开始就）写博客, By 刘未鹏 | Mind Hacks\n思维改变生活](http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/)\n\n> 我曾在CSDN上写了近六年的博客，在一年半前建立了一个Google Groups（TopLanguage），由于我的博客的长期阅读者都是互相有共同语言的，因此这个Group一开始就热火朝天，而高质量的技术讨论则进一步吸引了更多的牛人的参与，雪球滚起来之后，就很难停下来了，将近一年半下来，从这个Group的讨论中我获益良多[1]。\n\n> 为了让一个不明白的人做到明白，你必须要知道从明白到不明白他究竟需要掌握哪些概念，这就迫使我们对我们大脑中整个的知识体系来个寻根究底，把藏在水面之下的那些东西统统挖出来，把大脑中的那些我们知道、但不知道自己知道的潜在概念或假设（assumptions）都挖出来，把它们从内隐记忆拉扯到外显记忆中。因为只有完全知道、并知道自己知道一切来龙去脉的人，才能真正把一件事情讲得通通透透。\n\n<!--more-->\n\n> 另一方面，“我强烈地觉得这个说法有问题，但我却说不清它为什么有问题，到底哪有问题”，这也是一个极有意义的瞬间，它几乎总是意味着你对一个问题的认识有潜在的偏差，肯定是在你自己都没有觉知到的地方引入了一个潜在的假设、偷换了一个重要的概念\n\n> 让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他一切就会随之而来。\n就像那句经常被人传阅的话：只做你最感兴趣的事情，钱会随之而来[2]。\n\n> ... 我想再重复一下的是，千万不要碎碎念，我能理解每个人都想偶尔发发牢骚的冲动，但是现在已经有了一个很好的窗口：twitter，所以立即停止在你的博客上碎碎念，阅读博客的人希望得到信息而非噪音。如果实在忍不住想碎碎念的话不妨换一下位置，这么来告诉自己：如果你看到别人博客来上这么一段，你会有兴趣看吗？\n\n> Much of intelligence is knowledge，有这么一个非常发人深省的经典心理学实验[4]：\n>\n> 将孩子们分成两组，通过给他们不同的阅读材料让一组相信智力是天生的，不可在后天改变的，另一组则让他们相信智力其实只是知识和技能的代名词，完全是后天习得的。接下来让他们做一组任务，那些被相信智力天生说的孩子，倾向于回避困难的任务，选择较容易的任务，这里的逻辑想必是这样的：如果做困难的任务，就增大了失败的几率，就在降低了自己在别人和自己心目中的智力的值。为了保护这个智力的值不被降低，应该避免那些有失败风险的项目。而另一组孩子则对于有挑战性的事情跃跃欲试，并且在失败的时候明显没有前者沮丧，因为失败也是学得新的东西，不管怎样都是“智力”的提高。\n\n\n\n\n\n#### 阅读材料二\n[书写是为了更好的思考，By 刘未鹏](http://mindhacks.cn/2009/02/09/writing-is-better-thinking/)\n\n\n#### 阅读材料三\n[Re: {OT}一件事情，如果你不能说清楚，十有八九你就作不好, Top language](https://groups.google.com/forum/#!topic/pongba/b2FAdEq5XHI)\n> 因为随着人的知识，经验的积累，我们可以越来越多地依靠经验来解决一些问题，这些经验有些是自己身体力行， \n> 实践得来的，有些则是道听途说，经卷纸传，从其他的地方获得的。在获得这些经验的同时，我们的大脑会建立起 \n> ...\n> \n> ... 于是，在遇到了与自己以前经历过的问题相似，相近的场景时，我们就会条件反射地基于已有经验，设计出一个解决方案，大多数情况下这个方案work得很好。但也有很多情况下，这个方案虽然能work，但并不是最优解，甚至 \n> 自己都未必能说得清楚为什么给出这样的方案。 \n\n> 在作设计的过程中，有的时候，是旧有经验作祟，有的时候，则是因为偷懒的情绪占了上风，自己会满足于浅尝辄 \n\n习惯基于经验来解决问题，而没有反思和推敲这条经验，会使得自己丧失问题的本质思考\n\n\n----\n\n### 为什么我们会沉迷于碎碎念，or 为什么我们竟然没办法言简意骇的说点东西？\n\n\b人的思维大部分时候都是琐碎，散漫的。有组织结构化的思维是需要训练，而且最好有结构化的知识管理工具作为辅助。","source":"_posts/读书笔记/关于无效的碎片思考.md","raw":"\n---\ntitle: 无效而琐碎的思考\ndate: 2018-09-19\nupdate: 2018-09-19\ntags:\n- 思考\ncategories:\n- 读书笔记\n---\n\n#### 阅读材料一\n[为什么你应该（从现在开始就）写博客, By 刘未鹏 | Mind Hacks\n思维改变生活](http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/)\n\n> 我曾在CSDN上写了近六年的博客，在一年半前建立了一个Google Groups（TopLanguage），由于我的博客的长期阅读者都是互相有共同语言的，因此这个Group一开始就热火朝天，而高质量的技术讨论则进一步吸引了更多的牛人的参与，雪球滚起来之后，就很难停下来了，将近一年半下来，从这个Group的讨论中我获益良多[1]。\n\n> 为了让一个不明白的人做到明白，你必须要知道从明白到不明白他究竟需要掌握哪些概念，这就迫使我们对我们大脑中整个的知识体系来个寻根究底，把藏在水面之下的那些东西统统挖出来，把大脑中的那些我们知道、但不知道自己知道的潜在概念或假设（assumptions）都挖出来，把它们从内隐记忆拉扯到外显记忆中。因为只有完全知道、并知道自己知道一切来龙去脉的人，才能真正把一件事情讲得通通透透。\n\n<!--more-->\n\n> 另一方面，“我强烈地觉得这个说法有问题，但我却说不清它为什么有问题，到底哪有问题”，这也是一个极有意义的瞬间，它几乎总是意味着你对一个问题的认识有潜在的偏差，肯定是在你自己都没有觉知到的地方引入了一个潜在的假设、偷换了一个重要的概念\n\n> 让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他一切就会随之而来。\n就像那句经常被人传阅的话：只做你最感兴趣的事情，钱会随之而来[2]。\n\n> ... 我想再重复一下的是，千万不要碎碎念，我能理解每个人都想偶尔发发牢骚的冲动，但是现在已经有了一个很好的窗口：twitter，所以立即停止在你的博客上碎碎念，阅读博客的人希望得到信息而非噪音。如果实在忍不住想碎碎念的话不妨换一下位置，这么来告诉自己：如果你看到别人博客来上这么一段，你会有兴趣看吗？\n\n> Much of intelligence is knowledge，有这么一个非常发人深省的经典心理学实验[4]：\n>\n> 将孩子们分成两组，通过给他们不同的阅读材料让一组相信智力是天生的，不可在后天改变的，另一组则让他们相信智力其实只是知识和技能的代名词，完全是后天习得的。接下来让他们做一组任务，那些被相信智力天生说的孩子，倾向于回避困难的任务，选择较容易的任务，这里的逻辑想必是这样的：如果做困难的任务，就增大了失败的几率，就在降低了自己在别人和自己心目中的智力的值。为了保护这个智力的值不被降低，应该避免那些有失败风险的项目。而另一组孩子则对于有挑战性的事情跃跃欲试，并且在失败的时候明显没有前者沮丧，因为失败也是学得新的东西，不管怎样都是“智力”的提高。\n\n\n\n\n\n#### 阅读材料二\n[书写是为了更好的思考，By 刘未鹏](http://mindhacks.cn/2009/02/09/writing-is-better-thinking/)\n\n\n#### 阅读材料三\n[Re: {OT}一件事情，如果你不能说清楚，十有八九你就作不好, Top language](https://groups.google.com/forum/#!topic/pongba/b2FAdEq5XHI)\n> 因为随着人的知识，经验的积累，我们可以越来越多地依靠经验来解决一些问题，这些经验有些是自己身体力行， \n> 实践得来的，有些则是道听途说，经卷纸传，从其他的地方获得的。在获得这些经验的同时，我们的大脑会建立起 \n> ...\n> \n> ... 于是，在遇到了与自己以前经历过的问题相似，相近的场景时，我们就会条件反射地基于已有经验，设计出一个解决方案，大多数情况下这个方案work得很好。但也有很多情况下，这个方案虽然能work，但并不是最优解，甚至 \n> 自己都未必能说得清楚为什么给出这样的方案。 \n\n> 在作设计的过程中，有的时候，是旧有经验作祟，有的时候，则是因为偷懒的情绪占了上风，自己会满足于浅尝辄 \n\n习惯基于经验来解决问题，而没有反思和推敲这条经验，会使得自己丧失问题的本质思考\n\n\n----\n\n### 为什么我们会沉迷于碎碎念，or 为什么我们竟然没办法言简意骇的说点东西？\n\n\b人的思维大部分时候都是琐碎，散漫的。有组织结构化的思维是需要训练，而且最好有结构化的知识管理工具作为辅助。","slug":"读书笔记/关于无效的碎片思考","published":1,"updated":"2018-09-20T14:11:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmdapdog000gap9k6j4cr7an","content":"<h4 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;</h4><p><a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" target=\"_blank\" rel=\"noopener\">&#x4E3A;&#x4EC0;&#x4E48;&#x4F60;&#x5E94;&#x8BE5;&#xFF08;&#x4ECE;&#x73B0;&#x5728;&#x5F00;&#x59CB;&#x5C31;&#xFF09;&#x5199;&#x535A;&#x5BA2;, By &#x5218;&#x672A;&#x9E4F; | Mind Hacks<br>&#x601D;&#x7EF4;&#x6539;&#x53D8;&#x751F;&#x6D3B;</a></p>\n<blockquote>\n<p>&#x6211;&#x66FE;&#x5728;CSDN&#x4E0A;&#x5199;&#x4E86;&#x8FD1;&#x516D;&#x5E74;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x5728;&#x4E00;&#x5E74;&#x534A;&#x524D;&#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;Google Groups&#xFF08;TopLanguage&#xFF09;&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x7684;&#x957F;&#x671F;&#x9605;&#x8BFB;&#x8005;&#x90FD;&#x662F;&#x4E92;&#x76F8;&#x6709;&#x5171;&#x540C;&#x8BED;&#x8A00;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;Group&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x70ED;&#x706B;&#x671D;&#x5929;&#xFF0C;&#x800C;&#x9AD8;&#x8D28;&#x91CF;&#x7684;&#x6280;&#x672F;&#x8BA8;&#x8BBA;&#x5219;&#x8FDB;&#x4E00;&#x6B65;&#x5438;&#x5F15;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x725B;&#x4EBA;&#x7684;&#x53C2;&#x4E0E;&#xFF0C;&#x96EA;&#x7403;&#x6EDA;&#x8D77;&#x6765;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x5F88;&#x96BE;&#x505C;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x5C06;&#x8FD1;&#x4E00;&#x5E74;&#x534A;&#x4E0B;&#x6765;&#xFF0C;&#x4ECE;&#x8FD9;&#x4E2A;Group&#x7684;&#x8BA8;&#x8BBA;&#x4E2D;&#x6211;&#x83B7;&#x76CA;&#x826F;&#x591A;[1]&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x4E3A;&#x4E86;&#x8BA9;&#x4E00;&#x4E2A;&#x4E0D;&#x660E;&#x767D;&#x7684;&#x4EBA;&#x505A;&#x5230;&#x660E;&#x767D;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x8981;&#x77E5;&#x9053;&#x4ECE;&#x660E;&#x767D;&#x5230;&#x4E0D;&#x660E;&#x767D;&#x4ED6;&#x7A76;&#x7ADF;&#x9700;&#x8981;&#x638C;&#x63E1;&#x54EA;&#x4E9B;&#x6982;&#x5FF5;&#xFF0C;&#x8FD9;&#x5C31;&#x8FEB;&#x4F7F;&#x6211;&#x4EEC;&#x5BF9;&#x6211;&#x4EEC;&#x5927;&#x8111;&#x4E2D;&#x6574;&#x4E2A;&#x7684;&#x77E5;&#x8BC6;&#x4F53;&#x7CFB;&#x6765;&#x4E2A;&#x5BFB;&#x6839;&#x7A76;&#x5E95;&#xFF0C;&#x628A;&#x85CF;&#x5728;&#x6C34;&#x9762;&#x4E4B;&#x4E0B;&#x7684;&#x90A3;&#x4E9B;&#x4E1C;&#x897F;&#x7EDF;&#x7EDF;&#x6316;&#x51FA;&#x6765;&#xFF0C;&#x628A;&#x5927;&#x8111;&#x4E2D;&#x7684;&#x90A3;&#x4E9B;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x3001;&#x4F46;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x77E5;&#x9053;&#x7684;&#x6F5C;&#x5728;&#x6982;&#x5FF5;&#x6216;&#x5047;&#x8BBE;&#xFF08;assumptions&#xFF09;&#x90FD;&#x6316;&#x51FA;&#x6765;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x4ECE;&#x5185;&#x9690;&#x8BB0;&#x5FC6;&#x62C9;&#x626F;&#x5230;&#x5916;&#x663E;&#x8BB0;&#x5FC6;&#x4E2D;&#x3002;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x5B8C;&#x5168;&#x77E5;&#x9053;&#x3001;&#x5E76;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x77E5;&#x9053;&#x4E00;&#x5207;&#x6765;&#x9F99;&#x53BB;&#x8109;&#x7684;&#x4EBA;&#xFF0C;&#x624D;&#x80FD;&#x771F;&#x6B63;&#x628A;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x8BB2;&#x5F97;&#x901A;&#x901A;&#x900F;&#x900F;&#x3002;</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x201C;&#x6211;&#x5F3A;&#x70C8;&#x5730;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x8BF4;&#x6CD5;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x6211;&#x5374;&#x8BF4;&#x4E0D;&#x6E05;&#x5B83;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x5230;&#x5E95;&#x54EA;&#x6709;&#x95EE;&#x9898;&#x201D;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x6781;&#x6709;&#x610F;&#x4E49;&#x7684;&#x77AC;&#x95F4;&#xFF0C;&#x5B83;&#x51E0;&#x4E4E;&#x603B;&#x662F;&#x610F;&#x5473;&#x7740;&#x4F60;&#x5BF9;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x8BA4;&#x8BC6;&#x6709;&#x6F5C;&#x5728;&#x7684;&#x504F;&#x5DEE;&#xFF0C;&#x80AF;&#x5B9A;&#x662F;&#x5728;&#x4F60;&#x81EA;&#x5DF1;&#x90FD;&#x6CA1;&#x6709;&#x89C9;&#x77E5;&#x5230;&#x7684;&#x5730;&#x65B9;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x6F5C;&#x5728;&#x7684;&#x5047;&#x8BBE;&#x3001;&#x5077;&#x6362;&#x4E86;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6982;&#x5FF5;</p>\n</blockquote>\n<blockquote>\n<p>&#x8BA9;&#x4F60;&#x81EA;&#x5DF1;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x6301;&#x7EED;&#x5B66;&#x4E60;&#x548C;&#x601D;&#x8003;&#x7684;&#x4EBA;&#xFF0C;&#x5E76;&#x53EA;&#x5199;&#x4F60;&#x771F;&#x6B63;&#x601D;&#x8003;&#x548C;&#x603B;&#x7ED3;&#x4E4B;&#x540E;&#x7684;&#x4EA7;&#x7269;&#xFF0C;&#x5176;&#x4ED6;&#x4E00;&#x5207;&#x5C31;&#x4F1A;&#x968F;&#x4E4B;&#x800C;&#x6765;&#x3002;<br>&#x5C31;&#x50CF;&#x90A3;&#x53E5;&#x7ECF;&#x5E38;&#x88AB;&#x4EBA;&#x4F20;&#x9605;&#x7684;&#x8BDD;&#xFF1A;&#x53EA;&#x505A;&#x4F60;&#x6700;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x94B1;&#x4F1A;&#x968F;&#x4E4B;&#x800C;&#x6765;[2]&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x2026; &#x6211;&#x60F3;&#x518D;&#x91CD;&#x590D;&#x4E00;&#x4E0B;&#x7684;&#x662F;&#xFF0C;&#x5343;&#x4E07;&#x4E0D;&#x8981;&#x788E;&#x788E;&#x5FF5;&#xFF0C;&#x6211;&#x80FD;&#x7406;&#x89E3;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x60F3;&#x5076;&#x5C14;&#x53D1;&#x53D1;&#x7262;&#x9A9A;&#x7684;&#x51B2;&#x52A8;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x7A97;&#x53E3;&#xFF1A;twitter&#xFF0C;&#x6240;&#x4EE5;&#x7ACB;&#x5373;&#x505C;&#x6B62;&#x5728;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E0A;&#x788E;&#x788E;&#x5FF5;&#xFF0C;&#x9605;&#x8BFB;&#x535A;&#x5BA2;&#x7684;&#x4EBA;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x4FE1;&#x606F;&#x800C;&#x975E;&#x566A;&#x97F3;&#x3002;&#x5982;&#x679C;&#x5B9E;&#x5728;&#x5FCD;&#x4E0D;&#x4F4F;&#x60F3;&#x788E;&#x788E;&#x5FF5;&#x7684;&#x8BDD;&#x4E0D;&#x59A8;&#x6362;&#x4E00;&#x4E0B;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD9;&#x4E48;&#x6765;&#x544A;&#x8BC9;&#x81EA;&#x5DF1;&#xFF1A;&#x5982;&#x679C;&#x4F60;&#x770B;&#x5230;&#x522B;&#x4EBA;&#x535A;&#x5BA2;&#x6765;&#x4E0A;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#xFF0C;&#x4F60;&#x4F1A;&#x6709;&#x5174;&#x8DA3;&#x770B;&#x5417;&#xFF1F;</p>\n</blockquote>\n<blockquote>\n<p>Much of intelligence is knowledge&#xFF0C;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x53D1;&#x4EBA;&#x6DF1;&#x7701;&#x7684;&#x7ECF;&#x5178;&#x5FC3;&#x7406;&#x5B66;&#x5B9E;&#x9A8C;[4]&#xFF1A;</p>\n<p>&#x5C06;&#x5B69;&#x5B50;&#x4EEC;&#x5206;&#x6210;&#x4E24;&#x7EC4;&#xFF0C;&#x901A;&#x8FC7;&#x7ED9;&#x4ED6;&#x4EEC;&#x4E0D;&#x540C;&#x7684;&#x9605;&#x8BFB;&#x6750;&#x6599;&#x8BA9;&#x4E00;&#x7EC4;&#x76F8;&#x4FE1;&#x667A;&#x529B;&#x662F;&#x5929;&#x751F;&#x7684;&#xFF0C;&#x4E0D;&#x53EF;&#x5728;&#x540E;&#x5929;&#x6539;&#x53D8;&#x7684;&#xFF0C;&#x53E6;&#x4E00;&#x7EC4;&#x5219;&#x8BA9;&#x4ED6;&#x4EEC;&#x76F8;&#x4FE1;&#x667A;&#x529B;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x77E5;&#x8BC6;&#x548C;&#x6280;&#x80FD;&#x7684;&#x4EE3;&#x540D;&#x8BCD;&#xFF0C;&#x5B8C;&#x5168;&#x662F;&#x540E;&#x5929;&#x4E60;&#x5F97;&#x7684;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8BA9;&#x4ED6;&#x4EEC;&#x505A;&#x4E00;&#x7EC4;&#x4EFB;&#x52A1;&#xFF0C;&#x90A3;&#x4E9B;&#x88AB;&#x76F8;&#x4FE1;&#x667A;&#x529B;&#x5929;&#x751F;&#x8BF4;&#x7684;&#x5B69;&#x5B50;&#xFF0C;&#x503E;&#x5411;&#x4E8E;&#x56DE;&#x907F;&#x56F0;&#x96BE;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x9009;&#x62E9;&#x8F83;&#x5BB9;&#x6613;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x903B;&#x8F91;&#x60F3;&#x5FC5;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;&#x5982;&#x679C;&#x505A;&#x56F0;&#x96BE;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x589E;&#x5927;&#x4E86;&#x5931;&#x8D25;&#x7684;&#x51E0;&#x7387;&#xFF0C;&#x5C31;&#x5728;&#x964D;&#x4F4E;&#x4E86;&#x81EA;&#x5DF1;&#x5728;&#x522B;&#x4EBA;&#x548C;&#x81EA;&#x5DF1;&#x5FC3;&#x76EE;&#x4E2D;&#x7684;&#x667A;&#x529B;&#x7684;&#x503C;&#x3002;&#x4E3A;&#x4E86;&#x4FDD;&#x62A4;&#x8FD9;&#x4E2A;&#x667A;&#x529B;&#x7684;&#x503C;&#x4E0D;&#x88AB;&#x964D;&#x4F4E;&#xFF0C;&#x5E94;&#x8BE5;&#x907F;&#x514D;&#x90A3;&#x4E9B;&#x6709;&#x5931;&#x8D25;&#x98CE;&#x9669;&#x7684;&#x9879;&#x76EE;&#x3002;&#x800C;&#x53E6;&#x4E00;&#x7EC4;&#x5B69;&#x5B50;&#x5219;&#x5BF9;&#x4E8E;&#x6709;&#x6311;&#x6218;&#x6027;&#x7684;&#x4E8B;&#x60C5;&#x8DC3;&#x8DC3;&#x6B32;&#x8BD5;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5931;&#x8D25;&#x7684;&#x65F6;&#x5019;&#x660E;&#x663E;&#x6CA1;&#x6709;&#x524D;&#x8005;&#x6CAE;&#x4E27;&#xFF0C;&#x56E0;&#x4E3A;&#x5931;&#x8D25;&#x4E5F;&#x662F;&#x5B66;&#x5F97;&#x65B0;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x4E0D;&#x7BA1;&#x600E;&#x6837;&#x90FD;&#x662F;&#x201C;&#x667A;&#x529B;&#x201D;&#x7684;&#x63D0;&#x9AD8;&#x3002;</p>\n</blockquote>\n<h4 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;</h4><p><a href=\"http://mindhacks.cn/2009/02/09/writing-is-better-thinking/\" target=\"_blank\" rel=\"noopener\">&#x4E66;&#x5199;&#x662F;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x601D;&#x8003;&#xFF0C;By &#x5218;&#x672A;&#x9E4F;</a></p>\n<h4 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;</h4><p><a href=\"https://groups.google.com/forum/#!topic/pongba/b2FAdEq5XHI\" target=\"_blank\" rel=\"noopener\">Re: {OT}&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x80FD;&#x8BF4;&#x6E05;&#x695A;&#xFF0C;&#x5341;&#x6709;&#x516B;&#x4E5D;&#x4F60;&#x5C31;&#x4F5C;&#x4E0D;&#x597D;, Top language</a></p>\n<blockquote>\n<p>&#x56E0;&#x4E3A;&#x968F;&#x7740;&#x4EBA;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x7ECF;&#x9A8C;&#x7684;&#x79EF;&#x7D2F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x5730;&#x4F9D;&#x9760;&#x7ECF;&#x9A8C;&#x6765;&#x89E3;&#x51B3;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x4E9B;&#x7ECF;&#x9A8C;&#x6709;&#x4E9B;&#x662F;&#x81EA;&#x5DF1;&#x8EAB;&#x4F53;&#x529B;&#x884C;&#xFF0C;<br>&#x5B9E;&#x8DF5;&#x5F97;&#x6765;&#x7684;&#xFF0C;&#x6709;&#x4E9B;&#x5219;&#x662F;&#x9053;&#x542C;&#x9014;&#x8BF4;&#xFF0C;&#x7ECF;&#x5377;&#x7EB8;&#x4F20;&#xFF0C;&#x4ECE;&#x5176;&#x4ED6;&#x7684;&#x5730;&#x65B9;&#x83B7;&#x5F97;&#x7684;&#x3002;&#x5728;&#x83B7;&#x5F97;&#x8FD9;&#x4E9B;&#x7ECF;&#x9A8C;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x5927;&#x8111;&#x4F1A;&#x5EFA;&#x7ACB;&#x8D77;<br>&#x2026;</p>\n<p>&#x2026; &#x4E8E;&#x662F;&#xFF0C;&#x5728;&#x9047;&#x5230;&#x4E86;&#x4E0E;&#x81EA;&#x5DF1;&#x4EE5;&#x524D;&#x7ECF;&#x5386;&#x8FC7;&#x7684;&#x95EE;&#x9898;&#x76F8;&#x4F3C;&#xFF0C;&#x76F8;&#x8FD1;&#x7684;&#x573A;&#x666F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x6761;&#x4EF6;&#x53CD;&#x5C04;&#x5730;&#x57FA;&#x4E8E;&#x5DF2;&#x6709;&#x7ECF;&#x9A8C;&#xFF0C;&#x8BBE;&#x8BA1;&#x51FA;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;work&#x5F97;&#x5F88;&#x597D;&#x3002;&#x4F46;&#x4E5F;&#x6709;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;&#x867D;&#x7136;&#x80FD;work&#xFF0C;&#x4F46;&#x5E76;&#x4E0D;&#x662F;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x751A;&#x81F3;<br>&#x81EA;&#x5DF1;&#x90FD;&#x672A;&#x5FC5;&#x80FD;&#x8BF4;&#x5F97;&#x6E05;&#x695A;&#x4E3A;&#x4EC0;&#x4E48;&#x7ED9;&#x51FA;&#x8FD9;&#x6837;&#x7684;&#x65B9;&#x6848;&#x3002; </p>\n</blockquote>\n<blockquote>\n<p>&#x5728;&#x4F5C;&#x8BBE;&#x8BA1;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x65E7;&#x6709;&#x7ECF;&#x9A8C;&#x4F5C;&#x795F;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5219;&#x662F;&#x56E0;&#x4E3A;&#x5077;&#x61D2;&#x7684;&#x60C5;&#x7EEA;&#x5360;&#x4E86;&#x4E0A;&#x98CE;&#xFF0C;&#x81EA;&#x5DF1;&#x4F1A;&#x6EE1;&#x8DB3;&#x4E8E;&#x6D45;&#x5C1D;&#x8F84; </p>\n</blockquote>\n<p>&#x4E60;&#x60EF;&#x57FA;&#x4E8E;&#x7ECF;&#x9A8C;&#x6765;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x53CD;&#x601D;&#x548C;&#x63A8;&#x6572;&#x8FD9;&#x6761;&#x7ECF;&#x9A8C;&#xFF0C;&#x4F1A;&#x4F7F;&#x5F97;&#x81EA;&#x5DF1;&#x4E27;&#x5931;&#x95EE;&#x9898;&#x7684;&#x672C;&#x8D28;&#x601D;&#x8003;</p>\n<hr>\n<h3 id=\"&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or-&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;\"><a href=\"#&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or-&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;\" class=\"headerlink\" title=\"&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or &#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;\"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or &#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;</h3><p>\b&#x4EBA;&#x7684;&#x601D;&#x7EF4;&#x5927;&#x90E8;&#x5206;&#x65F6;&#x5019;&#x90FD;&#x662F;&#x7410;&#x788E;&#xFF0C;&#x6563;&#x6F2B;&#x7684;&#x3002;&#x6709;&#x7EC4;&#x7EC7;&#x7ED3;&#x6784;&#x5316;&#x7684;&#x601D;&#x7EF4;&#x662F;&#x9700;&#x8981;&#x8BAD;&#x7EC3;&#xFF0C;&#x800C;&#x4E14;&#x6700;&#x597D;&#x6709;&#x7ED3;&#x6784;&#x5316;&#x7684;&#x77E5;&#x8BC6;&#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x4F5C;&#x4E3A;&#x8F85;&#x52A9;&#x3002;</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E00;</h4><p><a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" target=\"_blank\" rel=\"noopener\">&#x4E3A;&#x4EC0;&#x4E48;&#x4F60;&#x5E94;&#x8BE5;&#xFF08;&#x4ECE;&#x73B0;&#x5728;&#x5F00;&#x59CB;&#x5C31;&#xFF09;&#x5199;&#x535A;&#x5BA2;, By &#x5218;&#x672A;&#x9E4F; | Mind Hacks<br>&#x601D;&#x7EF4;&#x6539;&#x53D8;&#x751F;&#x6D3B;</a></p>\n<blockquote>\n<p>&#x6211;&#x66FE;&#x5728;CSDN&#x4E0A;&#x5199;&#x4E86;&#x8FD1;&#x516D;&#x5E74;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x5728;&#x4E00;&#x5E74;&#x534A;&#x524D;&#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;Google Groups&#xFF08;TopLanguage&#xFF09;&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x7684;&#x957F;&#x671F;&#x9605;&#x8BFB;&#x8005;&#x90FD;&#x662F;&#x4E92;&#x76F8;&#x6709;&#x5171;&#x540C;&#x8BED;&#x8A00;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;Group&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x70ED;&#x706B;&#x671D;&#x5929;&#xFF0C;&#x800C;&#x9AD8;&#x8D28;&#x91CF;&#x7684;&#x6280;&#x672F;&#x8BA8;&#x8BBA;&#x5219;&#x8FDB;&#x4E00;&#x6B65;&#x5438;&#x5F15;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x725B;&#x4EBA;&#x7684;&#x53C2;&#x4E0E;&#xFF0C;&#x96EA;&#x7403;&#x6EDA;&#x8D77;&#x6765;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x5F88;&#x96BE;&#x505C;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x5C06;&#x8FD1;&#x4E00;&#x5E74;&#x534A;&#x4E0B;&#x6765;&#xFF0C;&#x4ECE;&#x8FD9;&#x4E2A;Group&#x7684;&#x8BA8;&#x8BBA;&#x4E2D;&#x6211;&#x83B7;&#x76CA;&#x826F;&#x591A;[1]&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x4E3A;&#x4E86;&#x8BA9;&#x4E00;&#x4E2A;&#x4E0D;&#x660E;&#x767D;&#x7684;&#x4EBA;&#x505A;&#x5230;&#x660E;&#x767D;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x8981;&#x77E5;&#x9053;&#x4ECE;&#x660E;&#x767D;&#x5230;&#x4E0D;&#x660E;&#x767D;&#x4ED6;&#x7A76;&#x7ADF;&#x9700;&#x8981;&#x638C;&#x63E1;&#x54EA;&#x4E9B;&#x6982;&#x5FF5;&#xFF0C;&#x8FD9;&#x5C31;&#x8FEB;&#x4F7F;&#x6211;&#x4EEC;&#x5BF9;&#x6211;&#x4EEC;&#x5927;&#x8111;&#x4E2D;&#x6574;&#x4E2A;&#x7684;&#x77E5;&#x8BC6;&#x4F53;&#x7CFB;&#x6765;&#x4E2A;&#x5BFB;&#x6839;&#x7A76;&#x5E95;&#xFF0C;&#x628A;&#x85CF;&#x5728;&#x6C34;&#x9762;&#x4E4B;&#x4E0B;&#x7684;&#x90A3;&#x4E9B;&#x4E1C;&#x897F;&#x7EDF;&#x7EDF;&#x6316;&#x51FA;&#x6765;&#xFF0C;&#x628A;&#x5927;&#x8111;&#x4E2D;&#x7684;&#x90A3;&#x4E9B;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x3001;&#x4F46;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x77E5;&#x9053;&#x7684;&#x6F5C;&#x5728;&#x6982;&#x5FF5;&#x6216;&#x5047;&#x8BBE;&#xFF08;assumptions&#xFF09;&#x90FD;&#x6316;&#x51FA;&#x6765;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x4ECE;&#x5185;&#x9690;&#x8BB0;&#x5FC6;&#x62C9;&#x626F;&#x5230;&#x5916;&#x663E;&#x8BB0;&#x5FC6;&#x4E2D;&#x3002;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x5B8C;&#x5168;&#x77E5;&#x9053;&#x3001;&#x5E76;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x77E5;&#x9053;&#x4E00;&#x5207;&#x6765;&#x9F99;&#x53BB;&#x8109;&#x7684;&#x4EBA;&#xFF0C;&#x624D;&#x80FD;&#x771F;&#x6B63;&#x628A;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x8BB2;&#x5F97;&#x901A;&#x901A;&#x900F;&#x900F;&#x3002;</p>\n</blockquote>","more":"<blockquote>\n<p>&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x201C;&#x6211;&#x5F3A;&#x70C8;&#x5730;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x8BF4;&#x6CD5;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x6211;&#x5374;&#x8BF4;&#x4E0D;&#x6E05;&#x5B83;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x5230;&#x5E95;&#x54EA;&#x6709;&#x95EE;&#x9898;&#x201D;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x6781;&#x6709;&#x610F;&#x4E49;&#x7684;&#x77AC;&#x95F4;&#xFF0C;&#x5B83;&#x51E0;&#x4E4E;&#x603B;&#x662F;&#x610F;&#x5473;&#x7740;&#x4F60;&#x5BF9;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x8BA4;&#x8BC6;&#x6709;&#x6F5C;&#x5728;&#x7684;&#x504F;&#x5DEE;&#xFF0C;&#x80AF;&#x5B9A;&#x662F;&#x5728;&#x4F60;&#x81EA;&#x5DF1;&#x90FD;&#x6CA1;&#x6709;&#x89C9;&#x77E5;&#x5230;&#x7684;&#x5730;&#x65B9;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x6F5C;&#x5728;&#x7684;&#x5047;&#x8BBE;&#x3001;&#x5077;&#x6362;&#x4E86;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6982;&#x5FF5;</p>\n</blockquote>\n<blockquote>\n<p>&#x8BA9;&#x4F60;&#x81EA;&#x5DF1;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x6301;&#x7EED;&#x5B66;&#x4E60;&#x548C;&#x601D;&#x8003;&#x7684;&#x4EBA;&#xFF0C;&#x5E76;&#x53EA;&#x5199;&#x4F60;&#x771F;&#x6B63;&#x601D;&#x8003;&#x548C;&#x603B;&#x7ED3;&#x4E4B;&#x540E;&#x7684;&#x4EA7;&#x7269;&#xFF0C;&#x5176;&#x4ED6;&#x4E00;&#x5207;&#x5C31;&#x4F1A;&#x968F;&#x4E4B;&#x800C;&#x6765;&#x3002;<br>&#x5C31;&#x50CF;&#x90A3;&#x53E5;&#x7ECF;&#x5E38;&#x88AB;&#x4EBA;&#x4F20;&#x9605;&#x7684;&#x8BDD;&#xFF1A;&#x53EA;&#x505A;&#x4F60;&#x6700;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x94B1;&#x4F1A;&#x968F;&#x4E4B;&#x800C;&#x6765;[2]&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x2026; &#x6211;&#x60F3;&#x518D;&#x91CD;&#x590D;&#x4E00;&#x4E0B;&#x7684;&#x662F;&#xFF0C;&#x5343;&#x4E07;&#x4E0D;&#x8981;&#x788E;&#x788E;&#x5FF5;&#xFF0C;&#x6211;&#x80FD;&#x7406;&#x89E3;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x60F3;&#x5076;&#x5C14;&#x53D1;&#x53D1;&#x7262;&#x9A9A;&#x7684;&#x51B2;&#x52A8;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x7A97;&#x53E3;&#xFF1A;twitter&#xFF0C;&#x6240;&#x4EE5;&#x7ACB;&#x5373;&#x505C;&#x6B62;&#x5728;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E0A;&#x788E;&#x788E;&#x5FF5;&#xFF0C;&#x9605;&#x8BFB;&#x535A;&#x5BA2;&#x7684;&#x4EBA;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x4FE1;&#x606F;&#x800C;&#x975E;&#x566A;&#x97F3;&#x3002;&#x5982;&#x679C;&#x5B9E;&#x5728;&#x5FCD;&#x4E0D;&#x4F4F;&#x60F3;&#x788E;&#x788E;&#x5FF5;&#x7684;&#x8BDD;&#x4E0D;&#x59A8;&#x6362;&#x4E00;&#x4E0B;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD9;&#x4E48;&#x6765;&#x544A;&#x8BC9;&#x81EA;&#x5DF1;&#xFF1A;&#x5982;&#x679C;&#x4F60;&#x770B;&#x5230;&#x522B;&#x4EBA;&#x535A;&#x5BA2;&#x6765;&#x4E0A;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#xFF0C;&#x4F60;&#x4F1A;&#x6709;&#x5174;&#x8DA3;&#x770B;&#x5417;&#xFF1F;</p>\n</blockquote>\n<blockquote>\n<p>Much of intelligence is knowledge&#xFF0C;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x53D1;&#x4EBA;&#x6DF1;&#x7701;&#x7684;&#x7ECF;&#x5178;&#x5FC3;&#x7406;&#x5B66;&#x5B9E;&#x9A8C;[4]&#xFF1A;</p>\n<p>&#x5C06;&#x5B69;&#x5B50;&#x4EEC;&#x5206;&#x6210;&#x4E24;&#x7EC4;&#xFF0C;&#x901A;&#x8FC7;&#x7ED9;&#x4ED6;&#x4EEC;&#x4E0D;&#x540C;&#x7684;&#x9605;&#x8BFB;&#x6750;&#x6599;&#x8BA9;&#x4E00;&#x7EC4;&#x76F8;&#x4FE1;&#x667A;&#x529B;&#x662F;&#x5929;&#x751F;&#x7684;&#xFF0C;&#x4E0D;&#x53EF;&#x5728;&#x540E;&#x5929;&#x6539;&#x53D8;&#x7684;&#xFF0C;&#x53E6;&#x4E00;&#x7EC4;&#x5219;&#x8BA9;&#x4ED6;&#x4EEC;&#x76F8;&#x4FE1;&#x667A;&#x529B;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x77E5;&#x8BC6;&#x548C;&#x6280;&#x80FD;&#x7684;&#x4EE3;&#x540D;&#x8BCD;&#xFF0C;&#x5B8C;&#x5168;&#x662F;&#x540E;&#x5929;&#x4E60;&#x5F97;&#x7684;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8BA9;&#x4ED6;&#x4EEC;&#x505A;&#x4E00;&#x7EC4;&#x4EFB;&#x52A1;&#xFF0C;&#x90A3;&#x4E9B;&#x88AB;&#x76F8;&#x4FE1;&#x667A;&#x529B;&#x5929;&#x751F;&#x8BF4;&#x7684;&#x5B69;&#x5B50;&#xFF0C;&#x503E;&#x5411;&#x4E8E;&#x56DE;&#x907F;&#x56F0;&#x96BE;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x9009;&#x62E9;&#x8F83;&#x5BB9;&#x6613;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x903B;&#x8F91;&#x60F3;&#x5FC5;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;&#x5982;&#x679C;&#x505A;&#x56F0;&#x96BE;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x589E;&#x5927;&#x4E86;&#x5931;&#x8D25;&#x7684;&#x51E0;&#x7387;&#xFF0C;&#x5C31;&#x5728;&#x964D;&#x4F4E;&#x4E86;&#x81EA;&#x5DF1;&#x5728;&#x522B;&#x4EBA;&#x548C;&#x81EA;&#x5DF1;&#x5FC3;&#x76EE;&#x4E2D;&#x7684;&#x667A;&#x529B;&#x7684;&#x503C;&#x3002;&#x4E3A;&#x4E86;&#x4FDD;&#x62A4;&#x8FD9;&#x4E2A;&#x667A;&#x529B;&#x7684;&#x503C;&#x4E0D;&#x88AB;&#x964D;&#x4F4E;&#xFF0C;&#x5E94;&#x8BE5;&#x907F;&#x514D;&#x90A3;&#x4E9B;&#x6709;&#x5931;&#x8D25;&#x98CE;&#x9669;&#x7684;&#x9879;&#x76EE;&#x3002;&#x800C;&#x53E6;&#x4E00;&#x7EC4;&#x5B69;&#x5B50;&#x5219;&#x5BF9;&#x4E8E;&#x6709;&#x6311;&#x6218;&#x6027;&#x7684;&#x4E8B;&#x60C5;&#x8DC3;&#x8DC3;&#x6B32;&#x8BD5;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5931;&#x8D25;&#x7684;&#x65F6;&#x5019;&#x660E;&#x663E;&#x6CA1;&#x6709;&#x524D;&#x8005;&#x6CAE;&#x4E27;&#xFF0C;&#x56E0;&#x4E3A;&#x5931;&#x8D25;&#x4E5F;&#x662F;&#x5B66;&#x5F97;&#x65B0;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x4E0D;&#x7BA1;&#x600E;&#x6837;&#x90FD;&#x662F;&#x201C;&#x667A;&#x529B;&#x201D;&#x7684;&#x63D0;&#x9AD8;&#x3002;</p>\n</blockquote>\n<h4 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E8C;</h4><p><a href=\"http://mindhacks.cn/2009/02/09/writing-is-better-thinking/\" target=\"_blank\" rel=\"noopener\">&#x4E66;&#x5199;&#x662F;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x601D;&#x8003;&#xFF0C;By &#x5218;&#x672A;&#x9E4F;</a></p>\n<h4 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#x4E09;</h4><p><a href=\"https://groups.google.com/forum/#!topic/pongba/b2FAdEq5XHI\" target=\"_blank\" rel=\"noopener\">Re: {OT}&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x80FD;&#x8BF4;&#x6E05;&#x695A;&#xFF0C;&#x5341;&#x6709;&#x516B;&#x4E5D;&#x4F60;&#x5C31;&#x4F5C;&#x4E0D;&#x597D;, Top language</a></p>\n<blockquote>\n<p>&#x56E0;&#x4E3A;&#x968F;&#x7740;&#x4EBA;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x7ECF;&#x9A8C;&#x7684;&#x79EF;&#x7D2F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x5730;&#x4F9D;&#x9760;&#x7ECF;&#x9A8C;&#x6765;&#x89E3;&#x51B3;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x4E9B;&#x7ECF;&#x9A8C;&#x6709;&#x4E9B;&#x662F;&#x81EA;&#x5DF1;&#x8EAB;&#x4F53;&#x529B;&#x884C;&#xFF0C;<br>&#x5B9E;&#x8DF5;&#x5F97;&#x6765;&#x7684;&#xFF0C;&#x6709;&#x4E9B;&#x5219;&#x662F;&#x9053;&#x542C;&#x9014;&#x8BF4;&#xFF0C;&#x7ECF;&#x5377;&#x7EB8;&#x4F20;&#xFF0C;&#x4ECE;&#x5176;&#x4ED6;&#x7684;&#x5730;&#x65B9;&#x83B7;&#x5F97;&#x7684;&#x3002;&#x5728;&#x83B7;&#x5F97;&#x8FD9;&#x4E9B;&#x7ECF;&#x9A8C;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x5927;&#x8111;&#x4F1A;&#x5EFA;&#x7ACB;&#x8D77;<br>&#x2026;</p>\n<p>&#x2026; &#x4E8E;&#x662F;&#xFF0C;&#x5728;&#x9047;&#x5230;&#x4E86;&#x4E0E;&#x81EA;&#x5DF1;&#x4EE5;&#x524D;&#x7ECF;&#x5386;&#x8FC7;&#x7684;&#x95EE;&#x9898;&#x76F8;&#x4F3C;&#xFF0C;&#x76F8;&#x8FD1;&#x7684;&#x573A;&#x666F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x6761;&#x4EF6;&#x53CD;&#x5C04;&#x5730;&#x57FA;&#x4E8E;&#x5DF2;&#x6709;&#x7ECF;&#x9A8C;&#xFF0C;&#x8BBE;&#x8BA1;&#x51FA;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;work&#x5F97;&#x5F88;&#x597D;&#x3002;&#x4F46;&#x4E5F;&#x6709;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;&#x867D;&#x7136;&#x80FD;work&#xFF0C;&#x4F46;&#x5E76;&#x4E0D;&#x662F;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x751A;&#x81F3;<br>&#x81EA;&#x5DF1;&#x90FD;&#x672A;&#x5FC5;&#x80FD;&#x8BF4;&#x5F97;&#x6E05;&#x695A;&#x4E3A;&#x4EC0;&#x4E48;&#x7ED9;&#x51FA;&#x8FD9;&#x6837;&#x7684;&#x65B9;&#x6848;&#x3002; </p>\n</blockquote>\n<blockquote>\n<p>&#x5728;&#x4F5C;&#x8BBE;&#x8BA1;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x65E7;&#x6709;&#x7ECF;&#x9A8C;&#x4F5C;&#x795F;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5219;&#x662F;&#x56E0;&#x4E3A;&#x5077;&#x61D2;&#x7684;&#x60C5;&#x7EEA;&#x5360;&#x4E86;&#x4E0A;&#x98CE;&#xFF0C;&#x81EA;&#x5DF1;&#x4F1A;&#x6EE1;&#x8DB3;&#x4E8E;&#x6D45;&#x5C1D;&#x8F84; </p>\n</blockquote>\n<p>&#x4E60;&#x60EF;&#x57FA;&#x4E8E;&#x7ECF;&#x9A8C;&#x6765;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x53CD;&#x601D;&#x548C;&#x63A8;&#x6572;&#x8FD9;&#x6761;&#x7ECF;&#x9A8C;&#xFF0C;&#x4F1A;&#x4F7F;&#x5F97;&#x81EA;&#x5DF1;&#x4E27;&#x5931;&#x95EE;&#x9898;&#x7684;&#x672C;&#x8D28;&#x601D;&#x8003;</p>\n<hr>\n<h3 id=\"&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or-&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;\"><a href=\"#&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or-&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;\" class=\"headerlink\" title=\"&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or &#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;\"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4F1A;&#x6C89;&#x8FF7;&#x4E8E;&#x788E;&#x788E;&#x5FF5;&#xFF0C;or &#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x7ADF;&#x7136;&#x6CA1;&#x529E;&#x6CD5;&#x8A00;&#x7B80;&#x610F;&#x9A87;&#x7684;&#x8BF4;&#x70B9;&#x4E1C;&#x897F;&#xFF1F;</h3><p>\b&#x4EBA;&#x7684;&#x601D;&#x7EF4;&#x5927;&#x90E8;&#x5206;&#x65F6;&#x5019;&#x90FD;&#x662F;&#x7410;&#x788E;&#xFF0C;&#x6563;&#x6F2B;&#x7684;&#x3002;&#x6709;&#x7EC4;&#x7EC7;&#x7ED3;&#x6784;&#x5316;&#x7684;&#x601D;&#x7EF4;&#x662F;&#x9700;&#x8981;&#x8BAD;&#x7EC3;&#xFF0C;&#x800C;&#x4E14;&#x6700;&#x597D;&#x6709;&#x7ED3;&#x6784;&#x5316;&#x7684;&#x77E5;&#x8BC6;&#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x4F5C;&#x4E3A;&#x8F85;&#x52A9;&#x3002;</p>"},{"layout":"post","title":"List study","date":"2018-09-01T09:01:00.000Z","_content":"## List \n\n\n### Overview\n##### List族最重要的几个特点：\n* 有序\n* 允许重复元素\n* 支持add, remove, set, get\n* 可以随机访问元素\n\n\n##### Lis族集合类：\n\n\n![java-collection-hierarchy.jpeg](https://www.programcreek.com/wp-content/uploads/2009/02/java-collection-hierarchy.jpeg)\n\n* List族中，最主要的三种集合是`ArrayList`,`Vector`和`LinkedList`，后面将对这三种类进行分析和比较。\n* 可以简单对比一下List和Set\n\n|  |List  |Set  |\n| --- | --- | --- |\n|有序 | Y |N  |\n|重复元素 |Y  |N  |\n|随机访问 |Y  |N  |\n\n<!--more-->\n### ArrayList\n\nJava Platform SE 8的描述：\n\n> Resizable-array implementation of the List interface. Implements all optional list operations, and permits all elements, including null. In addition to implementing the List interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to Vector, except that it is unsynchronized.)\n\n* 可变长数组\n* 实现所有list的操作\n* 允许null\n* 和Vector相似，但是unsynchronized\n\n##### <span style=\"color:#ab4642\">ArrayList是一种能够自动扩充长度的数组。</span>\n\n\n#### 性能\n> The size, isEmpty, get, set, iterator, and listIterator operations run in constant time.\n> The add operation runs in amortized constant time, that is, adding n elements requires O(n) time. \n\n* **ArrayList**的性能可以类比<span style=\"color:#ab4642\">数组</span>的性能，在随机访问性能好。增、删操作性能差。\n\n\n#### 线程安全\n> <span style=\"color:#ab4642\">Note that this implementation is not synchronized...</span>\n\n`Collections.synchronizedList`: \n> Returns a synchronized (thread-safe) list backed by the specified list. In order to guarantee serial access, it is critical that all access to the backing list is accomplished through the returned list.*\n* 不能依赖fail-fast进行程序同步控制，应该对ArrayList进行包装（`Collections.synchronizedList`），合法的ArrayList同步操作demo：\n```java\n List list = Collections.synchronizedList(new ArrayList());\n      ...\n  synchronized (list) {\n      Iterator i = list.iterator(); // Must be in synchronized block\n      while (i.hasNext())\n          foo(i.next());\n  }\n```\n\n### Vector\n> The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index.\n\n> The iterators returned by this class's iterator and listIterator methods are fail-fast:...\n\n> ..., If a thread-safe implementation is not needed, it is recommended to use ArrayList in place of Vector.\n\n* Vector和ArrayList的性能相似，最重要的<span style=\"color:#ab4642\">区别:</span>是:\n    * `Vector`是<span style=\"color:#ab4642\">线程安全</span>的。\n    * 扩容机制不一样，具体可以看后面的**扩容代码解读：**\n\n### LinkedList\n> Doubly-linked list implementation of the List and Deque interfaces. Implements all optional list operations, and permits all elements (including null).\nAll of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.\n\n#### 性能：\n* 具有链表的特点，对增加和删除节点的操作效率高（特别是表头或者表尾的操作）。但是，随机访问效率低。\n* \n#### 同步：\n> The iterators returned by this class's iterator and listIterator methods are fail-fast\n>\n* LinkedList是线程不安全的，需要包装：\n```java\nList list = Collections.synchronizedList(new LinkedList(...));\n```\n\n### ArrayList vs Vector vs LinkedList\n\n|  | ArrayList | Vector  | LinkedList  |\n| --- | --- | --- | --- |\n| list接口 | Y |Y  | Y |\n| deque接口 |N |N  | Y |\n|elements 允许null|Y|Y|Y|\n| growable | Y |Y  | N |\n| get |O(1)  |O(1)  | O(n) |\n| set |O(1) |O(1) | O(n)|\n| remove| O(n)| O(n)| O(1)|\n| add| O(n)| O(n)| O(1)|\n| synchronized| N| Y|N|\n| synchronized| N| Y|N|\n|fail-fast|Y|Y|Y|\n\n\n## 几个值得深入思考的问题\n\n### fail-fast \n fail-fast 机制是java集合(Collection)中的一种错误机制。`ArrayList`,`Vector`, `LinkedList` 都满足fail-fast机制。官方文档中对fail-fast的解释如下：\n> fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove or add methods, the iterator will throw a `ConcurrentModificationException`. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.\n\n\n* fail-fast产生的原因就在于程序在对collection（如: ArrayList）进行迭代时，某个线程对该 collection **在结构上对其做了修改**，这时迭代器就会抛出 `ConcurrentModificationException` 异常信息，从而产生 **fail-fast**\n> 要了解fail-fast机制，我们首先要对ConcurrentModificationException 异常有所了解。当方法检测到对象的并发修改，但不允许这种修改时就抛出该异常。同时需要注意的是，该异常不会始终指出对象已经由不同线程并发修改，如果单线程违反了规则，同样也有可能会抛出改异常。\n\n#### ConcurrentModificationException\n\n* 容器使用迭代器来进行统一个容器访问操作。迭代器本质上只是容器的一个视图，迭代器里存放容器访问的游标，以及expectedModCount\n* `expectedModCount`是迭代器fail-fast机制的关键，\n* 迭代器在操作容器元素前，会`checkForComodification`，其实就是检查`expectedModCount==modCount`\n* 迭代器在对容器作结构性后，会刷新`expectedModCount = modCount`。\n* 换言之，如果在迭代器同步到最新的modCount后，有其他操作修改了容器的modCount，那么`checkForComodification`就会校验失败，于是就抛出`ConcurrentModificationException`\n\n``` java\n private class Itr implements Iterator<E> {\n        /**\n         * Index of element to be returned by subsequent call to next.\n         */\n        int cursor = 0;\n\n        /**\n         * Index of element returned by most recent call to next or\n         * previous.  Reset to -1 if this element is deleted by a call\n         * to remove.\n         */\n        int lastRet = -1;\n\n        /**\n         * The modCount value that the iterator believes that the backing\n         * List should have.  If this expectation is violated, the iterator\n         * has detected concurrent modification.\n         */\n        int expectedModCount = modCount;\n\n        public boolean hasNext() {\n            return cursor != size();\n        }\n\n        public E next() {\n            checkForComodification();\n            try {\n                int i = cursor;\n                E next = get(i);\n                lastRet = i;\n                cursor = i + 1;\n                return next;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException();\n            }\n        }\n\n        public void remove() {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                AbstractList.this.remove(lastRet);\n                if (lastRet < cursor)\n                    cursor--;\n                lastRet = -1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException e) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        final void checkForComodification() {\n            if (modCount != expectedModCount)\n                throw new ConcurrentModificationException();\n        }\n    }\n    \n        private class ListItr extends Itr implements ListIterator<E> {\n        ListItr(int index) {\n            cursor = index;\n        }\n\n        public boolean hasPrevious() {\n            return cursor != 0;\n        }\n\n        public E previous() {\n            checkForComodification();\n            try {\n                int i = cursor - 1;\n                E previous = get(i);\n                lastRet = cursor = i;\n                return previous;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException();\n            }\n        }\n\n        public int nextIndex() {\n            return cursor;\n        }\n\n        public int previousIndex() {\n            return cursor-1;\n        }\n\n        public void set(E e) {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                AbstractList.this.set(lastRet, e);\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException ex) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        public void add(E e) {\n            checkForComodification();\n\n            try {\n                int i = cursor;\n                AbstractList.this.add(i, e);\n                lastRet = -1;\n                cursor = i + 1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException ex) {\n                throw new ConcurrentModificationException();\n            }\n        }\n    }\n\n```\n\n\n值得一提的时候，当不适用迭代器访问和操作容器的时候，不会抛出`ConcurrentModificationException`，但是并不意味着程序正确。即使，是迭代器访问的程序，也有恰好未发生`ConcurrentModificationException`的情况。\n\n> Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.\n> 注意，迭代器的快速失败行为无法得到保证，因为一般来说，不可能对是否出现不同步并发修改做出任何硬性保证。快速失败迭代器会尽最大努力抛出 ConcurrentModificationException。因此，为提高这类迭代器的正确性而编写一个依赖于此异常的程序是错误的做法：迭代器的快速失败行为应该仅用于检测 bug。\n\n* 不能依赖fail-fast机制来保证程序的正确性。`ConcurrentModificationException`只适合用来查bug。\n\n##### fast-fail的测试代码\n\n* `failFastWorkTest`的Thread t1使用迭代器来访问容器，在访问过程中，Thread t2对容器调用了`ArrayList.remove(element)`操作，此后，当t1迭代到下一个元素时候，（`next()`会检查modCount, 即`checkForComodification`）这将引发fast-fail.\n* \n根据上面描述，我们可以写个demo来测试ArrayList的fast-fail：\n```java\n    @Test\n    public void failFastWorkTest() throws InterruptedException, ConcurrentModificationException     {\n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                Iterator<Integer> iterator = arrayList.iterator();\n                while(iterator.hasNext()) {\n                    int i = iterator.next();\n                    logger.info(\"thread t1 get item : {}\", i);\n                    try {\n                        Thread.sleep(10);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n\n                }\n            }\n        });\n\n        Thread t2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i = 0; i < 10; i++) {\n                    if (i == 3) {\n//                        arrayList.remove(i);\n                        arrayList.add(i);\n                    }\n\n                }\n            }\n        });\n\n        runThreads(t1, t2);\n    }\n    private void runThreads(Thread t1, Thread t2) throws InterruptedException {\n        logger.info(\"start thread 1 \");\n        t1.start();\n        logger.info(\"start thread 2 \");\n        t2.start();\n        t1.join();\n        logger.info(\"end thread1 \");\n        t2.join();\n        logger.info(\"end thread2 \");\n        logger.info(\"fail fast test done\");\n\n        logger.info(\"finnal array List\", arrayList);\n    }\n```\n\n* `failFastNoWorkTest`的Thread t1使用直接通过ArrayList.get()来访问容器，在访问过程中，Thread t2对容器调用了`ArrayList.remove(element)`操作。未使用迭代器，所以没有modCount校验，所以不会发生fast-fail。当实际上，这样的程序是线程不安全的。\n\n\n```java\n \n    @Test\n    public void failFastNoWorkTest() throws InterruptedException {\n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                int size = arrayList.size();\n                for (int i = 0; i < size; i++) {\n                    int value = arrayList.get(i);\n                    logger.info(\"thread 1 run : {}\", value);\n                    printPrivateField(AbstractList.class, \"modCount\", arrayList);\n\n                    try {\n                        Thread.sleep(10);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        });\n\n        Thread t2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i = 0; i < RUN_TIMES; i++) {\n\n                    if (i == 3) {\n                        arrayList.remove(3);\n                    }\n                    printPrivateField(AbstractList.class, \"modCount\", arrayList);\n                    addElementByList(arrayList, 100);\n                }\n            }\n        });\n\n        logger.info(\"before start thread ... \");\n        printPrivateField(AbstractList.class, \"modCount\", arrayList);\n        new ListTest().runThreads(t1, t2);\n\n    }\n```\n\n### capacity\n另一个值得研究的知识点是List的自动扩容，主要是ArrayList和Vector。\n> ArrayList和Vector都是使用数组(Array)来控制集合中的对象。当你向这两种类型中增加元素的时候，如果元素的数目超出了内部数组目前的长度它们都需要扩展内部数组的长度，Vector缺省情况下自动增长原来一倍的数组长度，ArrayList是原来的50%,所以最后你获得的这个集合所占的空间总是比你实际需要的要大。所以如果你要在集合中保存大量的数据那么使用Vector有一些优势，因为你可以通过设置集合的初始化大小来避免不必要的资源开销。\n\n\nVector\n```java\n\n   /**\n     * This implements the unsynchronized semantics of ensureCapacity.\n     * Synchronized methods in this class can internally call this\n     * method for ensuring capacity without incurring the cost of an\n     * extra synchronization.\n     *\n     * @see #ensureCapacity(int)\n     */\n    private void ensureCapacityHelper(int minCapacity) {\n        // overflow-conscious code\n        if (minCapacity - elementData.length > 0)\n            grow(minCapacity);\n    }\n    private void grow(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        int newCapacity = oldCapacity + ((capacityIncrement > 0) ?\n                                         capacityIncrement : oldCapacity);\n        if (newCapacity - minCapacity < 0)\n            newCapacity = minCapacity;\n        if (newCapacity - MAX_ARRAY_SIZE > 0)\n            newCapacity = hugeCapacity(minCapacity);\n        elementData = Arrays.copyOf(elementData, newCapacity);\n    }\n```\n   \nArrayList:\n```java\n\n    /**\n     * Increases the capacity to ensure that it can hold at least the\n     * number of elements specified by the minimum capacity argument.\n     *\n     * @param minCapacity the desired minimum capacity\n     */\n    private void grow(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        int newCapacity = oldCapacity + (oldCapacity >> 1);\n        if (newCapacity - minCapacity < 0)\n            newCapacity = minCapacity;\n        if (newCapacity - MAX_ARRAY_SIZE > 0)\n            newCapacity = hugeCapacity(minCapacity);\n        // minCapacity is usually close to size, so this is a win:\n        elementData = Arrays.copyOf(elementData, newCapacity);\n    }\n\n```\n\n所以，如果需要存储的数据量比较大，可以使用`Vector`，以减少扩容次数。另外，`Vector`可以设置`capacityIncrement`，来配置每次扩容的增长量，比较灵活。\n\n\n\n\n## 参考链接\n[ArrayList](https://docs.oracle.com/javase/8/docs/api/?java/util/Collection.html)\n[simpleJava](https://www.programcreek.com/simple-java/)\n[fail-fast](https://blog.csdn.net/chenssy/article/details/38151189)\n[SynchronizedList和Vector的区别, by Hollis](http://www.hollischuang.com/archives/498)","source":"_posts/ProgramStudy/JAVA/list.markdown","raw":"---\nlayout: \"post\"\ntitle: \"List study\"\ndate: \"2018-09-01 17:01\"\n\ntags:\n  - java\n  - collection\n\ncategories:\n  - Study\n  - Java\n\n\n---\n## List \n\n\n### Overview\n##### List族最重要的几个特点：\n* 有序\n* 允许重复元素\n* 支持add, remove, set, get\n* 可以随机访问元素\n\n\n##### Lis族集合类：\n\n\n![java-collection-hierarchy.jpeg](https://www.programcreek.com/wp-content/uploads/2009/02/java-collection-hierarchy.jpeg)\n\n* List族中，最主要的三种集合是`ArrayList`,`Vector`和`LinkedList`，后面将对这三种类进行分析和比较。\n* 可以简单对比一下List和Set\n\n|  |List  |Set  |\n| --- | --- | --- |\n|有序 | Y |N  |\n|重复元素 |Y  |N  |\n|随机访问 |Y  |N  |\n\n<!--more-->\n### ArrayList\n\nJava Platform SE 8的描述：\n\n> Resizable-array implementation of the List interface. Implements all optional list operations, and permits all elements, including null. In addition to implementing the List interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to Vector, except that it is unsynchronized.)\n\n* 可变长数组\n* 实现所有list的操作\n* 允许null\n* 和Vector相似，但是unsynchronized\n\n##### <span style=\"color:#ab4642\">ArrayList是一种能够自动扩充长度的数组。</span>\n\n\n#### 性能\n> The size, isEmpty, get, set, iterator, and listIterator operations run in constant time.\n> The add operation runs in amortized constant time, that is, adding n elements requires O(n) time. \n\n* **ArrayList**的性能可以类比<span style=\"color:#ab4642\">数组</span>的性能，在随机访问性能好。增、删操作性能差。\n\n\n#### 线程安全\n> <span style=\"color:#ab4642\">Note that this implementation is not synchronized...</span>\n\n`Collections.synchronizedList`: \n> Returns a synchronized (thread-safe) list backed by the specified list. In order to guarantee serial access, it is critical that all access to the backing list is accomplished through the returned list.*\n* 不能依赖fail-fast进行程序同步控制，应该对ArrayList进行包装（`Collections.synchronizedList`），合法的ArrayList同步操作demo：\n```java\n List list = Collections.synchronizedList(new ArrayList());\n      ...\n  synchronized (list) {\n      Iterator i = list.iterator(); // Must be in synchronized block\n      while (i.hasNext())\n          foo(i.next());\n  }\n```\n\n### Vector\n> The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index.\n\n> The iterators returned by this class's iterator and listIterator methods are fail-fast:...\n\n> ..., If a thread-safe implementation is not needed, it is recommended to use ArrayList in place of Vector.\n\n* Vector和ArrayList的性能相似，最重要的<span style=\"color:#ab4642\">区别:</span>是:\n    * `Vector`是<span style=\"color:#ab4642\">线程安全</span>的。\n    * 扩容机制不一样，具体可以看后面的**扩容代码解读：**\n\n### LinkedList\n> Doubly-linked list implementation of the List and Deque interfaces. Implements all optional list operations, and permits all elements (including null).\nAll of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.\n\n#### 性能：\n* 具有链表的特点，对增加和删除节点的操作效率高（特别是表头或者表尾的操作）。但是，随机访问效率低。\n* \n#### 同步：\n> The iterators returned by this class's iterator and listIterator methods are fail-fast\n>\n* LinkedList是线程不安全的，需要包装：\n```java\nList list = Collections.synchronizedList(new LinkedList(...));\n```\n\n### ArrayList vs Vector vs LinkedList\n\n|  | ArrayList | Vector  | LinkedList  |\n| --- | --- | --- | --- |\n| list接口 | Y |Y  | Y |\n| deque接口 |N |N  | Y |\n|elements 允许null|Y|Y|Y|\n| growable | Y |Y  | N |\n| get |O(1)  |O(1)  | O(n) |\n| set |O(1) |O(1) | O(n)|\n| remove| O(n)| O(n)| O(1)|\n| add| O(n)| O(n)| O(1)|\n| synchronized| N| Y|N|\n| synchronized| N| Y|N|\n|fail-fast|Y|Y|Y|\n\n\n## 几个值得深入思考的问题\n\n### fail-fast \n fail-fast 机制是java集合(Collection)中的一种错误机制。`ArrayList`,`Vector`, `LinkedList` 都满足fail-fast机制。官方文档中对fail-fast的解释如下：\n> fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove or add methods, the iterator will throw a `ConcurrentModificationException`. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.\n\n\n* fail-fast产生的原因就在于程序在对collection（如: ArrayList）进行迭代时，某个线程对该 collection **在结构上对其做了修改**，这时迭代器就会抛出 `ConcurrentModificationException` 异常信息，从而产生 **fail-fast**\n> 要了解fail-fast机制，我们首先要对ConcurrentModificationException 异常有所了解。当方法检测到对象的并发修改，但不允许这种修改时就抛出该异常。同时需要注意的是，该异常不会始终指出对象已经由不同线程并发修改，如果单线程违反了规则，同样也有可能会抛出改异常。\n\n#### ConcurrentModificationException\n\n* 容器使用迭代器来进行统一个容器访问操作。迭代器本质上只是容器的一个视图，迭代器里存放容器访问的游标，以及expectedModCount\n* `expectedModCount`是迭代器fail-fast机制的关键，\n* 迭代器在操作容器元素前，会`checkForComodification`，其实就是检查`expectedModCount==modCount`\n* 迭代器在对容器作结构性后，会刷新`expectedModCount = modCount`。\n* 换言之，如果在迭代器同步到最新的modCount后，有其他操作修改了容器的modCount，那么`checkForComodification`就会校验失败，于是就抛出`ConcurrentModificationException`\n\n``` java\n private class Itr implements Iterator<E> {\n        /**\n         * Index of element to be returned by subsequent call to next.\n         */\n        int cursor = 0;\n\n        /**\n         * Index of element returned by most recent call to next or\n         * previous.  Reset to -1 if this element is deleted by a call\n         * to remove.\n         */\n        int lastRet = -1;\n\n        /**\n         * The modCount value that the iterator believes that the backing\n         * List should have.  If this expectation is violated, the iterator\n         * has detected concurrent modification.\n         */\n        int expectedModCount = modCount;\n\n        public boolean hasNext() {\n            return cursor != size();\n        }\n\n        public E next() {\n            checkForComodification();\n            try {\n                int i = cursor;\n                E next = get(i);\n                lastRet = i;\n                cursor = i + 1;\n                return next;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException();\n            }\n        }\n\n        public void remove() {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                AbstractList.this.remove(lastRet);\n                if (lastRet < cursor)\n                    cursor--;\n                lastRet = -1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException e) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        final void checkForComodification() {\n            if (modCount != expectedModCount)\n                throw new ConcurrentModificationException();\n        }\n    }\n    \n        private class ListItr extends Itr implements ListIterator<E> {\n        ListItr(int index) {\n            cursor = index;\n        }\n\n        public boolean hasPrevious() {\n            return cursor != 0;\n        }\n\n        public E previous() {\n            checkForComodification();\n            try {\n                int i = cursor - 1;\n                E previous = get(i);\n                lastRet = cursor = i;\n                return previous;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException();\n            }\n        }\n\n        public int nextIndex() {\n            return cursor;\n        }\n\n        public int previousIndex() {\n            return cursor-1;\n        }\n\n        public void set(E e) {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                AbstractList.this.set(lastRet, e);\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException ex) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        public void add(E e) {\n            checkForComodification();\n\n            try {\n                int i = cursor;\n                AbstractList.this.add(i, e);\n                lastRet = -1;\n                cursor = i + 1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException ex) {\n                throw new ConcurrentModificationException();\n            }\n        }\n    }\n\n```\n\n\n值得一提的时候，当不适用迭代器访问和操作容器的时候，不会抛出`ConcurrentModificationException`，但是并不意味着程序正确。即使，是迭代器访问的程序，也有恰好未发生`ConcurrentModificationException`的情况。\n\n> Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.\n> 注意，迭代器的快速失败行为无法得到保证，因为一般来说，不可能对是否出现不同步并发修改做出任何硬性保证。快速失败迭代器会尽最大努力抛出 ConcurrentModificationException。因此，为提高这类迭代器的正确性而编写一个依赖于此异常的程序是错误的做法：迭代器的快速失败行为应该仅用于检测 bug。\n\n* 不能依赖fail-fast机制来保证程序的正确性。`ConcurrentModificationException`只适合用来查bug。\n\n##### fast-fail的测试代码\n\n* `failFastWorkTest`的Thread t1使用迭代器来访问容器，在访问过程中，Thread t2对容器调用了`ArrayList.remove(element)`操作，此后，当t1迭代到下一个元素时候，（`next()`会检查modCount, 即`checkForComodification`）这将引发fast-fail.\n* \n根据上面描述，我们可以写个demo来测试ArrayList的fast-fail：\n```java\n    @Test\n    public void failFastWorkTest() throws InterruptedException, ConcurrentModificationException     {\n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                Iterator<Integer> iterator = arrayList.iterator();\n                while(iterator.hasNext()) {\n                    int i = iterator.next();\n                    logger.info(\"thread t1 get item : {}\", i);\n                    try {\n                        Thread.sleep(10);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n\n                }\n            }\n        });\n\n        Thread t2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i = 0; i < 10; i++) {\n                    if (i == 3) {\n//                        arrayList.remove(i);\n                        arrayList.add(i);\n                    }\n\n                }\n            }\n        });\n\n        runThreads(t1, t2);\n    }\n    private void runThreads(Thread t1, Thread t2) throws InterruptedException {\n        logger.info(\"start thread 1 \");\n        t1.start();\n        logger.info(\"start thread 2 \");\n        t2.start();\n        t1.join();\n        logger.info(\"end thread1 \");\n        t2.join();\n        logger.info(\"end thread2 \");\n        logger.info(\"fail fast test done\");\n\n        logger.info(\"finnal array List\", arrayList);\n    }\n```\n\n* `failFastNoWorkTest`的Thread t1使用直接通过ArrayList.get()来访问容器，在访问过程中，Thread t2对容器调用了`ArrayList.remove(element)`操作。未使用迭代器，所以没有modCount校验，所以不会发生fast-fail。当实际上，这样的程序是线程不安全的。\n\n\n```java\n \n    @Test\n    public void failFastNoWorkTest() throws InterruptedException {\n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                int size = arrayList.size();\n                for (int i = 0; i < size; i++) {\n                    int value = arrayList.get(i);\n                    logger.info(\"thread 1 run : {}\", value);\n                    printPrivateField(AbstractList.class, \"modCount\", arrayList);\n\n                    try {\n                        Thread.sleep(10);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        });\n\n        Thread t2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i = 0; i < RUN_TIMES; i++) {\n\n                    if (i == 3) {\n                        arrayList.remove(3);\n                    }\n                    printPrivateField(AbstractList.class, \"modCount\", arrayList);\n                    addElementByList(arrayList, 100);\n                }\n            }\n        });\n\n        logger.info(\"before start thread ... \");\n        printPrivateField(AbstractList.class, \"modCount\", arrayList);\n        new ListTest().runThreads(t1, t2);\n\n    }\n```\n\n### capacity\n另一个值得研究的知识点是List的自动扩容，主要是ArrayList和Vector。\n> ArrayList和Vector都是使用数组(Array)来控制集合中的对象。当你向这两种类型中增加元素的时候，如果元素的数目超出了内部数组目前的长度它们都需要扩展内部数组的长度，Vector缺省情况下自动增长原来一倍的数组长度，ArrayList是原来的50%,所以最后你获得的这个集合所占的空间总是比你实际需要的要大。所以如果你要在集合中保存大量的数据那么使用Vector有一些优势，因为你可以通过设置集合的初始化大小来避免不必要的资源开销。\n\n\nVector\n```java\n\n   /**\n     * This implements the unsynchronized semantics of ensureCapacity.\n     * Synchronized methods in this class can internally call this\n     * method for ensuring capacity without incurring the cost of an\n     * extra synchronization.\n     *\n     * @see #ensureCapacity(int)\n     */\n    private void ensureCapacityHelper(int minCapacity) {\n        // overflow-conscious code\n        if (minCapacity - elementData.length > 0)\n            grow(minCapacity);\n    }\n    private void grow(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        int newCapacity = oldCapacity + ((capacityIncrement > 0) ?\n                                         capacityIncrement : oldCapacity);\n        if (newCapacity - minCapacity < 0)\n            newCapacity = minCapacity;\n        if (newCapacity - MAX_ARRAY_SIZE > 0)\n            newCapacity = hugeCapacity(minCapacity);\n        elementData = Arrays.copyOf(elementData, newCapacity);\n    }\n```\n   \nArrayList:\n```java\n\n    /**\n     * Increases the capacity to ensure that it can hold at least the\n     * number of elements specified by the minimum capacity argument.\n     *\n     * @param minCapacity the desired minimum capacity\n     */\n    private void grow(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        int newCapacity = oldCapacity + (oldCapacity >> 1);\n        if (newCapacity - minCapacity < 0)\n            newCapacity = minCapacity;\n        if (newCapacity - MAX_ARRAY_SIZE > 0)\n            newCapacity = hugeCapacity(minCapacity);\n        // minCapacity is usually close to size, so this is a win:\n        elementData = Arrays.copyOf(elementData, newCapacity);\n    }\n\n```\n\n所以，如果需要存储的数据量比较大，可以使用`Vector`，以减少扩容次数。另外，`Vector`可以设置`capacityIncrement`，来配置每次扩容的增长量，比较灵活。\n\n\n\n\n## 参考链接\n[ArrayList](https://docs.oracle.com/javase/8/docs/api/?java/util/Collection.html)\n[simpleJava](https://www.programcreek.com/simple-java/)\n[fail-fast](https://blog.csdn.net/chenssy/article/details/38151189)\n[SynchronizedList和Vector的区别, by Hollis](http://www.hollischuang.com/archives/498)","slug":"ProgramStudy/JAVA/list","published":1,"updated":"2018-09-22T04:13:53.000Z","comments":1,"photos":[],"link":"","_id":"cjmdapdp60021ap9kuzscki1g","content":"<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h3><h5 id=\"List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;\"><a href=\"#List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;\" class=\"headerlink\" title=\"List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;\"></a>List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;</h5><ul>\n<li>&#x6709;&#x5E8F;</li>\n<li>&#x5141;&#x8BB8;&#x91CD;&#x590D;&#x5143;&#x7D20;</li>\n<li>&#x652F;&#x6301;add, remove, set, get</li>\n<li>&#x53EF;&#x4EE5;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x5143;&#x7D20;</li>\n</ul>\n<h5 id=\"Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;\"><a href=\"#Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;\" class=\"headerlink\" title=\"Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;\"></a>Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;</h5><p><img src=\"https://www.programcreek.com/wp-content/uploads/2009/02/java-collection-hierarchy.jpeg\" alt=\"java-collection-hierarchy.jpeg\"></p>\n<ul>\n<li>List&#x65CF;&#x4E2D;&#xFF0C;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x4E09;&#x79CD;&#x96C6;&#x5408;&#x662F;<code>ArrayList</code>,<code>Vector</code>&#x548C;<code>LinkedList</code>&#xFF0C;&#x540E;&#x9762;&#x5C06;&#x5BF9;&#x8FD9;&#x4E09;&#x79CD;&#x7C7B;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x548C;&#x6BD4;&#x8F83;&#x3002;</li>\n<li>&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5BF9;&#x6BD4;&#x4E00;&#x4E0B;List&#x548C;Set</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>List</th>\n<th>Set</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&#x6709;&#x5E8F;</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>&#x91CD;&#x590D;&#x5143;&#x7D20;</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>&#x968F;&#x673A;&#x8BBF;&#x95EE;</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<h3 id=\"ArrayList\"><a href=\"#ArrayList\" class=\"headerlink\" title=\"ArrayList\"></a>ArrayList</h3><p>Java Platform SE 8&#x7684;&#x63CF;&#x8FF0;&#xFF1A;</p>\n<blockquote>\n<p>Resizable-array implementation of the List interface. Implements all optional list operations, and permits all elements, including null. In addition to implementing the List interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to Vector, except that it is unsynchronized.)</p>\n</blockquote>\n<ul>\n<li>&#x53EF;&#x53D8;&#x957F;&#x6570;&#x7EC4;</li>\n<li>&#x5B9E;&#x73B0;&#x6240;&#x6709;list&#x7684;&#x64CD;&#x4F5C;</li>\n<li>&#x5141;&#x8BB8;null</li>\n<li>&#x548C;Vector&#x76F8;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;unsynchronized</li>\n</ul>\n<h5 id=\"ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;\"><a href=\"#ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;\" class=\"headerlink\" title=\"ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;\"></a><span style=\"color:#ab4642\">ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;</span></h5><h4 id=\"&#x6027;&#x80FD;\"><a href=\"#&#x6027;&#x80FD;\" class=\"headerlink\" title=\"&#x6027;&#x80FD;\"></a>&#x6027;&#x80FD;</h4><blockquote>\n<p>The size, isEmpty, get, set, iterator, and listIterator operations run in constant time.<br>The add operation runs in amortized constant time, that is, adding n elements requires O(n) time. </p>\n</blockquote>\n<ul>\n<li><strong>ArrayList</strong>&#x7684;&#x6027;&#x80FD;&#x53EF;&#x4EE5;&#x7C7B;&#x6BD4;<span style=\"color:#ab4642\">&#x6570;&#x7EC4;</span>&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x5728;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6027;&#x80FD;&#x597D;&#x3002;&#x589E;&#x3001;&#x5220;&#x64CD;&#x4F5C;&#x6027;&#x80FD;&#x5DEE;&#x3002;</li>\n</ul>\n<h4 id=\"&#x7EBF;&#x7A0B;&#x5B89;&#x5168;\"><a href=\"#&#x7EBF;&#x7A0B;&#x5B89;&#x5168;\" class=\"headerlink\" title=\"&#x7EBF;&#x7A0B;&#x5B89;&#x5168;\"></a>&#x7EBF;&#x7A0B;&#x5B89;&#x5168;</h4><blockquote>\n<p><span style=\"color:#ab4642\">Note that this implementation is not synchronized&#x2026;</span></p>\n</blockquote>\n<p><code>Collections.synchronizedList</code>: </p>\n<blockquote>\n<p>Returns a synchronized (thread-safe) list backed by the specified list. In order to guarantee serial access, it is critical that all access to the backing list is accomplished through the returned list.*</p>\n<ul>\n<li>&#x4E0D;&#x80FD;&#x4F9D;&#x8D56;fail-fast&#x8FDB;&#x884C;&#x7A0B;&#x5E8F;&#x540C;&#x6B65;&#x63A7;&#x5236;&#xFF0C;&#x5E94;&#x8BE5;&#x5BF9;ArrayList&#x8FDB;&#x884C;&#x5305;&#x88C5;&#xFF08;<code>Collections.synchronizedList</code>&#xFF09;&#xFF0C;&#x5408;&#x6CD5;&#x7684;ArrayList&#x540C;&#x6B65;&#x64CD;&#x4F5C;demo&#xFF1A;<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List list = Collections.synchronizedList(<span class=\"keyword\">new</span> ArrayList());</span><br><span class=\"line\">     ...</span><br><span class=\"line\"> <span class=\"keyword\">synchronized</span> (list) {</span><br><span class=\"line\">     Iterator i = list.iterator(); <span class=\"comment\">// Must be in synchronized block</span></span><br><span class=\"line\">     <span class=\"keyword\">while</span> (i.hasNext())</span><br><span class=\"line\">         foo(i.next());</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h3><blockquote>\n<p>The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index.</p>\n</blockquote>\n<blockquote>\n<p>The iterators returned by this class&#x2019;s iterator and listIterator methods are fail-fast:&#x2026;</p>\n</blockquote>\n<blockquote>\n<p>&#x2026;, If a thread-safe implementation is not needed, it is recommended to use ArrayList in place of Vector.</p>\n</blockquote>\n<ul>\n<li>Vector&#x548C;ArrayList&#x7684;&#x6027;&#x80FD;&#x76F8;&#x4F3C;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x7684;<span style=\"color:#ab4642\">&#x533A;&#x522B;:</span>&#x662F;:<ul>\n<li><code>Vector</code>&#x662F;<span style=\"color:#ab4642\">&#x7EBF;&#x7A0B;&#x5B89;&#x5168;</span>&#x7684;&#x3002;</li>\n<li>&#x6269;&#x5BB9;&#x673A;&#x5236;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x770B;&#x540E;&#x9762;&#x7684;<strong>&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;&#xFF1A;</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h3><blockquote>\n<p>Doubly-linked list implementation of the List and Deque interfaces. Implements all optional list operations, and permits all elements (including null).<br>All of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.</p>\n</blockquote>\n<h4 id=\"&#x6027;&#x80FD;&#xFF1A;\"><a href=\"#&#x6027;&#x80FD;&#xFF1A;\" class=\"headerlink\" title=\"&#x6027;&#x80FD;&#xFF1A;\"></a>&#x6027;&#x80FD;&#xFF1A;</h4><ul>\n<li>&#x5177;&#x6709;&#x94FE;&#x8868;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x5BF9;&#x589E;&#x52A0;&#x548C;&#x5220;&#x9664;&#x8282;&#x70B9;&#x7684;&#x64CD;&#x4F5C;&#x6548;&#x7387;&#x9AD8;&#xFF08;&#x7279;&#x522B;&#x662F;&#x8868;&#x5934;&#x6216;&#x8005;&#x8868;&#x5C3E;&#x7684;&#x64CD;&#x4F5C;&#xFF09;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6548;&#x7387;&#x4F4E;&#x3002;</li>\n<li><h4 id=\"&#x540C;&#x6B65;&#xFF1A;\"><a href=\"#&#x540C;&#x6B65;&#xFF1A;\" class=\"headerlink\" title=\"&#x540C;&#x6B65;&#xFF1A;\"></a>&#x540C;&#x6B65;&#xFF1A;</h4><blockquote>\n<p>The iterators returned by this class&#x2019;s iterator and listIterator methods are fail-fast</p>\n</blockquote>\n</li>\n<li>LinkedList&#x662F;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x5305;&#x88C5;&#xFF1A;<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List list = Collections.synchronizedList(<span class=\"keyword\">new</span> LinkedList(...));</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ArrayList-vs-Vector-vs-LinkedList\"><a href=\"#ArrayList-vs-Vector-vs-LinkedList\" class=\"headerlink\" title=\"ArrayList vs Vector vs LinkedList\"></a>ArrayList vs Vector vs LinkedList</h3><table>\n<thead>\n<tr>\n<th></th>\n<th>ArrayList</th>\n<th>Vector</th>\n<th>LinkedList</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list&#x63A5;&#x53E3;</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>deque&#x63A5;&#x53E3;</td>\n<td>N</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>elements &#x5141;&#x8BB8;null</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>growable</td>\n<td>Y</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>get</td>\n<td>O(1)</td>\n<td>O(1)</td>\n<td>O(n)</td>\n</tr>\n<tr>\n<td>set</td>\n<td>O(1)</td>\n<td>O(1)</td>\n<td>O(n)</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>O(n)</td>\n<td>O(n)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>add</td>\n<td>O(n)</td>\n<td>O(n)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>synchronized</td>\n<td>N</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>synchronized</td>\n<td>N</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>fail-fast</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;\"><a href=\"#&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;\" class=\"headerlink\" title=\"&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;\"></a>&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;</h2><h3 id=\"fail-fast\"><a href=\"#fail-fast\" class=\"headerlink\" title=\"fail-fast\"></a>fail-fast</h3><p> fail-fast &#x673A;&#x5236;&#x662F;java&#x96C6;&#x5408;(Collection)&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x9519;&#x8BEF;&#x673A;&#x5236;&#x3002;<code>ArrayList</code>,<code>Vector</code>, <code>LinkedList</code> &#x90FD;&#x6EE1;&#x8DB3;fail-fast&#x673A;&#x5236;&#x3002;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x5BF9;fail-fast&#x7684;&#x89E3;&#x91CA;&#x5982;&#x4E0B;&#xFF1A;</p>\n<blockquote>\n<p>fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator&#x2019;s own remove or add methods, the iterator will throw a <code>ConcurrentModificationException</code>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</p>\n</blockquote>\n<ul>\n<li>fail-fast&#x4EA7;&#x751F;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x5728;&#x4E8E;&#x7A0B;&#x5E8F;&#x5728;&#x5BF9;collection&#xFF08;&#x5982;: ArrayList&#xFF09;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#x65F6;&#xFF0C;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x5BF9;&#x8BE5; collection <strong>&#x5728;&#x7ED3;&#x6784;&#x4E0A;&#x5BF9;&#x5176;&#x505A;&#x4E86;&#x4FEE;&#x6539;</strong>&#xFF0C;&#x8FD9;&#x65F6;&#x8FED;&#x4EE3;&#x5668;&#x5C31;&#x4F1A;&#x629B;&#x51FA; <code>ConcurrentModificationException</code> &#x5F02;&#x5E38;&#x4FE1;&#x606F;&#xFF0C;&#x4ECE;&#x800C;&#x4EA7;&#x751F; <strong>fail-fast</strong><blockquote>\n<p>&#x8981;&#x4E86;&#x89E3;fail-fast&#x673A;&#x5236;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x8981;&#x5BF9;ConcurrentModificationException &#x5F02;&#x5E38;&#x6709;&#x6240;&#x4E86;&#x89E3;&#x3002;&#x5F53;&#x65B9;&#x6CD5;&#x68C0;&#x6D4B;&#x5230;&#x5BF9;&#x8C61;&#x7684;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#xFF0C;&#x4F46;&#x4E0D;&#x5141;&#x8BB8;&#x8FD9;&#x79CD;&#x4FEE;&#x6539;&#x65F6;&#x5C31;&#x629B;&#x51FA;&#x8BE5;&#x5F02;&#x5E38;&#x3002;&#x540C;&#x65F6;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8BE5;&#x5F02;&#x5E38;&#x4E0D;&#x4F1A;&#x59CB;&#x7EC8;&#x6307;&#x51FA;&#x5BF9;&#x8C61;&#x5DF2;&#x7ECF;&#x7531;&#x4E0D;&#x540C;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#xFF0C;&#x5982;&#x679C;&#x5355;&#x7EBF;&#x7A0B;&#x8FDD;&#x53CD;&#x4E86;&#x89C4;&#x5219;&#xFF0C;&#x540C;&#x6837;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA;&#x6539;&#x5F02;&#x5E38;&#x3002;</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"ConcurrentModificationException\"><a href=\"#ConcurrentModificationException\" class=\"headerlink\" title=\"ConcurrentModificationException\"></a>ConcurrentModificationException</h4><ul>\n<li>&#x5BB9;&#x5668;&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x6765;&#x8FDB;&#x884C;&#x7EDF;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#x8BBF;&#x95EE;&#x64CD;&#x4F5C;&#x3002;&#x8FED;&#x4EE3;&#x5668;&#x672C;&#x8D28;&#x4E0A;&#x53EA;&#x662F;&#x5BB9;&#x5668;&#x7684;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#x91CC;&#x5B58;&#x653E;&#x5BB9;&#x5668;&#x8BBF;&#x95EE;&#x7684;&#x6E38;&#x6807;&#xFF0C;&#x4EE5;&#x53CA;expectedModCount</li>\n<li><code>expectedModCount</code>&#x662F;&#x8FED;&#x4EE3;&#x5668;fail-fast&#x673A;&#x5236;&#x7684;&#x5173;&#x952E;&#xFF0C;</li>\n<li>&#x8FED;&#x4EE3;&#x5668;&#x5728;&#x64CD;&#x4F5C;&#x5BB9;&#x5668;&#x5143;&#x7D20;&#x524D;&#xFF0C;&#x4F1A;<code>checkForComodification</code>&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x68C0;&#x67E5;<code>expectedModCount==modCount</code></li>\n<li>&#x8FED;&#x4EE3;&#x5668;&#x5728;&#x5BF9;&#x5BB9;&#x5668;&#x4F5C;&#x7ED3;&#x6784;&#x6027;&#x540E;&#xFF0C;&#x4F1A;&#x5237;&#x65B0;<code>expectedModCount = modCount</code>&#x3002;</li>\n<li>&#x6362;&#x8A00;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8FED;&#x4EE3;&#x5668;&#x540C;&#x6B65;&#x5230;&#x6700;&#x65B0;&#x7684;modCount&#x540E;&#xFF0C;&#x6709;&#x5176;&#x4ED6;&#x64CD;&#x4F5C;&#x4FEE;&#x6539;&#x4E86;&#x5BB9;&#x5668;&#x7684;modCount&#xFF0C;&#x90A3;&#x4E48;<code>checkForComodification</code>&#x5C31;&#x4F1A;&#x6821;&#x9A8C;&#x5931;&#x8D25;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x629B;&#x51FA;<code>ConcurrentModificationException</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Itr</span> <span class=\"keyword\">implements</span> <span class=\"title\">Iterator</span>&lt;<span class=\"title\">E</span>&gt; </span>{</span><br><span class=\"line\">       <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * Index of element to be returned by subsequent call to next.</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> cursor = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * Index of element returned by most recent call to next or</span></span><br><span class=\"line\"><span class=\"comment\">        * previous.  Reset to -1 if this element is deleted by a call</span></span><br><span class=\"line\"><span class=\"comment\">        * to remove.</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> lastRet = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * The modCount value that the iterator believes that the backing</span></span><br><span class=\"line\"><span class=\"comment\">        * List should have.  If this expectation is violated, the iterator</span></span><br><span class=\"line\"><span class=\"comment\">        * has detected concurrent modification.</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> expectedModCount = modCount;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor != size();</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> E <span class=\"title\">next</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               <span class=\"keyword\">int</span> i = cursor;</span><br><span class=\"line\">               E next = get(i);</span><br><span class=\"line\">               lastRet = i;</span><br><span class=\"line\">               cursor = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> next;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException e) {</span><br><span class=\"line\">               checkForComodification();</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NoSuchElementException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (lastRet &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException();</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               AbstractList.<span class=\"keyword\">this</span>.remove(lastRet);</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (lastRet &lt; cursor)</span><br><span class=\"line\">                   cursor--;</span><br><span class=\"line\">               lastRet = -<span class=\"number\">1</span>;</span><br><span class=\"line\">               expectedModCount = modCount;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException e) {</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">checkForComodification</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (modCount != expectedModCount)</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">       }</span><br><span class=\"line\">   }</span><br><span class=\"line\">   </span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListItr</span> <span class=\"keyword\">extends</span> <span class=\"title\">Itr</span> <span class=\"keyword\">implements</span> <span class=\"title\">ListIterator</span>&lt;<span class=\"title\">E</span>&gt; </span>{</span><br><span class=\"line\">       ListItr(<span class=\"keyword\">int</span> index) {</span><br><span class=\"line\">           cursor = index;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasPrevious</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor != <span class=\"number\">0</span>;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> E <span class=\"title\">previous</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               <span class=\"keyword\">int</span> i = cursor - <span class=\"number\">1</span>;</span><br><span class=\"line\">               E previous = get(i);</span><br><span class=\"line\">               lastRet = cursor = i;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> previous;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException e) {</span><br><span class=\"line\">               checkForComodification();</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NoSuchElementException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">nextIndex</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">previousIndex</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor-<span class=\"number\">1</span>;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(E e)</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (lastRet &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException();</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               AbstractList.<span class=\"keyword\">this</span>.set(lastRet, e);</span><br><span class=\"line\">               expectedModCount = modCount;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException ex) {</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(E e)</span> </span>{</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               <span class=\"keyword\">int</span> i = cursor;</span><br><span class=\"line\">               AbstractList.<span class=\"keyword\">this</span>.add(i, e);</span><br><span class=\"line\">               lastRet = -<span class=\"number\">1</span>;</span><br><span class=\"line\">               cursor = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">               expectedModCount = modCount;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException ex) {</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\">   }</span><br></pre></td></tr></table></figure>\n<p>&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F53;&#x4E0D;&#x9002;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x8BBF;&#x95EE;&#x548C;&#x64CD;&#x4F5C;&#x5BB9;&#x5668;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x4F1A;&#x629B;&#x51FA;<code>ConcurrentModificationException</code>&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x7A0B;&#x5E8F;&#x6B63;&#x786E;&#x3002;&#x5373;&#x4F7F;&#xFF0C;&#x662F;&#x8FED;&#x4EE3;&#x5668;&#x8BBF;&#x95EE;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x4E5F;&#x6709;&#x6070;&#x597D;&#x672A;&#x53D1;&#x751F;<code>ConcurrentModificationException</code>&#x7684;&#x60C5;&#x51B5;&#x3002;</p>\n<blockquote>\n<p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.<br>&#x6CE8;&#x610F;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x5FEB;&#x901F;&#x5931;&#x8D25;&#x884C;&#x4E3A;&#x65E0;&#x6CD5;&#x5F97;&#x5230;&#x4FDD;&#x8BC1;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x4E0D;&#x53EF;&#x80FD;&#x5BF9;&#x662F;&#x5426;&#x51FA;&#x73B0;&#x4E0D;&#x540C;&#x6B65;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#x505A;&#x51FA;&#x4EFB;&#x4F55;&#x786C;&#x6027;&#x4FDD;&#x8BC1;&#x3002;&#x5FEB;&#x901F;&#x5931;&#x8D25;&#x8FED;&#x4EE3;&#x5668;&#x4F1A;&#x5C3D;&#x6700;&#x5927;&#x52AA;&#x529B;&#x629B;&#x51FA; ConcurrentModificationException&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E3A;&#x63D0;&#x9AD8;&#x8FD9;&#x7C7B;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x6B63;&#x786E;&#x6027;&#x800C;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x4E8E;&#x6B64;&#x5F02;&#x5E38;&#x7684;&#x7A0B;&#x5E8F;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x505A;&#x6CD5;&#xFF1A;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x5FEB;&#x901F;&#x5931;&#x8D25;&#x884C;&#x4E3A;&#x5E94;&#x8BE5;&#x4EC5;&#x7528;&#x4E8E;&#x68C0;&#x6D4B; bug&#x3002;</p>\n</blockquote>\n<ul>\n<li>&#x4E0D;&#x80FD;&#x4F9D;&#x8D56;fail-fast&#x673A;&#x5236;&#x6765;&#x4FDD;&#x8BC1;&#x7A0B;&#x5E8F;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;<code>ConcurrentModificationException</code>&#x53EA;&#x9002;&#x5408;&#x7528;&#x6765;&#x67E5;bug&#x3002;</li>\n</ul>\n<h5 id=\"fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;\"><a href=\"#fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;\" class=\"headerlink\" title=\"fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;\"></a>fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;</h5><ul>\n<li><code>failFastWorkTest</code>&#x7684;Thread t1&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x6765;&#x8BBF;&#x95EE;&#x5BB9;&#x5668;&#xFF0C;&#x5728;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;Thread t2&#x5BF9;&#x5BB9;&#x5668;&#x8C03;&#x7528;&#x4E86;<code>ArrayList.remove(element)</code>&#x64CD;&#x4F5C;&#xFF0C;&#x6B64;&#x540E;&#xFF0C;&#x5F53;t1&#x8FED;&#x4EE3;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x65F6;&#x5019;&#xFF0C;&#xFF08;<code>next()</code>&#x4F1A;&#x68C0;&#x67E5;modCount, &#x5373;<code>checkForComodification</code>&#xFF09;&#x8FD9;&#x5C06;&#x5F15;&#x53D1;fast-fail.</li>\n<li><p>&#x6839;&#x636E;&#x4E0A;&#x9762;&#x63CF;&#x8FF0;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5199;&#x4E2A;demo&#x6765;&#x6D4B;&#x8BD5;ArrayList&#x7684;fast-fail&#xFF1A;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">failFastWorkTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException, ConcurrentModificationException     </span>{</span><br><span class=\"line\">        Thread t1 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">                Iterator&lt;Integer&gt; iterator = arrayList.iterator();</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(iterator.hasNext()) {</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> i = iterator.next();</span><br><span class=\"line\">                    logger.info(<span class=\"string\">&quot;thread t1 get item : {}&quot;</span>, i);</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                        Thread.sleep(<span class=\"number\">10</span>);</span><br><span class=\"line\">                    } <span class=\"keyword\">catch</span> (InterruptedException e) {</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    }</span><br><span class=\"line\"></span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        });</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread t2 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) {</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i == <span class=\"number\">3</span>) {</span><br><span class=\"line\"><span class=\"comment\">//                        arrayList.remove(i);</span></span><br><span class=\"line\">                        arrayList.add(i);</span><br><span class=\"line\">                    }</span><br><span class=\"line\"></span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        });</span><br><span class=\"line\"></span><br><span class=\"line\">        runThreads(t1, t2);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">runThreads</span><span class=\"params\">(Thread t1, Thread t2)</span> <span class=\"keyword\">throws</span> InterruptedException </span>{</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;start thread 1 &quot;</span>);</span><br><span class=\"line\">        t1.start();</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;start thread 2 &quot;</span>);</span><br><span class=\"line\">        t2.start();</span><br><span class=\"line\">        t1.join();</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;end thread1 &quot;</span>);</span><br><span class=\"line\">        t2.join();</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;end thread2 &quot;</span>);</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;fail fast test done&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;finnal array List&quot;</span>, arrayList);</span><br><span class=\"line\">    }</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>failFastNoWorkTest</code>&#x7684;Thread t1&#x4F7F;&#x7528;&#x76F4;&#x63A5;&#x901A;&#x8FC7;ArrayList.get()&#x6765;&#x8BBF;&#x95EE;&#x5BB9;&#x5668;&#xFF0C;&#x5728;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;Thread t2&#x5BF9;&#x5BB9;&#x5668;&#x8C03;&#x7528;&#x4E86;<code>ArrayList.remove(element)</code>&#x64CD;&#x4F5C;&#x3002;&#x672A;&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x6240;&#x4EE5;&#x6CA1;&#x6709;modCount&#x6821;&#x9A8C;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;fast-fail&#x3002;&#x5F53;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x7A0B;&#x5E8F;&#x662F;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">failFastNoWorkTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException </span>{</span><br><span class=\"line\">    Thread t1 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">            <span class=\"keyword\">int</span> size = arrayList.size();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) {</span><br><span class=\"line\">                <span class=\"keyword\">int</span> value = arrayList.get(i);</span><br><span class=\"line\">                logger.info(<span class=\"string\">&quot;thread 1 run : {}&quot;</span>, value);</span><br><span class=\"line\">                printPrivateField(AbstractList.class, <span class=\"string\">&quot;modCount&quot;</span>, arrayList);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">10</span>);</span><br><span class=\"line\">                } <span class=\"keyword\">catch</span> (InterruptedException e) {</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\"></span><br><span class=\"line\">    Thread t2 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; RUN_TIMES; i++) {</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i == <span class=\"number\">3</span>) {</span><br><span class=\"line\">                    arrayList.remove(<span class=\"number\">3</span>);</span><br><span class=\"line\">                }</span><br><span class=\"line\">                printPrivateField(AbstractList.class, <span class=\"string\">&quot;modCount&quot;</span>, arrayList);</span><br><span class=\"line\">                addElementByList(arrayList, <span class=\"number\">100</span>);</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\"></span><br><span class=\"line\">    logger.info(<span class=\"string\">&quot;before start thread ... &quot;</span>);</span><br><span class=\"line\">    printPrivateField(AbstractList.class, <span class=\"string\">&quot;modCount&quot;</span>, arrayList);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> ListTest().runThreads(t1, t2);</span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h3 id=\"capacity\"><a href=\"#capacity\" class=\"headerlink\" title=\"capacity\"></a>capacity</h3><p>&#x53E6;&#x4E00;&#x4E2A;&#x503C;&#x5F97;&#x7814;&#x7A76;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x662F;List&#x7684;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x4E3B;&#x8981;&#x662F;ArrayList&#x548C;Vector&#x3002;</p>\n<blockquote>\n<p>ArrayList&#x548C;Vector&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x6570;&#x7EC4;(Array)&#x6765;&#x63A7;&#x5236;&#x96C6;&#x5408;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5F53;&#x4F60;&#x5411;&#x8FD9;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x4E2D;&#x589E;&#x52A0;&#x5143;&#x7D20;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x5143;&#x7D20;&#x7684;&#x6570;&#x76EE;&#x8D85;&#x51FA;&#x4E86;&#x5185;&#x90E8;&#x6570;&#x7EC4;&#x76EE;&#x524D;&#x7684;&#x957F;&#x5EA6;&#x5B83;&#x4EEC;&#x90FD;&#x9700;&#x8981;&#x6269;&#x5C55;&#x5185;&#x90E8;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#xFF0C;Vector&#x7F3A;&#x7701;&#x60C5;&#x51B5;&#x4E0B;&#x81EA;&#x52A8;&#x589E;&#x957F;&#x539F;&#x6765;&#x4E00;&#x500D;&#x7684;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#xFF0C;ArrayList&#x662F;&#x539F;&#x6765;&#x7684;50%,&#x6240;&#x4EE5;&#x6700;&#x540E;&#x4F60;&#x83B7;&#x5F97;&#x7684;&#x8FD9;&#x4E2A;&#x96C6;&#x5408;&#x6240;&#x5360;&#x7684;&#x7A7A;&#x95F4;&#x603B;&#x662F;&#x6BD4;&#x4F60;&#x5B9E;&#x9645;&#x9700;&#x8981;&#x7684;&#x8981;&#x5927;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F60;&#x8981;&#x5728;&#x96C6;&#x5408;&#x4E2D;&#x4FDD;&#x5B58;&#x5927;&#x91CF;&#x7684;&#x6570;&#x636E;&#x90A3;&#x4E48;&#x4F7F;&#x7528;Vector&#x6709;&#x4E00;&#x4E9B;&#x4F18;&#x52BF;&#xFF0C;&#x56E0;&#x4E3A;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x96C6;&#x5408;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5927;&#x5C0F;&#x6765;&#x907F;&#x514D;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x8D44;&#x6E90;&#x5F00;&#x9500;&#x3002;</p>\n</blockquote>\n<p>Vector<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * This implements the unsynchronized semantics of ensureCapacity.</span></span><br><span class=\"line\"><span class=\"comment\">  * Synchronized methods in this class can internally call this</span></span><br><span class=\"line\"><span class=\"comment\">  * method for ensuring capacity without incurring the cost of an</span></span><br><span class=\"line\"><span class=\"comment\">  * extra synchronization.</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@see</span> #ensureCapacity(int)</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">ensureCapacityHelper</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>{</span><br><span class=\"line\">     <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (minCapacity - elementData.length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">         grow(minCapacity);</span><br><span class=\"line\"> }</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>{</span><br><span class=\"line\">     <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">     <span class=\"keyword\">int</span> oldCapacity = elementData.length;</span><br><span class=\"line\">     <span class=\"keyword\">int</span> newCapacity = oldCapacity + ((capacityIncrement &gt; <span class=\"number\">0</span>) ?</span><br><span class=\"line\">                                      capacityIncrement : oldCapacity);</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (newCapacity - minCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">         newCapacity = minCapacity;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">         newCapacity = hugeCapacity(minCapacity);</span><br><span class=\"line\">     elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure></p>\n<p>ArrayList:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Increases the capacity to ensure that it can hold at least the</span></span><br><span class=\"line\"><span class=\"comment\"> * number of elements specified by the minimum capacity argument.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> minCapacity the desired minimum capacity</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>{</span><br><span class=\"line\">    <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> oldCapacity = elementData.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - minCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        newCapacity = minCapacity;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        newCapacity = hugeCapacity(minCapacity);</span><br><span class=\"line\">    <span class=\"comment\">// minCapacity is usually close to size, so this is a win:</span></span><br><span class=\"line\">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></p>\n<p>&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>Vector</code>&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x6269;&#x5BB9;&#x6B21;&#x6570;&#x3002;&#x53E6;&#x5916;&#xFF0C;<code>Vector</code>&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;<code>capacityIncrement</code>&#xFF0C;&#x6765;&#x914D;&#x7F6E;&#x6BCF;&#x6B21;&#x6269;&#x5BB9;&#x7684;&#x589E;&#x957F;&#x91CF;&#xFF0C;&#x6BD4;&#x8F83;&#x7075;&#x6D3B;&#x3002;</p>\n<h2 id=\"&#x53C2;&#x8003;&#x94FE;&#x63A5;\"><a href=\"#&#x53C2;&#x8003;&#x94FE;&#x63A5;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x94FE;&#x63A5;\"></a>&#x53C2;&#x8003;&#x94FE;&#x63A5;</h2><p><a href=\"https://docs.oracle.com/javase/8/docs/api/?java/util/Collection.html\" target=\"_blank\" rel=\"noopener\">ArrayList</a><br><a href=\"https://www.programcreek.com/simple-java/\" target=\"_blank\" rel=\"noopener\">simpleJava</a><br><a href=\"https://blog.csdn.net/chenssy/article/details/38151189\" target=\"_blank\" rel=\"noopener\">fail-fast</a><br><a href=\"http://www.hollischuang.com/archives/498\" target=\"_blank\" rel=\"noopener\">SynchronizedList&#x548C;Vector&#x7684;&#x533A;&#x522B;, by Hollis</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h3><h5 id=\"List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;\"><a href=\"#List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;\" class=\"headerlink\" title=\"List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;\"></a>List&#x65CF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x51E0;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;</h5><ul>\n<li>&#x6709;&#x5E8F;</li>\n<li>&#x5141;&#x8BB8;&#x91CD;&#x590D;&#x5143;&#x7D20;</li>\n<li>&#x652F;&#x6301;add, remove, set, get</li>\n<li>&#x53EF;&#x4EE5;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x5143;&#x7D20;</li>\n</ul>\n<h5 id=\"Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;\"><a href=\"#Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;\" class=\"headerlink\" title=\"Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;\"></a>Lis&#x65CF;&#x96C6;&#x5408;&#x7C7B;&#xFF1A;</h5><p><img src=\"https://www.programcreek.com/wp-content/uploads/2009/02/java-collection-hierarchy.jpeg\" alt=\"java-collection-hierarchy.jpeg\"></p>\n<ul>\n<li>List&#x65CF;&#x4E2D;&#xFF0C;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x4E09;&#x79CD;&#x96C6;&#x5408;&#x662F;<code>ArrayList</code>,<code>Vector</code>&#x548C;<code>LinkedList</code>&#xFF0C;&#x540E;&#x9762;&#x5C06;&#x5BF9;&#x8FD9;&#x4E09;&#x79CD;&#x7C7B;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x548C;&#x6BD4;&#x8F83;&#x3002;</li>\n<li>&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5BF9;&#x6BD4;&#x4E00;&#x4E0B;List&#x548C;Set</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>List</th>\n<th>Set</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&#x6709;&#x5E8F;</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>&#x91CD;&#x590D;&#x5143;&#x7D20;</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>&#x968F;&#x673A;&#x8BBF;&#x95EE;</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n</tbody>\n</table>","more":"<h3 id=\"ArrayList\"><a href=\"#ArrayList\" class=\"headerlink\" title=\"ArrayList\"></a>ArrayList</h3><p>Java Platform SE 8&#x7684;&#x63CF;&#x8FF0;&#xFF1A;</p>\n<blockquote>\n<p>Resizable-array implementation of the List interface. Implements all optional list operations, and permits all elements, including null. In addition to implementing the List interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to Vector, except that it is unsynchronized.)</p>\n</blockquote>\n<ul>\n<li>&#x53EF;&#x53D8;&#x957F;&#x6570;&#x7EC4;</li>\n<li>&#x5B9E;&#x73B0;&#x6240;&#x6709;list&#x7684;&#x64CD;&#x4F5C;</li>\n<li>&#x5141;&#x8BB8;null</li>\n<li>&#x548C;Vector&#x76F8;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;unsynchronized</li>\n</ul>\n<h5 id=\"ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;\"><a href=\"#ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;\" class=\"headerlink\" title=\"ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;\"></a><span style=\"color:#ab4642\">ArrayList&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x6269;&#x5145;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4;&#x3002;</span></h5><h4 id=\"&#x6027;&#x80FD;\"><a href=\"#&#x6027;&#x80FD;\" class=\"headerlink\" title=\"&#x6027;&#x80FD;\"></a>&#x6027;&#x80FD;</h4><blockquote>\n<p>The size, isEmpty, get, set, iterator, and listIterator operations run in constant time.<br>The add operation runs in amortized constant time, that is, adding n elements requires O(n) time. </p>\n</blockquote>\n<ul>\n<li><strong>ArrayList</strong>&#x7684;&#x6027;&#x80FD;&#x53EF;&#x4EE5;&#x7C7B;&#x6BD4;<span style=\"color:#ab4642\">&#x6570;&#x7EC4;</span>&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x5728;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6027;&#x80FD;&#x597D;&#x3002;&#x589E;&#x3001;&#x5220;&#x64CD;&#x4F5C;&#x6027;&#x80FD;&#x5DEE;&#x3002;</li>\n</ul>\n<h4 id=\"&#x7EBF;&#x7A0B;&#x5B89;&#x5168;\"><a href=\"#&#x7EBF;&#x7A0B;&#x5B89;&#x5168;\" class=\"headerlink\" title=\"&#x7EBF;&#x7A0B;&#x5B89;&#x5168;\"></a>&#x7EBF;&#x7A0B;&#x5B89;&#x5168;</h4><blockquote>\n<p><span style=\"color:#ab4642\">Note that this implementation is not synchronized&#x2026;</span></p>\n</blockquote>\n<p><code>Collections.synchronizedList</code>: </p>\n<blockquote>\n<p>Returns a synchronized (thread-safe) list backed by the specified list. In order to guarantee serial access, it is critical that all access to the backing list is accomplished through the returned list.*</p>\n<ul>\n<li>&#x4E0D;&#x80FD;&#x4F9D;&#x8D56;fail-fast&#x8FDB;&#x884C;&#x7A0B;&#x5E8F;&#x540C;&#x6B65;&#x63A7;&#x5236;&#xFF0C;&#x5E94;&#x8BE5;&#x5BF9;ArrayList&#x8FDB;&#x884C;&#x5305;&#x88C5;&#xFF08;<code>Collections.synchronizedList</code>&#xFF09;&#xFF0C;&#x5408;&#x6CD5;&#x7684;ArrayList&#x540C;&#x6B65;&#x64CD;&#x4F5C;demo&#xFF1A;<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List list = Collections.synchronizedList(<span class=\"keyword\">new</span> ArrayList());</span><br><span class=\"line\">     ...</span><br><span class=\"line\"> <span class=\"keyword\">synchronized</span> (list) {</span><br><span class=\"line\">     Iterator i = list.iterator(); <span class=\"comment\">// Must be in synchronized block</span></span><br><span class=\"line\">     <span class=\"keyword\">while</span> (i.hasNext())</span><br><span class=\"line\">         foo(i.next());</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h3><blockquote>\n<p>The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index.</p>\n</blockquote>\n<blockquote>\n<p>The iterators returned by this class&#x2019;s iterator and listIterator methods are fail-fast:&#x2026;</p>\n</blockquote>\n<blockquote>\n<p>&#x2026;, If a thread-safe implementation is not needed, it is recommended to use ArrayList in place of Vector.</p>\n</blockquote>\n<ul>\n<li>Vector&#x548C;ArrayList&#x7684;&#x6027;&#x80FD;&#x76F8;&#x4F3C;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x7684;<span style=\"color:#ab4642\">&#x533A;&#x522B;:</span>&#x662F;:<ul>\n<li><code>Vector</code>&#x662F;<span style=\"color:#ab4642\">&#x7EBF;&#x7A0B;&#x5B89;&#x5168;</span>&#x7684;&#x3002;</li>\n<li>&#x6269;&#x5BB9;&#x673A;&#x5236;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x770B;&#x540E;&#x9762;&#x7684;<strong>&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;&#xFF1A;</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h3><blockquote>\n<p>Doubly-linked list implementation of the List and Deque interfaces. Implements all optional list operations, and permits all elements (including null).<br>All of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.</p>\n</blockquote>\n<h4 id=\"&#x6027;&#x80FD;&#xFF1A;\"><a href=\"#&#x6027;&#x80FD;&#xFF1A;\" class=\"headerlink\" title=\"&#x6027;&#x80FD;&#xFF1A;\"></a>&#x6027;&#x80FD;&#xFF1A;</h4><ul>\n<li>&#x5177;&#x6709;&#x94FE;&#x8868;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x5BF9;&#x589E;&#x52A0;&#x548C;&#x5220;&#x9664;&#x8282;&#x70B9;&#x7684;&#x64CD;&#x4F5C;&#x6548;&#x7387;&#x9AD8;&#xFF08;&#x7279;&#x522B;&#x662F;&#x8868;&#x5934;&#x6216;&#x8005;&#x8868;&#x5C3E;&#x7684;&#x64CD;&#x4F5C;&#xFF09;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x6548;&#x7387;&#x4F4E;&#x3002;</li>\n<li><h4 id=\"&#x540C;&#x6B65;&#xFF1A;\"><a href=\"#&#x540C;&#x6B65;&#xFF1A;\" class=\"headerlink\" title=\"&#x540C;&#x6B65;&#xFF1A;\"></a>&#x540C;&#x6B65;&#xFF1A;</h4><blockquote>\n<p>The iterators returned by this class&#x2019;s iterator and listIterator methods are fail-fast</p>\n</blockquote>\n</li>\n<li>LinkedList&#x662F;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x5305;&#x88C5;&#xFF1A;<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List list = Collections.synchronizedList(<span class=\"keyword\">new</span> LinkedList(...));</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ArrayList-vs-Vector-vs-LinkedList\"><a href=\"#ArrayList-vs-Vector-vs-LinkedList\" class=\"headerlink\" title=\"ArrayList vs Vector vs LinkedList\"></a>ArrayList vs Vector vs LinkedList</h3><table>\n<thead>\n<tr>\n<th></th>\n<th>ArrayList</th>\n<th>Vector</th>\n<th>LinkedList</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list&#x63A5;&#x53E3;</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>deque&#x63A5;&#x53E3;</td>\n<td>N</td>\n<td>N</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>elements &#x5141;&#x8BB8;null</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>growable</td>\n<td>Y</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>get</td>\n<td>O(1)</td>\n<td>O(1)</td>\n<td>O(n)</td>\n</tr>\n<tr>\n<td>set</td>\n<td>O(1)</td>\n<td>O(1)</td>\n<td>O(n)</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>O(n)</td>\n<td>O(n)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>add</td>\n<td>O(n)</td>\n<td>O(n)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>synchronized</td>\n<td>N</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>synchronized</td>\n<td>N</td>\n<td>Y</td>\n<td>N</td>\n</tr>\n<tr>\n<td>fail-fast</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;\"><a href=\"#&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;\" class=\"headerlink\" title=\"&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;\"></a>&#x51E0;&#x4E2A;&#x503C;&#x5F97;&#x6DF1;&#x5165;&#x601D;&#x8003;&#x7684;&#x95EE;&#x9898;</h2><h3 id=\"fail-fast\"><a href=\"#fail-fast\" class=\"headerlink\" title=\"fail-fast\"></a>fail-fast</h3><p> fail-fast &#x673A;&#x5236;&#x662F;java&#x96C6;&#x5408;(Collection)&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x9519;&#x8BEF;&#x673A;&#x5236;&#x3002;<code>ArrayList</code>,<code>Vector</code>, <code>LinkedList</code> &#x90FD;&#x6EE1;&#x8DB3;fail-fast&#x673A;&#x5236;&#x3002;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x5BF9;fail-fast&#x7684;&#x89E3;&#x91CA;&#x5982;&#x4E0B;&#xFF1A;</p>\n<blockquote>\n<p>fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator&#x2019;s own remove or add methods, the iterator will throw a <code>ConcurrentModificationException</code>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</p>\n</blockquote>\n<ul>\n<li>fail-fast&#x4EA7;&#x751F;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x5728;&#x4E8E;&#x7A0B;&#x5E8F;&#x5728;&#x5BF9;collection&#xFF08;&#x5982;: ArrayList&#xFF09;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#x65F6;&#xFF0C;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x5BF9;&#x8BE5; collection <strong>&#x5728;&#x7ED3;&#x6784;&#x4E0A;&#x5BF9;&#x5176;&#x505A;&#x4E86;&#x4FEE;&#x6539;</strong>&#xFF0C;&#x8FD9;&#x65F6;&#x8FED;&#x4EE3;&#x5668;&#x5C31;&#x4F1A;&#x629B;&#x51FA; <code>ConcurrentModificationException</code> &#x5F02;&#x5E38;&#x4FE1;&#x606F;&#xFF0C;&#x4ECE;&#x800C;&#x4EA7;&#x751F; <strong>fail-fast</strong><blockquote>\n<p>&#x8981;&#x4E86;&#x89E3;fail-fast&#x673A;&#x5236;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x8981;&#x5BF9;ConcurrentModificationException &#x5F02;&#x5E38;&#x6709;&#x6240;&#x4E86;&#x89E3;&#x3002;&#x5F53;&#x65B9;&#x6CD5;&#x68C0;&#x6D4B;&#x5230;&#x5BF9;&#x8C61;&#x7684;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#xFF0C;&#x4F46;&#x4E0D;&#x5141;&#x8BB8;&#x8FD9;&#x79CD;&#x4FEE;&#x6539;&#x65F6;&#x5C31;&#x629B;&#x51FA;&#x8BE5;&#x5F02;&#x5E38;&#x3002;&#x540C;&#x65F6;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8BE5;&#x5F02;&#x5E38;&#x4E0D;&#x4F1A;&#x59CB;&#x7EC8;&#x6307;&#x51FA;&#x5BF9;&#x8C61;&#x5DF2;&#x7ECF;&#x7531;&#x4E0D;&#x540C;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#xFF0C;&#x5982;&#x679C;&#x5355;&#x7EBF;&#x7A0B;&#x8FDD;&#x53CD;&#x4E86;&#x89C4;&#x5219;&#xFF0C;&#x540C;&#x6837;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA;&#x6539;&#x5F02;&#x5E38;&#x3002;</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"ConcurrentModificationException\"><a href=\"#ConcurrentModificationException\" class=\"headerlink\" title=\"ConcurrentModificationException\"></a>ConcurrentModificationException</h4><ul>\n<li>&#x5BB9;&#x5668;&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x6765;&#x8FDB;&#x884C;&#x7EDF;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#x8BBF;&#x95EE;&#x64CD;&#x4F5C;&#x3002;&#x8FED;&#x4EE3;&#x5668;&#x672C;&#x8D28;&#x4E0A;&#x53EA;&#x662F;&#x5BB9;&#x5668;&#x7684;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#x91CC;&#x5B58;&#x653E;&#x5BB9;&#x5668;&#x8BBF;&#x95EE;&#x7684;&#x6E38;&#x6807;&#xFF0C;&#x4EE5;&#x53CA;expectedModCount</li>\n<li><code>expectedModCount</code>&#x662F;&#x8FED;&#x4EE3;&#x5668;fail-fast&#x673A;&#x5236;&#x7684;&#x5173;&#x952E;&#xFF0C;</li>\n<li>&#x8FED;&#x4EE3;&#x5668;&#x5728;&#x64CD;&#x4F5C;&#x5BB9;&#x5668;&#x5143;&#x7D20;&#x524D;&#xFF0C;&#x4F1A;<code>checkForComodification</code>&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x68C0;&#x67E5;<code>expectedModCount==modCount</code></li>\n<li>&#x8FED;&#x4EE3;&#x5668;&#x5728;&#x5BF9;&#x5BB9;&#x5668;&#x4F5C;&#x7ED3;&#x6784;&#x6027;&#x540E;&#xFF0C;&#x4F1A;&#x5237;&#x65B0;<code>expectedModCount = modCount</code>&#x3002;</li>\n<li>&#x6362;&#x8A00;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8FED;&#x4EE3;&#x5668;&#x540C;&#x6B65;&#x5230;&#x6700;&#x65B0;&#x7684;modCount&#x540E;&#xFF0C;&#x6709;&#x5176;&#x4ED6;&#x64CD;&#x4F5C;&#x4FEE;&#x6539;&#x4E86;&#x5BB9;&#x5668;&#x7684;modCount&#xFF0C;&#x90A3;&#x4E48;<code>checkForComodification</code>&#x5C31;&#x4F1A;&#x6821;&#x9A8C;&#x5931;&#x8D25;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x629B;&#x51FA;<code>ConcurrentModificationException</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Itr</span> <span class=\"keyword\">implements</span> <span class=\"title\">Iterator</span>&lt;<span class=\"title\">E</span>&gt; </span>{</span><br><span class=\"line\">       <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * Index of element to be returned by subsequent call to next.</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> cursor = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * Index of element returned by most recent call to next or</span></span><br><span class=\"line\"><span class=\"comment\">        * previous.  Reset to -1 if this element is deleted by a call</span></span><br><span class=\"line\"><span class=\"comment\">        * to remove.</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> lastRet = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * The modCount value that the iterator believes that the backing</span></span><br><span class=\"line\"><span class=\"comment\">        * List should have.  If this expectation is violated, the iterator</span></span><br><span class=\"line\"><span class=\"comment\">        * has detected concurrent modification.</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> expectedModCount = modCount;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor != size();</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> E <span class=\"title\">next</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               <span class=\"keyword\">int</span> i = cursor;</span><br><span class=\"line\">               E next = get(i);</span><br><span class=\"line\">               lastRet = i;</span><br><span class=\"line\">               cursor = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> next;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException e) {</span><br><span class=\"line\">               checkForComodification();</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NoSuchElementException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (lastRet &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException();</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               AbstractList.<span class=\"keyword\">this</span>.remove(lastRet);</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (lastRet &lt; cursor)</span><br><span class=\"line\">                   cursor--;</span><br><span class=\"line\">               lastRet = -<span class=\"number\">1</span>;</span><br><span class=\"line\">               expectedModCount = modCount;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException e) {</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">checkForComodification</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (modCount != expectedModCount)</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">       }</span><br><span class=\"line\">   }</span><br><span class=\"line\">   </span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListItr</span> <span class=\"keyword\">extends</span> <span class=\"title\">Itr</span> <span class=\"keyword\">implements</span> <span class=\"title\">ListIterator</span>&lt;<span class=\"title\">E</span>&gt; </span>{</span><br><span class=\"line\">       ListItr(<span class=\"keyword\">int</span> index) {</span><br><span class=\"line\">           cursor = index;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasPrevious</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor != <span class=\"number\">0</span>;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> E <span class=\"title\">previous</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               <span class=\"keyword\">int</span> i = cursor - <span class=\"number\">1</span>;</span><br><span class=\"line\">               E previous = get(i);</span><br><span class=\"line\">               lastRet = cursor = i;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> previous;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException e) {</span><br><span class=\"line\">               checkForComodification();</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NoSuchElementException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">nextIndex</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">previousIndex</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">return</span> cursor-<span class=\"number\">1</span>;</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(E e)</span> </span>{</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (lastRet &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException();</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               AbstractList.<span class=\"keyword\">this</span>.set(lastRet, e);</span><br><span class=\"line\">               expectedModCount = modCount;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException ex) {</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(E e)</span> </span>{</span><br><span class=\"line\">           checkForComodification();</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">try</span> {</span><br><span class=\"line\">               <span class=\"keyword\">int</span> i = cursor;</span><br><span class=\"line\">               AbstractList.<span class=\"keyword\">this</span>.add(i, e);</span><br><span class=\"line\">               lastRet = -<span class=\"number\">1</span>;</span><br><span class=\"line\">               cursor = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">               expectedModCount = modCount;</span><br><span class=\"line\">           } <span class=\"keyword\">catch</span> (IndexOutOfBoundsException ex) {</span><br><span class=\"line\">               <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ConcurrentModificationException();</span><br><span class=\"line\">           }</span><br><span class=\"line\">       }</span><br><span class=\"line\">   }</span><br></pre></td></tr></table></figure>\n<p>&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F53;&#x4E0D;&#x9002;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x8BBF;&#x95EE;&#x548C;&#x64CD;&#x4F5C;&#x5BB9;&#x5668;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x4F1A;&#x629B;&#x51FA;<code>ConcurrentModificationException</code>&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x7A0B;&#x5E8F;&#x6B63;&#x786E;&#x3002;&#x5373;&#x4F7F;&#xFF0C;&#x662F;&#x8FED;&#x4EE3;&#x5668;&#x8BBF;&#x95EE;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x4E5F;&#x6709;&#x6070;&#x597D;&#x672A;&#x53D1;&#x751F;<code>ConcurrentModificationException</code>&#x7684;&#x60C5;&#x51B5;&#x3002;</p>\n<blockquote>\n<p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.<br>&#x6CE8;&#x610F;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x5FEB;&#x901F;&#x5931;&#x8D25;&#x884C;&#x4E3A;&#x65E0;&#x6CD5;&#x5F97;&#x5230;&#x4FDD;&#x8BC1;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x4E0D;&#x53EF;&#x80FD;&#x5BF9;&#x662F;&#x5426;&#x51FA;&#x73B0;&#x4E0D;&#x540C;&#x6B65;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#x505A;&#x51FA;&#x4EFB;&#x4F55;&#x786C;&#x6027;&#x4FDD;&#x8BC1;&#x3002;&#x5FEB;&#x901F;&#x5931;&#x8D25;&#x8FED;&#x4EE3;&#x5668;&#x4F1A;&#x5C3D;&#x6700;&#x5927;&#x52AA;&#x529B;&#x629B;&#x51FA; ConcurrentModificationException&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E3A;&#x63D0;&#x9AD8;&#x8FD9;&#x7C7B;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x6B63;&#x786E;&#x6027;&#x800C;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x4E8E;&#x6B64;&#x5F02;&#x5E38;&#x7684;&#x7A0B;&#x5E8F;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x505A;&#x6CD5;&#xFF1A;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x5FEB;&#x901F;&#x5931;&#x8D25;&#x884C;&#x4E3A;&#x5E94;&#x8BE5;&#x4EC5;&#x7528;&#x4E8E;&#x68C0;&#x6D4B; bug&#x3002;</p>\n</blockquote>\n<ul>\n<li>&#x4E0D;&#x80FD;&#x4F9D;&#x8D56;fail-fast&#x673A;&#x5236;&#x6765;&#x4FDD;&#x8BC1;&#x7A0B;&#x5E8F;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;<code>ConcurrentModificationException</code>&#x53EA;&#x9002;&#x5408;&#x7528;&#x6765;&#x67E5;bug&#x3002;</li>\n</ul>\n<h5 id=\"fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;\"><a href=\"#fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;\" class=\"headerlink\" title=\"fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;\"></a>fast-fail&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;</h5><ul>\n<li><code>failFastWorkTest</code>&#x7684;Thread t1&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x6765;&#x8BBF;&#x95EE;&#x5BB9;&#x5668;&#xFF0C;&#x5728;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;Thread t2&#x5BF9;&#x5BB9;&#x5668;&#x8C03;&#x7528;&#x4E86;<code>ArrayList.remove(element)</code>&#x64CD;&#x4F5C;&#xFF0C;&#x6B64;&#x540E;&#xFF0C;&#x5F53;t1&#x8FED;&#x4EE3;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x65F6;&#x5019;&#xFF0C;&#xFF08;<code>next()</code>&#x4F1A;&#x68C0;&#x67E5;modCount, &#x5373;<code>checkForComodification</code>&#xFF09;&#x8FD9;&#x5C06;&#x5F15;&#x53D1;fast-fail.</li>\n<li><p>&#x6839;&#x636E;&#x4E0A;&#x9762;&#x63CF;&#x8FF0;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5199;&#x4E2A;demo&#x6765;&#x6D4B;&#x8BD5;ArrayList&#x7684;fast-fail&#xFF1A;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">failFastWorkTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException, ConcurrentModificationException     </span>{</span><br><span class=\"line\">        Thread t1 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">                Iterator&lt;Integer&gt; iterator = arrayList.iterator();</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(iterator.hasNext()) {</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> i = iterator.next();</span><br><span class=\"line\">                    logger.info(<span class=\"string\">&quot;thread t1 get item : {}&quot;</span>, i);</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                        Thread.sleep(<span class=\"number\">10</span>);</span><br><span class=\"line\">                    } <span class=\"keyword\">catch</span> (InterruptedException e) {</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    }</span><br><span class=\"line\"></span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        });</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread t2 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) {</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i == <span class=\"number\">3</span>) {</span><br><span class=\"line\"><span class=\"comment\">//                        arrayList.remove(i);</span></span><br><span class=\"line\">                        arrayList.add(i);</span><br><span class=\"line\">                    }</span><br><span class=\"line\"></span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        });</span><br><span class=\"line\"></span><br><span class=\"line\">        runThreads(t1, t2);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">runThreads</span><span class=\"params\">(Thread t1, Thread t2)</span> <span class=\"keyword\">throws</span> InterruptedException </span>{</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;start thread 1 &quot;</span>);</span><br><span class=\"line\">        t1.start();</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;start thread 2 &quot;</span>);</span><br><span class=\"line\">        t2.start();</span><br><span class=\"line\">        t1.join();</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;end thread1 &quot;</span>);</span><br><span class=\"line\">        t2.join();</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;end thread2 &quot;</span>);</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;fail fast test done&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;finnal array List&quot;</span>, arrayList);</span><br><span class=\"line\">    }</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>failFastNoWorkTest</code>&#x7684;Thread t1&#x4F7F;&#x7528;&#x76F4;&#x63A5;&#x901A;&#x8FC7;ArrayList.get()&#x6765;&#x8BBF;&#x95EE;&#x5BB9;&#x5668;&#xFF0C;&#x5728;&#x8BBF;&#x95EE;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;Thread t2&#x5BF9;&#x5BB9;&#x5668;&#x8C03;&#x7528;&#x4E86;<code>ArrayList.remove(element)</code>&#x64CD;&#x4F5C;&#x3002;&#x672A;&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x6240;&#x4EE5;&#x6CA1;&#x6709;modCount&#x6821;&#x9A8C;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;fast-fail&#x3002;&#x5F53;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x7A0B;&#x5E8F;&#x662F;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">failFastNoWorkTest</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException </span>{</span><br><span class=\"line\">    Thread t1 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">            <span class=\"keyword\">int</span> size = arrayList.size();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) {</span><br><span class=\"line\">                <span class=\"keyword\">int</span> value = arrayList.get(i);</span><br><span class=\"line\">                logger.info(<span class=\"string\">&quot;thread 1 run : {}&quot;</span>, value);</span><br><span class=\"line\">                printPrivateField(AbstractList.class, <span class=\"string\">&quot;modCount&quot;</span>, arrayList);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">10</span>);</span><br><span class=\"line\">                } <span class=\"keyword\">catch</span> (InterruptedException e) {</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\"></span><br><span class=\"line\">    Thread t2 = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() {</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>{</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; RUN_TIMES; i++) {</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i == <span class=\"number\">3</span>) {</span><br><span class=\"line\">                    arrayList.remove(<span class=\"number\">3</span>);</span><br><span class=\"line\">                }</span><br><span class=\"line\">                printPrivateField(AbstractList.class, <span class=\"string\">&quot;modCount&quot;</span>, arrayList);</span><br><span class=\"line\">                addElementByList(arrayList, <span class=\"number\">100</span>);</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\"></span><br><span class=\"line\">    logger.info(<span class=\"string\">&quot;before start thread ... &quot;</span>);</span><br><span class=\"line\">    printPrivateField(AbstractList.class, <span class=\"string\">&quot;modCount&quot;</span>, arrayList);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> ListTest().runThreads(t1, t2);</span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h3 id=\"capacity\"><a href=\"#capacity\" class=\"headerlink\" title=\"capacity\"></a>capacity</h3><p>&#x53E6;&#x4E00;&#x4E2A;&#x503C;&#x5F97;&#x7814;&#x7A76;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x662F;List&#x7684;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x4E3B;&#x8981;&#x662F;ArrayList&#x548C;Vector&#x3002;</p>\n<blockquote>\n<p>ArrayList&#x548C;Vector&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x6570;&#x7EC4;(Array)&#x6765;&#x63A7;&#x5236;&#x96C6;&#x5408;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5F53;&#x4F60;&#x5411;&#x8FD9;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x4E2D;&#x589E;&#x52A0;&#x5143;&#x7D20;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x5143;&#x7D20;&#x7684;&#x6570;&#x76EE;&#x8D85;&#x51FA;&#x4E86;&#x5185;&#x90E8;&#x6570;&#x7EC4;&#x76EE;&#x524D;&#x7684;&#x957F;&#x5EA6;&#x5B83;&#x4EEC;&#x90FD;&#x9700;&#x8981;&#x6269;&#x5C55;&#x5185;&#x90E8;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#xFF0C;Vector&#x7F3A;&#x7701;&#x60C5;&#x51B5;&#x4E0B;&#x81EA;&#x52A8;&#x589E;&#x957F;&#x539F;&#x6765;&#x4E00;&#x500D;&#x7684;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#xFF0C;ArrayList&#x662F;&#x539F;&#x6765;&#x7684;50%,&#x6240;&#x4EE5;&#x6700;&#x540E;&#x4F60;&#x83B7;&#x5F97;&#x7684;&#x8FD9;&#x4E2A;&#x96C6;&#x5408;&#x6240;&#x5360;&#x7684;&#x7A7A;&#x95F4;&#x603B;&#x662F;&#x6BD4;&#x4F60;&#x5B9E;&#x9645;&#x9700;&#x8981;&#x7684;&#x8981;&#x5927;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F60;&#x8981;&#x5728;&#x96C6;&#x5408;&#x4E2D;&#x4FDD;&#x5B58;&#x5927;&#x91CF;&#x7684;&#x6570;&#x636E;&#x90A3;&#x4E48;&#x4F7F;&#x7528;Vector&#x6709;&#x4E00;&#x4E9B;&#x4F18;&#x52BF;&#xFF0C;&#x56E0;&#x4E3A;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x96C6;&#x5408;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5927;&#x5C0F;&#x6765;&#x907F;&#x514D;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x8D44;&#x6E90;&#x5F00;&#x9500;&#x3002;</p>\n</blockquote>\n<p>Vector<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * This implements the unsynchronized semantics of ensureCapacity.</span></span><br><span class=\"line\"><span class=\"comment\">  * Synchronized methods in this class can internally call this</span></span><br><span class=\"line\"><span class=\"comment\">  * method for ensuring capacity without incurring the cost of an</span></span><br><span class=\"line\"><span class=\"comment\">  * extra synchronization.</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@see</span> #ensureCapacity(int)</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">ensureCapacityHelper</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>{</span><br><span class=\"line\">     <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (minCapacity - elementData.length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">         grow(minCapacity);</span><br><span class=\"line\"> }</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>{</span><br><span class=\"line\">     <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">     <span class=\"keyword\">int</span> oldCapacity = elementData.length;</span><br><span class=\"line\">     <span class=\"keyword\">int</span> newCapacity = oldCapacity + ((capacityIncrement &gt; <span class=\"number\">0</span>) ?</span><br><span class=\"line\">                                      capacityIncrement : oldCapacity);</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (newCapacity - minCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">         newCapacity = minCapacity;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">         newCapacity = hugeCapacity(minCapacity);</span><br><span class=\"line\">     elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure></p>\n<p>ArrayList:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Increases the capacity to ensure that it can hold at least the</span></span><br><span class=\"line\"><span class=\"comment\"> * number of elements specified by the minimum capacity argument.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> minCapacity the desired minimum capacity</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">grow</span><span class=\"params\">(<span class=\"keyword\">int</span> minCapacity)</span> </span>{</span><br><span class=\"line\">    <span class=\"comment\">// overflow-conscious code</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> oldCapacity = elementData.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - minCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        newCapacity = minCapacity;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        newCapacity = hugeCapacity(minCapacity);</span><br><span class=\"line\">    <span class=\"comment\">// minCapacity is usually close to size, so this is a win:</span></span><br><span class=\"line\">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></p>\n<p>&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>Vector</code>&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x6269;&#x5BB9;&#x6B21;&#x6570;&#x3002;&#x53E6;&#x5916;&#xFF0C;<code>Vector</code>&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;<code>capacityIncrement</code>&#xFF0C;&#x6765;&#x914D;&#x7F6E;&#x6BCF;&#x6B21;&#x6269;&#x5BB9;&#x7684;&#x589E;&#x957F;&#x91CF;&#xFF0C;&#x6BD4;&#x8F83;&#x7075;&#x6D3B;&#x3002;</p>\n<h2 id=\"&#x53C2;&#x8003;&#x94FE;&#x63A5;\"><a href=\"#&#x53C2;&#x8003;&#x94FE;&#x63A5;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x94FE;&#x63A5;\"></a>&#x53C2;&#x8003;&#x94FE;&#x63A5;</h2><p><a href=\"https://docs.oracle.com/javase/8/docs/api/?java/util/Collection.html\" target=\"_blank\" rel=\"noopener\">ArrayList</a><br><a href=\"https://www.programcreek.com/simple-java/\" target=\"_blank\" rel=\"noopener\">simpleJava</a><br><a href=\"https://blog.csdn.net/chenssy/article/details/38151189\" target=\"_blank\" rel=\"noopener\">fail-fast</a><br><a href=\"http://www.hollischuang.com/archives/498\" target=\"_blank\" rel=\"noopener\">SynchronizedList&#x548C;Vector&#x7684;&#x533A;&#x522B;, by Hollis</a></p>"},{"title":"serialization","date":"2018-09-18T10:45:44.000Z","_content":"\n### 深入理解序列化\n#### 背景\n\n> 序列化是一种对象持久化的手段，普遍应用于网络传输对象，RMI等场景\n\n本文以Hollis博客中[深入分析Java的序列化与反序列化](http://www.hollischuang.com/archives/1140)一文为蓝本，学习序列化需要关注的几个重要问题\n\n> 怎么实现Java的序列化\n> 为什么实现了`java.io.Serializable`接口，才能序列化\n> `transient`的作用是什么\n> 怎么自定义序列化策略\n> 自定义的序列化策略是如何被调用的\n> ArrayList对序列化的实现有什么好处？\n\n#### 如何实现序列化\n\n> 在Java中，只要一个类实现了java.io.Serializable接口，那么它就可以被序列化\n\n- 如果去掉Serializable接口,序列化操作时候会抛出`java.io.NotSerializableException`\n\n> Serializable明明就是一个空的接口，它是怎么保证只有实现了该接口的方法才能进行序列化与反序列化的呢？\n\n`writeObject` ---> `writeObject0` ---> `writeOrdinaryObject` ---> `writeSerialData` ---> `invokeWriteObject`\n\n`writeObject0`方法中有这么一段代码：\n\n<!--more-->\n```java\nif (obj instanceof String) {\n                writeString((String) obj, unshared);\n            } else if (cl.isArray()) {\n                writeArray(obj, desc, unshared);\n            } else if (obj instanceof Enum) {\n                writeEnum((Enum<?>) obj, desc, unshared);\n            } else if (obj instanceof Serializable) {\n                writeOrdinaryObject(obj, desc, unshared);\n            } else {\n                if (extendedDebugInfo) {\n                    throw new NotSerializableException(\n                        cl.getName() + \"\\n\" + debugInfoStack.toString());\n                } else {\n                    throw new NotSerializableException(cl.getName());\n                }\n            }\n```\n\n所以当Object继承了`Serializable`的时候，就会调用`writeOrdinaryObject`(就是上文的那个调用路径）\n\n\n### 单例模式与序列化\n##### 阅读材料：\n\n[单例与序列化的那些事儿](http://www.hollischuang.com/archives/1144)\n\n> 单例模式，是设计模式中最简单的一种。通过单例模式可以保证系统中一个类只有一个实例而且该实例易于外界访问，从而方便对实例个数的控制并节约系统资源。如果希望在系统中某个类的对象只能存在一个，单例模式是最好的解决方案。关于单例模式的使用方式，可以阅读[单例模式的七种写法](http://www.hollischuang.com/archives/205)\n\n\n\n\n\n```java、\nObject obj;\ntry {\n    obj = desc.isInstantiable() ? desc.newInstance() : null;\n} catch (Exception ex) {\n    throw (IOException) new InvalidClassException(\n        desc.forClass().getName(),\n        \"unable to create instance\").initCause(ex);\n}\n```\n\n>isInstantiable：如果一个serializable/externalizable的类可以在运行时被实例化，那么该方法就返回true。针对serializable和externalizable我会在其他文章中介绍。\ndesc.newInstance：该方法通过反射的方式调用无参构造方法新建一个对象。\n\n由此可见，\n> 序列化会通过反射调用无参数的构造方法创建一个新的对象。\n\n#### 防止序列化破坏单例\n> 先给出解决方案，然后再具体分析原理：\n> 只要在Singleton类中定义readResolve就可以解决该问题：\n\n```java\n  @Test\n    public void singletonTestOk() throws IOException, ClassNotFoundException {\n        //Write Obj to file\n        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"tempFile\"));\n        oos.writeObject(SingletonOk.getSingleton());\n        //Read Obj from file\n        File file = new File(\"tempFile\");\n        ObjectInputStream ois =  new ObjectInputStream(new FileInputStream(file));\n        SingletonOk newInstance = (SingletonOk) ois.readObject();\n        //判断是否是同一个对象\n        Assert.assertTrue(newInstance == SingletonOk.getSingleton());\n        logger.info(\"the same is : {} \", newInstance == SingletonOk.getSingleton());\n    }\n```\n\n具体实现原理，需要继续看源码：\n```java\n/**\n * Reads and returns \"ordinary\" (i.e., not a String, Class,\n * ObjectStreamClass, array, or enum constant) object, or null if object's\n * class is unresolvable (in which case a ClassNotFoundException will be\n * associated with object's handle).  Sets passHandle to object's assigned\n * handle.\n */\nprivate Object readOrdinaryObject(boolean unshared)\n    throws IOException\n{\n    ...\n\n    Object obj;\n    try {\n        obj = desc.isInstantiable() ? desc.newInstance() : null;\n    } catch (Exception ex) {\n        throw (IOException) new InvalidClassException(\n            desc.forClass().getName(),\n            \"unable to create instance\").initCause(ex);\n    }\n    ... \n\n    if (obj != null &&\n        handles.lookupException(passHandle) == null &&\n        desc.hasReadResolveMethod())\n    {\n        Object rep = desc.invokeReadResolve(obj);\n        if (unshared && rep.getClass().isArray()) {\n            rep = cloneArray(rep);\n        }\n        if (rep != obj) {\n            handles.setObject(passHandle, obj = rep);\n        }\n    }\n\n    return obj;\n}\n```\n\n> `hasReadResolveMethod`:如果实现了`serializable` 或者 `externalizable`接口的类中包含readResolve则返回true\n> `invokeReadResolve` :通过反射的方式调用要被反序列化的类的`readResolve`方法。\n\n**所以，原理也就清楚了，主要在Singleton中定义readResolve方法，并在该方法中指定要返回的对象的生成策略，就可以防止单例被破坏。**\n\n\n##### 总结\n在涉及到序列化的场景时，要格外注意他对单例的破坏。\n\n### Google Protocol Buffer 的使用和原理\n\n本章节通过阅读[Google Protocol Buffer 的使用和原理](https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/)学习Google protocal buffer\n\n##### 什么事Google Protocal Buffer\n> Google Protocol Buffer( 简称 Protobuf) 是 Google 公司内部的混合语言数据标准，目前已经正在使用的有超过 48,162 种报文格式定义和超过 12,183 个 .proto 文件。他们用于 RPC 系统和持续数据存储系统。\n\n> Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或 RPC 数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 三种语言的 API。\n\n\n#### 任务：动手安装protobuf且成功生成java类\n\n清单 1. proto 文件\n```proto\npackage dovet22; \nmessage helloworld \n{ \n   required int32     id = 1;  // ID \n   required string    str = 2;  // str \n   optional int32     opt = 3;  //optional field \n}\n```\n**关键：**\n> 一个比较好的习惯是认真对待 proto 文件的文件名。比如将命名规则定于如下：`packageName.MessageName.proto`\n\n##### 编译 .proto 文件\n写好 proto 文件之后就可以用 Protobuf 编译器将该文件编译成目标语言了。本例中我们将使用 Java。\n``` shell \n> protoc -I=$SRC_DIR --cpp_out=$DST_DIR $SRC_DIR/addressbook.proto\n```\n\n命令将生成文件：`Dovet22Helloworld.java`\n\n```java\npackage dovet22;\n\npublic final class Dovet22Helloworld {\n  private Dovet22Helloworld() {}\n  public static void registerAllExtensions(\n      com.google.protobuf.ExtensionRegistry registry) {\n  }\n  public interface helloworldOrBuilder extends\n      // @@protoc_insertion_point(interface_extends:dovet22.helloworld)\n      com.google.protobuf.MessageOrBuilder {\n\n    /**\n     * <code>required int32 id = 1;</code>\n     *\n     * <pre>\n     * ID \n     * </pre>\n     */\n    boolean hasId();\n    /**\n     * <code>required int32 id = 1;</code>\n     *\n     * <pre>\n     * ID \n     * </pre>\n     */\n    int getId();\n\n    /**\n     * <code>required string str = 2;</code>\n     *\n     * <pre>\n     * str \n     * </pre>\n     */\n    boolean hasStr();\n    /**\n     * <code>required string str = 2;</code>\n     *\n     * <pre>\n     * str \n     * </pre>\n     */\n    java.lang.String getStr();\n    ...\n  \n}\n```\n\n\n##### Protobuf 的优点\nProtobuf 有如 XML，不过它更小、更快、也更简单。你可以定义自己的数据结构，然后使用代码生成器生成的代码来读写这个数据结构。你甚至可以在无需重新部署程序的情况下更新数据结构。只需使用 Protobuf 对数据结构进行一次描述，即可利用各种不同语言或从各种不同数据流中对你的结构化数据轻松读写。\n\n>它有一个非常棒的特性，即“向后”兼容性好，人们不必破坏已部署的、依靠“老”数据格式的程序就可以对数据结构进行升级。这样您的程序就可以不必担心因为消息结构的改变而造成的大规模的代码重构或者迁移的问题。因为添加新的消息中的 field 并不会引起已经发布的程序的任何改变。\n\n>Protobuf 语义更清晰，无需类似 XML 解析器的东西（因为 Protobuf 编译器会将 .proto 文件编译生成对应的数据访问类以对 Protobuf 数据进行序列化、反序列化操作）。\n\n>使用 Protobuf 无需学习复杂的文档对象模型，Protobuf 的编程模式比较友好，简单易学，同时它拥有良好的文档和示例，对于喜欢简单事物的人们而言，Protobuf 比其他的技术更加有吸引力。\n\n##### Protobuf 的不足\n> Protbuf 与 XML 相比也有不足之处。它功能简单，无法用来表示复杂的概念。\n> XML 已经成为多种行业标准的编写工具，Protobuf 只是 Google 公司内部使用的工具，在通用性上还差很多。\n> 由于文本并不适合用来描述数据结构，所以 Protobuf 也不适合用来对基于文本的标记文档（如 HTML）建模。另外，由于 XML 具有某种程度上的自解释性，它可以被人直接读取编辑，在这一点上 Protobuf 不行，它以二进制的方式存储，除非你有 .proto 定义，否则你没法直接读出 Protobuf 的任何内容【 2 】。\n\n\n## 高级话题：序列化你可能不知道的五件事\n\n### 序列化支持重构\n##### 阅读材料\n[Java 对象序列化：你不知道的5件事](https://www.ibm.com/developerworks/cn/java/j-5things1/)\n##### 背景\n\n> 大约一年前，一个负责管理应用程序所有用户设置的开发人员，决定将用户设置存储在一个 Hashtable 中，然后将这个 Hashtable 序列化到磁盘，以便持久化。当用户更改设置时，便重新将 Hashtable 写到磁盘。\n> 这是一个优雅的、开放式的设置系统，但是，当团队决定从 Hashtable 迁移到 Java Collections 库中的 HashMap 时，这个系统便面临崩溃。\n> Hashtable 和 HashMap 在磁盘上的格式是不相同、不兼容的。除非对每个持久化的用户设置运行某种类型的数据转换实用程序（极其庞大的任务），否则以后似乎只能一直用 Hashtable 作为应用程序的存储格式。\n\n>团队感到陷入僵局，但这只是因为他们不知道关于 Java 序列化的一个重要事实：Java 序列化允许随着时间的推移而改变类型。当我向他们展示如何自动进行序列化替换后，他们终于按计划完成了向 HashMap 的转变。\n\n#### 1. 序列化允许重构\n\n\n#### 参考文献\n[《成神之路-基础篇》Java基础知识——序列化（已完结）](http://www.hollischuang.com/archives/1158)\n[来自 Hollis 的博客:深入分析Java的序列化与反序列化](http://www.hollischuang.com/archives/1140)\n\n[来自 Hollis 的博客:](https://www.zhihu.com/question/278968863)\n\n[单例与序列化的那些事儿](http://www.hollischuang.com/archives/1144)\n[Google Protocol Buffer 的使用和原理](https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/)\n","source":"_posts/ProgramStudy/JAVA/serialization.md","raw":"---\ntitle: serialization\ndate: 2018-09-18 18:45:44\ntags:\n- tech\n- Java\n- 基础\n- Serializable\ncategories:\n- Study\n- Java\n---\n\n### 深入理解序列化\n#### 背景\n\n> 序列化是一种对象持久化的手段，普遍应用于网络传输对象，RMI等场景\n\n本文以Hollis博客中[深入分析Java的序列化与反序列化](http://www.hollischuang.com/archives/1140)一文为蓝本，学习序列化需要关注的几个重要问题\n\n> 怎么实现Java的序列化\n> 为什么实现了`java.io.Serializable`接口，才能序列化\n> `transient`的作用是什么\n> 怎么自定义序列化策略\n> 自定义的序列化策略是如何被调用的\n> ArrayList对序列化的实现有什么好处？\n\n#### 如何实现序列化\n\n> 在Java中，只要一个类实现了java.io.Serializable接口，那么它就可以被序列化\n\n- 如果去掉Serializable接口,序列化操作时候会抛出`java.io.NotSerializableException`\n\n> Serializable明明就是一个空的接口，它是怎么保证只有实现了该接口的方法才能进行序列化与反序列化的呢？\n\n`writeObject` ---> `writeObject0` ---> `writeOrdinaryObject` ---> `writeSerialData` ---> `invokeWriteObject`\n\n`writeObject0`方法中有这么一段代码：\n\n<!--more-->\n```java\nif (obj instanceof String) {\n                writeString((String) obj, unshared);\n            } else if (cl.isArray()) {\n                writeArray(obj, desc, unshared);\n            } else if (obj instanceof Enum) {\n                writeEnum((Enum<?>) obj, desc, unshared);\n            } else if (obj instanceof Serializable) {\n                writeOrdinaryObject(obj, desc, unshared);\n            } else {\n                if (extendedDebugInfo) {\n                    throw new NotSerializableException(\n                        cl.getName() + \"\\n\" + debugInfoStack.toString());\n                } else {\n                    throw new NotSerializableException(cl.getName());\n                }\n            }\n```\n\n所以当Object继承了`Serializable`的时候，就会调用`writeOrdinaryObject`(就是上文的那个调用路径）\n\n\n### 单例模式与序列化\n##### 阅读材料：\n\n[单例与序列化的那些事儿](http://www.hollischuang.com/archives/1144)\n\n> 单例模式，是设计模式中最简单的一种。通过单例模式可以保证系统中一个类只有一个实例而且该实例易于外界访问，从而方便对实例个数的控制并节约系统资源。如果希望在系统中某个类的对象只能存在一个，单例模式是最好的解决方案。关于单例模式的使用方式，可以阅读[单例模式的七种写法](http://www.hollischuang.com/archives/205)\n\n\n\n\n\n```java、\nObject obj;\ntry {\n    obj = desc.isInstantiable() ? desc.newInstance() : null;\n} catch (Exception ex) {\n    throw (IOException) new InvalidClassException(\n        desc.forClass().getName(),\n        \"unable to create instance\").initCause(ex);\n}\n```\n\n>isInstantiable：如果一个serializable/externalizable的类可以在运行时被实例化，那么该方法就返回true。针对serializable和externalizable我会在其他文章中介绍。\ndesc.newInstance：该方法通过反射的方式调用无参构造方法新建一个对象。\n\n由此可见，\n> 序列化会通过反射调用无参数的构造方法创建一个新的对象。\n\n#### 防止序列化破坏单例\n> 先给出解决方案，然后再具体分析原理：\n> 只要在Singleton类中定义readResolve就可以解决该问题：\n\n```java\n  @Test\n    public void singletonTestOk() throws IOException, ClassNotFoundException {\n        //Write Obj to file\n        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"tempFile\"));\n        oos.writeObject(SingletonOk.getSingleton());\n        //Read Obj from file\n        File file = new File(\"tempFile\");\n        ObjectInputStream ois =  new ObjectInputStream(new FileInputStream(file));\n        SingletonOk newInstance = (SingletonOk) ois.readObject();\n        //判断是否是同一个对象\n        Assert.assertTrue(newInstance == SingletonOk.getSingleton());\n        logger.info(\"the same is : {} \", newInstance == SingletonOk.getSingleton());\n    }\n```\n\n具体实现原理，需要继续看源码：\n```java\n/**\n * Reads and returns \"ordinary\" (i.e., not a String, Class,\n * ObjectStreamClass, array, or enum constant) object, or null if object's\n * class is unresolvable (in which case a ClassNotFoundException will be\n * associated with object's handle).  Sets passHandle to object's assigned\n * handle.\n */\nprivate Object readOrdinaryObject(boolean unshared)\n    throws IOException\n{\n    ...\n\n    Object obj;\n    try {\n        obj = desc.isInstantiable() ? desc.newInstance() : null;\n    } catch (Exception ex) {\n        throw (IOException) new InvalidClassException(\n            desc.forClass().getName(),\n            \"unable to create instance\").initCause(ex);\n    }\n    ... \n\n    if (obj != null &&\n        handles.lookupException(passHandle) == null &&\n        desc.hasReadResolveMethod())\n    {\n        Object rep = desc.invokeReadResolve(obj);\n        if (unshared && rep.getClass().isArray()) {\n            rep = cloneArray(rep);\n        }\n        if (rep != obj) {\n            handles.setObject(passHandle, obj = rep);\n        }\n    }\n\n    return obj;\n}\n```\n\n> `hasReadResolveMethod`:如果实现了`serializable` 或者 `externalizable`接口的类中包含readResolve则返回true\n> `invokeReadResolve` :通过反射的方式调用要被反序列化的类的`readResolve`方法。\n\n**所以，原理也就清楚了，主要在Singleton中定义readResolve方法，并在该方法中指定要返回的对象的生成策略，就可以防止单例被破坏。**\n\n\n##### 总结\n在涉及到序列化的场景时，要格外注意他对单例的破坏。\n\n### Google Protocol Buffer 的使用和原理\n\n本章节通过阅读[Google Protocol Buffer 的使用和原理](https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/)学习Google protocal buffer\n\n##### 什么事Google Protocal Buffer\n> Google Protocol Buffer( 简称 Protobuf) 是 Google 公司内部的混合语言数据标准，目前已经正在使用的有超过 48,162 种报文格式定义和超过 12,183 个 .proto 文件。他们用于 RPC 系统和持续数据存储系统。\n\n> Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或 RPC 数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 三种语言的 API。\n\n\n#### 任务：动手安装protobuf且成功生成java类\n\n清单 1. proto 文件\n```proto\npackage dovet22; \nmessage helloworld \n{ \n   required int32     id = 1;  // ID \n   required string    str = 2;  // str \n   optional int32     opt = 3;  //optional field \n}\n```\n**关键：**\n> 一个比较好的习惯是认真对待 proto 文件的文件名。比如将命名规则定于如下：`packageName.MessageName.proto`\n\n##### 编译 .proto 文件\n写好 proto 文件之后就可以用 Protobuf 编译器将该文件编译成目标语言了。本例中我们将使用 Java。\n``` shell \n> protoc -I=$SRC_DIR --cpp_out=$DST_DIR $SRC_DIR/addressbook.proto\n```\n\n命令将生成文件：`Dovet22Helloworld.java`\n\n```java\npackage dovet22;\n\npublic final class Dovet22Helloworld {\n  private Dovet22Helloworld() {}\n  public static void registerAllExtensions(\n      com.google.protobuf.ExtensionRegistry registry) {\n  }\n  public interface helloworldOrBuilder extends\n      // @@protoc_insertion_point(interface_extends:dovet22.helloworld)\n      com.google.protobuf.MessageOrBuilder {\n\n    /**\n     * <code>required int32 id = 1;</code>\n     *\n     * <pre>\n     * ID \n     * </pre>\n     */\n    boolean hasId();\n    /**\n     * <code>required int32 id = 1;</code>\n     *\n     * <pre>\n     * ID \n     * </pre>\n     */\n    int getId();\n\n    /**\n     * <code>required string str = 2;</code>\n     *\n     * <pre>\n     * str \n     * </pre>\n     */\n    boolean hasStr();\n    /**\n     * <code>required string str = 2;</code>\n     *\n     * <pre>\n     * str \n     * </pre>\n     */\n    java.lang.String getStr();\n    ...\n  \n}\n```\n\n\n##### Protobuf 的优点\nProtobuf 有如 XML，不过它更小、更快、也更简单。你可以定义自己的数据结构，然后使用代码生成器生成的代码来读写这个数据结构。你甚至可以在无需重新部署程序的情况下更新数据结构。只需使用 Protobuf 对数据结构进行一次描述，即可利用各种不同语言或从各种不同数据流中对你的结构化数据轻松读写。\n\n>它有一个非常棒的特性，即“向后”兼容性好，人们不必破坏已部署的、依靠“老”数据格式的程序就可以对数据结构进行升级。这样您的程序就可以不必担心因为消息结构的改变而造成的大规模的代码重构或者迁移的问题。因为添加新的消息中的 field 并不会引起已经发布的程序的任何改变。\n\n>Protobuf 语义更清晰，无需类似 XML 解析器的东西（因为 Protobuf 编译器会将 .proto 文件编译生成对应的数据访问类以对 Protobuf 数据进行序列化、反序列化操作）。\n\n>使用 Protobuf 无需学习复杂的文档对象模型，Protobuf 的编程模式比较友好，简单易学，同时它拥有良好的文档和示例，对于喜欢简单事物的人们而言，Protobuf 比其他的技术更加有吸引力。\n\n##### Protobuf 的不足\n> Protbuf 与 XML 相比也有不足之处。它功能简单，无法用来表示复杂的概念。\n> XML 已经成为多种行业标准的编写工具，Protobuf 只是 Google 公司内部使用的工具，在通用性上还差很多。\n> 由于文本并不适合用来描述数据结构，所以 Protobuf 也不适合用来对基于文本的标记文档（如 HTML）建模。另外，由于 XML 具有某种程度上的自解释性，它可以被人直接读取编辑，在这一点上 Protobuf 不行，它以二进制的方式存储，除非你有 .proto 定义，否则你没法直接读出 Protobuf 的任何内容【 2 】。\n\n\n## 高级话题：序列化你可能不知道的五件事\n\n### 序列化支持重构\n##### 阅读材料\n[Java 对象序列化：你不知道的5件事](https://www.ibm.com/developerworks/cn/java/j-5things1/)\n##### 背景\n\n> 大约一年前，一个负责管理应用程序所有用户设置的开发人员，决定将用户设置存储在一个 Hashtable 中，然后将这个 Hashtable 序列化到磁盘，以便持久化。当用户更改设置时，便重新将 Hashtable 写到磁盘。\n> 这是一个优雅的、开放式的设置系统，但是，当团队决定从 Hashtable 迁移到 Java Collections 库中的 HashMap 时，这个系统便面临崩溃。\n> Hashtable 和 HashMap 在磁盘上的格式是不相同、不兼容的。除非对每个持久化的用户设置运行某种类型的数据转换实用程序（极其庞大的任务），否则以后似乎只能一直用 Hashtable 作为应用程序的存储格式。\n\n>团队感到陷入僵局，但这只是因为他们不知道关于 Java 序列化的一个重要事实：Java 序列化允许随着时间的推移而改变类型。当我向他们展示如何自动进行序列化替换后，他们终于按计划完成了向 HashMap 的转变。\n\n#### 1. 序列化允许重构\n\n\n#### 参考文献\n[《成神之路-基础篇》Java基础知识——序列化（已完结）](http://www.hollischuang.com/archives/1158)\n[来自 Hollis 的博客:深入分析Java的序列化与反序列化](http://www.hollischuang.com/archives/1140)\n\n[来自 Hollis 的博客:](https://www.zhihu.com/question/278968863)\n\n[单例与序列化的那些事儿](http://www.hollischuang.com/archives/1144)\n[Google Protocol Buffer 的使用和原理](https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/)\n","slug":"ProgramStudy/JAVA/serialization","published":1,"updated":"2018-09-22T04:13:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmdapdp80022ap9ksxmljt3e","content":"<h3 id=\"&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;\"><a href=\"#&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;\" class=\"headerlink\" title=\"&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;\"></a>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;</h3><h4 id=\"&#x80CC;&#x666F;\"><a href=\"#&#x80CC;&#x666F;\" class=\"headerlink\" title=\"&#x80CC;&#x666F;\"></a>&#x80CC;&#x666F;</h4><blockquote>\n<p>&#x5E8F;&#x5217;&#x5316;&#x662F;&#x4E00;&#x79CD;&#x5BF9;&#x8C61;&#x6301;&#x4E45;&#x5316;&#x7684;&#x624B;&#x6BB5;&#xFF0C;&#x666E;&#x904D;&#x5E94;&#x7528;&#x4E8E;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x5BF9;&#x8C61;&#xFF0C;RMI&#x7B49;&#x573A;&#x666F;</p>\n</blockquote>\n<p>&#x672C;&#x6587;&#x4EE5;Hollis&#x535A;&#x5BA2;&#x4E2D;<a href=\"http://www.hollischuang.com/archives/1140\" target=\"_blank\" rel=\"noopener\">&#x6DF1;&#x5165;&#x5206;&#x6790;Java&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;</a>&#x4E00;&#x6587;&#x4E3A;&#x84DD;&#x672C;&#xFF0C;&#x5B66;&#x4E60;&#x5E8F;&#x5217;&#x5316;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x7684;&#x51E0;&#x4E2A;&#x91CD;&#x8981;&#x95EE;&#x9898;</p>\n<blockquote>\n<p>&#x600E;&#x4E48;&#x5B9E;&#x73B0;Java&#x7684;&#x5E8F;&#x5217;&#x5316;<br>&#x4E3A;&#x4EC0;&#x4E48;&#x5B9E;&#x73B0;&#x4E86;<code>java.io.Serializable</code>&#x63A5;&#x53E3;&#xFF0C;&#x624D;&#x80FD;&#x5E8F;&#x5217;&#x5316;<br><code>transient</code>&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;<br>&#x600E;&#x4E48;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x7B56;&#x7565;<br>&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x7B56;&#x7565;&#x662F;&#x5982;&#x4F55;&#x88AB;&#x8C03;&#x7528;&#x7684;<br>ArrayList&#x5BF9;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x5B9E;&#x73B0;&#x6709;&#x4EC0;&#x4E48;&#x597D;&#x5904;&#xFF1F;</p>\n</blockquote>\n<h4 id=\"&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;\"><a href=\"#&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;\" class=\"headerlink\" title=\"&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;\"></a>&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;</h4><blockquote>\n<p>&#x5728;Java&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x4E00;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;java.io.Serializable&#x63A5;&#x53E3;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x53EF;&#x4EE5;&#x88AB;&#x5E8F;&#x5217;&#x5316;</p>\n</blockquote>\n<ul>\n<li>&#x5982;&#x679C;&#x53BB;&#x6389;Serializable&#x63A5;&#x53E3;,&#x5E8F;&#x5217;&#x5316;&#x64CD;&#x4F5C;&#x65F6;&#x5019;&#x4F1A;&#x629B;&#x51FA;<code>java.io.NotSerializableException</code></li>\n</ul>\n<blockquote>\n<p>Serializable&#x660E;&#x660E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x4FDD;&#x8BC1;&#x53EA;&#x6709;&#x5B9E;&#x73B0;&#x4E86;&#x8BE5;&#x63A5;&#x53E3;&#x7684;&#x65B9;&#x6CD5;&#x624D;&#x80FD;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x5462;&#xFF1F;</p>\n</blockquote>\n<p><code>writeObject</code> &#x2014;&gt; <code>writeObject0</code> &#x2014;&gt; <code>writeOrdinaryObject</code> &#x2014;&gt; <code>writeSerialData</code> &#x2014;&gt; <code>invokeWriteObject</code></p>\n<p><code>writeObject0</code>&#x65B9;&#x6CD5;&#x4E2D;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A;</p>\n<a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String) {</span><br><span class=\"line\">                writeString((String) obj, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cl.isArray()) {</span><br><span class=\"line\">                writeArray(obj, desc, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Enum) {</span><br><span class=\"line\">                writeEnum((Enum&lt;?&gt;) obj, desc, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Serializable) {</span><br><span class=\"line\">                writeOrdinaryObject(obj, desc, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (extendedDebugInfo) {</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NotSerializableException(</span><br><span class=\"line\">                        cl.getName() + <span class=\"string\">&quot;\\n&quot;</span> + debugInfoStack.toString());</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NotSerializableException(cl.getName());</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br></pre></td></tr></table></figure>\n<p>&#x6240;&#x4EE5;&#x5F53;Object&#x7EE7;&#x627F;&#x4E86;<code>Serializable</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x8C03;&#x7528;<code>writeOrdinaryObject</code>(&#x5C31;&#x662F;&#x4E0A;&#x6587;&#x7684;&#x90A3;&#x4E2A;&#x8C03;&#x7528;&#x8DEF;&#x5F84;&#xFF09;</p>\n<h3 id=\"&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;\"><a href=\"#&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;\" class=\"headerlink\" title=\"&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;\"></a>&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;</h3><h5 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;</h5><p><a href=\"http://www.hollischuang.com/archives/1144\" target=\"_blank\" rel=\"noopener\">&#x5355;&#x4F8B;&#x4E0E;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x90A3;&#x4E9B;&#x4E8B;&#x513F;</a></p>\n<blockquote>\n<p>&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x4E2D;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x79CD;&#x3002;&#x901A;&#x8FC7;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x7CFB;&#x7EDF;&#x4E2D;&#x4E00;&#x4E2A;&#x7C7B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x800C;&#x4E14;&#x8BE5;&#x5B9E;&#x4F8B;&#x6613;&#x4E8E;&#x5916;&#x754C;&#x8BBF;&#x95EE;&#xFF0C;&#x4ECE;&#x800C;&#x65B9;&#x4FBF;&#x5BF9;&#x5B9E;&#x4F8B;&#x4E2A;&#x6570;&#x7684;&#x63A7;&#x5236;&#x5E76;&#x8282;&#x7EA6;&#x7CFB;&#x7EDF;&#x8D44;&#x6E90;&#x3002;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x5728;&#x7CFB;&#x7EDF;&#x4E2D;&#x67D0;&#x4E2A;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x53EA;&#x80FD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#xFF0C;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x662F;&#x6700;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;&#x5173;&#x4E8E;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x9605;&#x8BFB;<a href=\"http://www.hollischuang.com/archives/205\" target=\"_blank\" rel=\"noopener\">&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x4E03;&#x79CD;&#x5199;&#x6CD5;</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object obj;</span><br><span class=\"line\">try {</span><br><span class=\"line\">    obj = desc.isInstantiable() ? desc.newInstance() : null;</span><br><span class=\"line\">} catch (Exception ex) {</span><br><span class=\"line\">    throw (IOException) new InvalidClassException(</span><br><span class=\"line\">        desc.forClass().getName(),</span><br><span class=\"line\">        &quot;unable to create instance&quot;).initCause(ex);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>isInstantiable&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x4E2A;serializable/externalizable&#x7684;&#x7C7B;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x88AB;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x65B9;&#x6CD5;&#x5C31;&#x8FD4;&#x56DE;true&#x3002;&#x9488;&#x5BF9;serializable&#x548C;externalizable&#x6211;&#x4F1A;&#x5728;&#x5176;&#x4ED6;&#x6587;&#x7AE0;&#x4E2D;&#x4ECB;&#x7ECD;&#x3002;<br>desc.newInstance&#xFF1A;&#x8BE5;&#x65B9;&#x6CD5;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x7684;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#x65E0;&#x53C2;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;</p>\n</blockquote>\n<p>&#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;</p>\n<blockquote>\n<p>&#x5E8F;&#x5217;&#x5316;&#x4F1A;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x8C03;&#x7528;&#x65E0;&#x53C2;&#x6570;&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>\n</blockquote>\n<h4 id=\"&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;\"><a href=\"#&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;\" class=\"headerlink\" title=\"&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;\"></a>&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;</h4><blockquote>\n<p>&#x5148;&#x7ED9;&#x51FA;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5177;&#x4F53;&#x5206;&#x6790;&#x539F;&#x7406;&#xFF1A;<br>&#x53EA;&#x8981;&#x5728;Singleton&#x7C7B;&#x4E2D;&#x5B9A;&#x4E49;readResolve&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x8BE5;&#x95EE;&#x9898;&#xFF1A;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">singletonTestOk</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException, ClassNotFoundException </span>{</span><br><span class=\"line\">      <span class=\"comment\">//Write Obj to file</span></span><br><span class=\"line\">      ObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;tempFile&quot;</span>));</span><br><span class=\"line\">      oos.writeObject(SingletonOk.getSingleton());</span><br><span class=\"line\">      <span class=\"comment\">//Read Obj from file</span></span><br><span class=\"line\">      File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;tempFile&quot;</span>);</span><br><span class=\"line\">      ObjectInputStream ois =  <span class=\"keyword\">new</span> ObjectInputStream(<span class=\"keyword\">new</span> FileInputStream(file));</span><br><span class=\"line\">      SingletonOk newInstance = (SingletonOk) ois.readObject();</span><br><span class=\"line\">      <span class=\"comment\">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;</span></span><br><span class=\"line\">      Assert.assertTrue(newInstance == SingletonOk.getSingleton());</span><br><span class=\"line\">      logger.info(<span class=\"string\">&quot;the same is : {} &quot;</span>, newInstance == SingletonOk.getSingleton());</span><br><span class=\"line\">  }</span><br></pre></td></tr></table></figure>\n<p>&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF0C;&#x9700;&#x8981;&#x7EE7;&#x7EED;&#x770B;&#x6E90;&#x7801;&#xFF1A;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Reads and returns &quot;ordinary&quot; (i.e., not a String, Class,</span></span><br><span class=\"line\"><span class=\"comment\"> * ObjectStreamClass, array, or enum constant) object, or null if object&apos;s</span></span><br><span class=\"line\"><span class=\"comment\"> * class is unresolvable (in which case a ClassNotFoundException will be</span></span><br><span class=\"line\"><span class=\"comment\"> * associated with object&apos;s handle).  Sets passHandle to object&apos;s assigned</span></span><br><span class=\"line\"><span class=\"comment\"> * handle.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Object <span class=\"title\">readOrdinaryObject</span><span class=\"params\">(<span class=\"keyword\">boolean</span> unshared)</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"keyword\">throws</span> IOException</span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    Object obj;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        obj = desc.isInstantiable() ? desc.newInstance() : <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span> (Exception ex) {</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> (IOException) <span class=\"keyword\">new</span> InvalidClassException(</span><br><span class=\"line\">            desc.forClass().getName(),</span><br><span class=\"line\">            <span class=\"string\">&quot;unable to create instance&quot;</span>).initCause(ex);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    ... </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj != <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">        handles.lookupException(passHandle) == <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">        desc.hasReadResolveMethod())</span><br><span class=\"line\">    {</span><br><span class=\"line\">        Object rep = desc.invokeReadResolve(obj);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (unshared &amp;&amp; rep.getClass().isArray()) {</span><br><span class=\"line\">            rep = cloneArray(rep);</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rep != obj) {</span><br><span class=\"line\">            handles.setObject(passHandle, obj = rep);</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><code>hasReadResolveMethod</code>:&#x5982;&#x679C;&#x5B9E;&#x73B0;&#x4E86;<code>serializable</code> &#x6216;&#x8005; <code>externalizable</code>&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x4E2D;&#x5305;&#x542B;readResolve&#x5219;&#x8FD4;&#x56DE;true<br><code>invokeReadResolve</code> :&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x7684;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#x8981;&#x88AB;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x7C7B;&#x7684;<code>readResolve</code>&#x65B9;&#x6CD5;&#x3002;</p>\n</blockquote>\n<p><strong>&#x6240;&#x4EE5;&#xFF0C;&#x539F;&#x7406;&#x4E5F;&#x5C31;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x4E3B;&#x8981;&#x5728;Singleton&#x4E2D;&#x5B9A;&#x4E49;readResolve&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#x6307;&#x5B9A;&#x8981;&#x8FD4;&#x56DE;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x6210;&#x7B56;&#x7565;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x5355;&#x4F8B;&#x88AB;&#x7834;&#x574F;&#x3002;</strong></p>\n<h5 id=\"&#x603B;&#x7ED3;\"><a href=\"#&#x603B;&#x7ED3;\" class=\"headerlink\" title=\"&#x603B;&#x7ED3;\"></a>&#x603B;&#x7ED3;</h5><p>&#x5728;&#x6D89;&#x53CA;&#x5230;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x573A;&#x666F;&#x65F6;&#xFF0C;&#x8981;&#x683C;&#x5916;&#x6CE8;&#x610F;&#x4ED6;&#x5BF9;&#x5355;&#x4F8B;&#x7684;&#x7834;&#x574F;&#x3002;</p>\n<h3 id=\"Google-Protocol-Buffer-&#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;\"><a href=\"#Google-Protocol-Buffer-&#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;\" class=\"headerlink\" title=\"Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;\"></a>Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;</h3><p>&#x672C;&#x7AE0;&#x8282;&#x901A;&#x8FC7;&#x9605;&#x8BFB;<a href=\"https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/\" target=\"_blank\" rel=\"noopener\">Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;</a>&#x5B66;&#x4E60;Google protocal buffer</p>\n<h5 id=\"&#x4EC0;&#x4E48;&#x4E8B;Google-Protocal-Buffer\"><a href=\"#&#x4EC0;&#x4E48;&#x4E8B;Google-Protocal-Buffer\" class=\"headerlink\" title=\"&#x4EC0;&#x4E48;&#x4E8B;Google Protocal Buffer\"></a>&#x4EC0;&#x4E48;&#x4E8B;Google Protocal Buffer</h5><blockquote>\n<p>Google Protocol Buffer( &#x7B80;&#x79F0; Protobuf) &#x662F; Google &#x516C;&#x53F8;&#x5185;&#x90E8;&#x7684;&#x6DF7;&#x5408;&#x8BED;&#x8A00;&#x6570;&#x636E;&#x6807;&#x51C6;&#xFF0C;&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x6709;&#x8D85;&#x8FC7; 48,162 &#x79CD;&#x62A5;&#x6587;&#x683C;&#x5F0F;&#x5B9A;&#x4E49;&#x548C;&#x8D85;&#x8FC7; 12,183 &#x4E2A; .proto &#x6587;&#x4EF6;&#x3002;&#x4ED6;&#x4EEC;&#x7528;&#x4E8E; RPC &#x7CFB;&#x7EDF;&#x548C;&#x6301;&#x7EED;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>Protocol Buffers &#x662F;&#x4E00;&#x79CD;&#x8F7B;&#x4FBF;&#x9AD8;&#x6548;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x4E32;&#x884C;&#x5316;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x5E8F;&#x5217;&#x5316;&#x3002;&#x5B83;&#x5F88;&#x9002;&#x5408;&#x505A;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x6216; RPC &#x6570;&#x636E;&#x4EA4;&#x6362;&#x683C;&#x5F0F;&#x3002;&#x53EF;&#x7528;&#x4E8E;&#x901A;&#x8BAF;&#x534F;&#x8BAE;&#x3001;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7B49;&#x9886;&#x57DF;&#x7684;&#x8BED;&#x8A00;&#x65E0;&#x5173;&#x3001;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x3001;&#x53EF;&#x6269;&#x5C55;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x7ED3;&#x6784;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x3002;&#x76EE;&#x524D;&#x63D0;&#x4F9B;&#x4E86; C++&#x3001;Java&#x3001;Python &#x4E09;&#x79CD;&#x8BED;&#x8A00;&#x7684; API&#x3002;</p>\n</blockquote>\n<h4 id=\"&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;\"><a href=\"#&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;\" class=\"headerlink\" title=\"&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;\"></a>&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;</h4><p>&#x6E05;&#x5355; 1. proto &#x6587;&#x4EF6;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package dovet22; </span><br><span class=\"line\">message helloworld </span><br><span class=\"line\">{ </span><br><span class=\"line\">   required int32     id = 1;  // ID </span><br><span class=\"line\">   required string    str = 2;  // str </span><br><span class=\"line\">   optional int32     opt = 3;  //optional field </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></p>\n<p><strong>&#x5173;&#x952E;&#xFF1A;</strong></p>\n<blockquote>\n<p>&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x4E60;&#x60EF;&#x662F;&#x8BA4;&#x771F;&#x5BF9;&#x5F85; proto &#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x3002;&#x6BD4;&#x5982;&#x5C06;&#x547D;&#x540D;&#x89C4;&#x5219;&#x5B9A;&#x4E8E;&#x5982;&#x4E0B;&#xFF1A;<code>packageName.MessageName.proto</code></p>\n</blockquote>\n<h5 id=\"&#x7F16;&#x8BD1;-proto-&#x6587;&#x4EF6;\"><a href=\"#&#x7F16;&#x8BD1;-proto-&#x6587;&#x4EF6;\" class=\"headerlink\" title=\"&#x7F16;&#x8BD1; .proto &#x6587;&#x4EF6;\"></a>&#x7F16;&#x8BD1; .proto &#x6587;&#x4EF6;</h5><p>&#x5199;&#x597D; proto &#x6587;&#x4EF6;&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x7528; Protobuf &#x7F16;&#x8BD1;&#x5668;&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x6210;&#x76EE;&#x6807;&#x8BED;&#x8A00;&#x4E86;&#x3002;&#x672C;&#x4F8B;&#x4E2D;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528; Java&#x3002;<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> protoc -I=<span class=\"variable\">$SRC_DIR</span> --cpp_out=<span class=\"variable\">$DST_DIR</span> <span class=\"variable\">$SRC_DIR</span>/addressbook.proto</span></span><br></pre></td></tr></table></figure></p>\n<p>&#x547D;&#x4EE4;&#x5C06;&#x751F;&#x6210;&#x6587;&#x4EF6;&#xFF1A;<code>Dovet22Helloworld.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dovet22;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dovet22Helloworld</span> </span>{</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Dovet22Helloworld</span><span class=\"params\">()</span> </span>{}</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">registerAllExtensions</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      com.google.protobuf.ExtensionRegistry registry)</span> </span>{</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">helloworldOrBuilder</span> <span class=\"keyword\">extends</span></span></span><br><span class=\"line\">      // @@protoc_insertion_point(interface_extends:dovet22.helloworld)</span><br><span class=\"line\">      com.google.protobuf.MessageOrBuilder {</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required int32 id = 1;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * ID </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">hasId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required int32 id = 1;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * ID </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required string str = 2;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * str </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">hasStr</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required string str = 2;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * str </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    java.lang.<span class=\"function\">String <span class=\"title\">getStr</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h5 id=\"Protobuf-&#x7684;&#x4F18;&#x70B9;\"><a href=\"#Protobuf-&#x7684;&#x4F18;&#x70B9;\" class=\"headerlink\" title=\"Protobuf &#x7684;&#x4F18;&#x70B9;\"></a>Protobuf &#x7684;&#x4F18;&#x70B9;</h5><p>Protobuf &#x6709;&#x5982; XML&#xFF0C;&#x4E0D;&#x8FC7;&#x5B83;&#x66F4;&#x5C0F;&#x3001;&#x66F4;&#x5FEB;&#x3001;&#x4E5F;&#x66F4;&#x7B80;&#x5355;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x6765;&#x8BFB;&#x5199;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x4F60;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x5728;&#x65E0;&#x9700;&#x91CD;&#x65B0;&#x90E8;&#x7F72;&#x7A0B;&#x5E8F;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x53EA;&#x9700;&#x4F7F;&#x7528; Protobuf &#x5BF9;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x63CF;&#x8FF0;&#xFF0C;&#x5373;&#x53EF;&#x5229;&#x7528;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x8BED;&#x8A00;&#x6216;&#x4ECE;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x5BF9;&#x4F60;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x8F7B;&#x677E;&#x8BFB;&#x5199;&#x3002;</p>\n<blockquote>\n<p>&#x5B83;&#x6709;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x68D2;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x5373;&#x201C;&#x5411;&#x540E;&#x201D;&#x517C;&#x5BB9;&#x6027;&#x597D;&#xFF0C;&#x4EBA;&#x4EEC;&#x4E0D;&#x5FC5;&#x7834;&#x574F;&#x5DF2;&#x90E8;&#x7F72;&#x7684;&#x3001;&#x4F9D;&#x9760;&#x201C;&#x8001;&#x201D;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x5347;&#x7EA7;&#x3002;&#x8FD9;&#x6837;&#x60A8;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x62C5;&#x5FC3;&#x56E0;&#x4E3A;&#x6D88;&#x606F;&#x7ED3;&#x6784;&#x7684;&#x6539;&#x53D8;&#x800C;&#x9020;&#x6210;&#x7684;&#x5927;&#x89C4;&#x6A21;&#x7684;&#x4EE3;&#x7801;&#x91CD;&#x6784;&#x6216;&#x8005;&#x8FC1;&#x79FB;&#x7684;&#x95EE;&#x9898;&#x3002;&#x56E0;&#x4E3A;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x6D88;&#x606F;&#x4E2D;&#x7684; field &#x5E76;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x5DF2;&#x7ECF;&#x53D1;&#x5E03;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x4EFB;&#x4F55;&#x6539;&#x53D8;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>Protobuf &#x8BED;&#x4E49;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x65E0;&#x9700;&#x7C7B;&#x4F3C; XML &#x89E3;&#x6790;&#x5668;&#x7684;&#x4E1C;&#x897F;&#xFF08;&#x56E0;&#x4E3A; Protobuf &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5C06; .proto &#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8BBF;&#x95EE;&#x7C7B;&#x4EE5;&#x5BF9; Protobuf &#x6570;&#x636E;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x64CD;&#x4F5C;&#xFF09;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x4F7F;&#x7528; Protobuf &#x65E0;&#x9700;&#x5B66;&#x4E60;&#x590D;&#x6742;&#x7684;&#x6587;&#x6863;&#x5BF9;&#x8C61;&#x6A21;&#x578B;&#xFF0C;Protobuf &#x7684;&#x7F16;&#x7A0B;&#x6A21;&#x5F0F;&#x6BD4;&#x8F83;&#x53CB;&#x597D;&#xFF0C;&#x7B80;&#x5355;&#x6613;&#x5B66;&#xFF0C;&#x540C;&#x65F6;&#x5B83;&#x62E5;&#x6709;&#x826F;&#x597D;&#x7684;&#x6587;&#x6863;&#x548C;&#x793A;&#x4F8B;&#xFF0C;&#x5BF9;&#x4E8E;&#x559C;&#x6B22;&#x7B80;&#x5355;&#x4E8B;&#x7269;&#x7684;&#x4EBA;&#x4EEC;&#x800C;&#x8A00;&#xFF0C;Protobuf &#x6BD4;&#x5176;&#x4ED6;&#x7684;&#x6280;&#x672F;&#x66F4;&#x52A0;&#x6709;&#x5438;&#x5F15;&#x529B;&#x3002;</p>\n</blockquote>\n<h5 id=\"Protobuf-&#x7684;&#x4E0D;&#x8DB3;\"><a href=\"#Protobuf-&#x7684;&#x4E0D;&#x8DB3;\" class=\"headerlink\" title=\"Protobuf &#x7684;&#x4E0D;&#x8DB3;\"></a>Protobuf &#x7684;&#x4E0D;&#x8DB3;</h5><blockquote>\n<p>Protbuf &#x4E0E; XML &#x76F8;&#x6BD4;&#x4E5F;&#x6709;&#x4E0D;&#x8DB3;&#x4E4B;&#x5904;&#x3002;&#x5B83;&#x529F;&#x80FD;&#x7B80;&#x5355;&#xFF0C;&#x65E0;&#x6CD5;&#x7528;&#x6765;&#x8868;&#x793A;&#x590D;&#x6742;&#x7684;&#x6982;&#x5FF5;&#x3002;<br>XML &#x5DF2;&#x7ECF;&#x6210;&#x4E3A;&#x591A;&#x79CD;&#x884C;&#x4E1A;&#x6807;&#x51C6;&#x7684;&#x7F16;&#x5199;&#x5DE5;&#x5177;&#xFF0C;Protobuf &#x53EA;&#x662F; Google &#x516C;&#x53F8;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5728;&#x901A;&#x7528;&#x6027;&#x4E0A;&#x8FD8;&#x5DEE;&#x5F88;&#x591A;&#x3002;<br>&#x7531;&#x4E8E;&#x6587;&#x672C;&#x5E76;&#x4E0D;&#x9002;&#x5408;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6240;&#x4EE5; Protobuf &#x4E5F;&#x4E0D;&#x9002;&#x5408;&#x7528;&#x6765;&#x5BF9;&#x57FA;&#x4E8E;&#x6587;&#x672C;&#x7684;&#x6807;&#x8BB0;&#x6587;&#x6863;&#xFF08;&#x5982; HTML&#xFF09;&#x5EFA;&#x6A21;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x7531;&#x4E8E; XML &#x5177;&#x6709;&#x67D0;&#x79CD;&#x7A0B;&#x5EA6;&#x4E0A;&#x7684;&#x81EA;&#x89E3;&#x91CA;&#x6027;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x4EBA;&#x76F4;&#x63A5;&#x8BFB;&#x53D6;&#x7F16;&#x8F91;&#xFF0C;&#x5728;&#x8FD9;&#x4E00;&#x70B9;&#x4E0A; Protobuf &#x4E0D;&#x884C;&#xFF0C;&#x5B83;&#x4EE5;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x65B9;&#x5F0F;&#x5B58;&#x50A8;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x6709; .proto &#x5B9A;&#x4E49;&#xFF0C;&#x5426;&#x5219;&#x4F60;&#x6CA1;&#x6CD5;&#x76F4;&#x63A5;&#x8BFB;&#x51FA; Protobuf &#x7684;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x3010; 2 &#x3011;&#x3002;</p>\n</blockquote>\n<h2 id=\"&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;\"><a href=\"#&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;\" class=\"headerlink\" title=\"&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;\"></a>&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;</h2><h3 id=\"&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;\"><a href=\"#&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;\" class=\"headerlink\" title=\"&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;\"></a>&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;</h3><h5 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;</h5><p><a href=\"https://www.ibm.com/developerworks/cn/java/j-5things1/\" target=\"_blank\" rel=\"noopener\">Java &#x5BF9;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#xFF1A;&#x4F60;&#x4E0D;&#x77E5;&#x9053;&#x7684;5&#x4EF6;&#x4E8B;</a></p>\n<h5 id=\"&#x80CC;&#x666F;-1\"><a href=\"#&#x80CC;&#x666F;-1\" class=\"headerlink\" title=\"&#x80CC;&#x666F;\"></a>&#x80CC;&#x666F;</h5><blockquote>\n<p>&#x5927;&#x7EA6;&#x4E00;&#x5E74;&#x524D;&#xFF0C;&#x4E00;&#x4E2A;&#x8D1F;&#x8D23;&#x7BA1;&#x7406;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6240;&#x6709;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x7684;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#xFF0C;&#x51B3;&#x5B9A;&#x5C06;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x5B58;&#x50A8;&#x5728;&#x4E00;&#x4E2A; Hashtable &#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8FD9;&#x4E2A; Hashtable &#x5E8F;&#x5217;&#x5316;&#x5230;&#x78C1;&#x76D8;&#xFF0C;&#x4EE5;&#x4FBF;&#x6301;&#x4E45;&#x5316;&#x3002;&#x5F53;&#x7528;&#x6237;&#x66F4;&#x6539;&#x8BBE;&#x7F6E;&#x65F6;&#xFF0C;&#x4FBF;&#x91CD;&#x65B0;&#x5C06; Hashtable &#x5199;&#x5230;&#x78C1;&#x76D8;&#x3002;<br>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4F18;&#x96C5;&#x7684;&#x3001;&#x5F00;&#x653E;&#x5F0F;&#x7684;&#x8BBE;&#x7F6E;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x56E2;&#x961F;&#x51B3;&#x5B9A;&#x4ECE; Hashtable &#x8FC1;&#x79FB;&#x5230; Java Collections &#x5E93;&#x4E2D;&#x7684; HashMap &#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x4FBF;&#x9762;&#x4E34;&#x5D29;&#x6E83;&#x3002;<br>Hashtable &#x548C; HashMap &#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x683C;&#x5F0F;&#x662F;&#x4E0D;&#x76F8;&#x540C;&#x3001;&#x4E0D;&#x517C;&#x5BB9;&#x7684;&#x3002;&#x9664;&#x975E;&#x5BF9;&#x6BCF;&#x4E2A;&#x6301;&#x4E45;&#x5316;&#x7684;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x8FD0;&#x884C;&#x67D0;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x5B9E;&#x7528;&#x7A0B;&#x5E8F;&#xFF08;&#x6781;&#x5176;&#x5E9E;&#x5927;&#x7684;&#x4EFB;&#x52A1;&#xFF09;&#xFF0C;&#x5426;&#x5219;&#x4EE5;&#x540E;&#x4F3C;&#x4E4E;&#x53EA;&#x80FD;&#x4E00;&#x76F4;&#x7528; Hashtable &#x4F5C;&#x4E3A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x56E2;&#x961F;&#x611F;&#x5230;&#x9677;&#x5165;&#x50F5;&#x5C40;&#xFF0C;&#x4F46;&#x8FD9;&#x53EA;&#x662F;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x4E0D;&#x77E5;&#x9053;&#x5173;&#x4E8E; Java &#x5E8F;&#x5217;&#x5316;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x4E8B;&#x5B9E;&#xFF1A;Java &#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x63A8;&#x79FB;&#x800C;&#x6539;&#x53D8;&#x7C7B;&#x578B;&#x3002;&#x5F53;&#x6211;&#x5411;&#x4ED6;&#x4EEC;&#x5C55;&#x793A;&#x5982;&#x4F55;&#x81EA;&#x52A8;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x66FF;&#x6362;&#x540E;&#xFF0C;&#x4ED6;&#x4EEC;&#x7EC8;&#x4E8E;&#x6309;&#x8BA1;&#x5212;&#x5B8C;&#x6210;&#x4E86;&#x5411; HashMap &#x7684;&#x8F6C;&#x53D8;&#x3002;</p>\n</blockquote>\n<h4 id=\"1-&#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;\"><a href=\"#1-&#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;\" class=\"headerlink\" title=\"1. &#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;\"></a>1. &#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;</h4><h4 id=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"><a href=\"#&#x53C2;&#x8003;&#x6587;&#x732E;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h4><p><a href=\"http://www.hollischuang.com/archives/1158\" target=\"_blank\" rel=\"noopener\">&#x300A;&#x6210;&#x795E;&#x4E4B;&#x8DEF;-&#x57FA;&#x7840;&#x7BC7;&#x300B;Java&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x2014;&#x2014;&#x5E8F;&#x5217;&#x5316;&#xFF08;&#x5DF2;&#x5B8C;&#x7ED3;&#xFF09;</a><br><a href=\"http://www.hollischuang.com/archives/1140\" target=\"_blank\" rel=\"noopener\">&#x6765;&#x81EA; Hollis &#x7684;&#x535A;&#x5BA2;:&#x6DF1;&#x5165;&#x5206;&#x6790;Java&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;</a></p>\n<p><a href=\"https://www.zhihu.com/question/278968863\" target=\"_blank\" rel=\"noopener\">&#x6765;&#x81EA; Hollis &#x7684;&#x535A;&#x5BA2;:</a></p>\n<p><a href=\"http://www.hollischuang.com/archives/1144\" target=\"_blank\" rel=\"noopener\">&#x5355;&#x4F8B;&#x4E0E;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x90A3;&#x4E9B;&#x4E8B;&#x513F;</a><br><a href=\"https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/\" target=\"_blank\" rel=\"noopener\">Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;\"><a href=\"#&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;\" class=\"headerlink\" title=\"&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;\"></a>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5E8F;&#x5217;&#x5316;</h3><h4 id=\"&#x80CC;&#x666F;\"><a href=\"#&#x80CC;&#x666F;\" class=\"headerlink\" title=\"&#x80CC;&#x666F;\"></a>&#x80CC;&#x666F;</h4><blockquote>\n<p>&#x5E8F;&#x5217;&#x5316;&#x662F;&#x4E00;&#x79CD;&#x5BF9;&#x8C61;&#x6301;&#x4E45;&#x5316;&#x7684;&#x624B;&#x6BB5;&#xFF0C;&#x666E;&#x904D;&#x5E94;&#x7528;&#x4E8E;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x5BF9;&#x8C61;&#xFF0C;RMI&#x7B49;&#x573A;&#x666F;</p>\n</blockquote>\n<p>&#x672C;&#x6587;&#x4EE5;Hollis&#x535A;&#x5BA2;&#x4E2D;<a href=\"http://www.hollischuang.com/archives/1140\" target=\"_blank\" rel=\"noopener\">&#x6DF1;&#x5165;&#x5206;&#x6790;Java&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;</a>&#x4E00;&#x6587;&#x4E3A;&#x84DD;&#x672C;&#xFF0C;&#x5B66;&#x4E60;&#x5E8F;&#x5217;&#x5316;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x7684;&#x51E0;&#x4E2A;&#x91CD;&#x8981;&#x95EE;&#x9898;</p>\n<blockquote>\n<p>&#x600E;&#x4E48;&#x5B9E;&#x73B0;Java&#x7684;&#x5E8F;&#x5217;&#x5316;<br>&#x4E3A;&#x4EC0;&#x4E48;&#x5B9E;&#x73B0;&#x4E86;<code>java.io.Serializable</code>&#x63A5;&#x53E3;&#xFF0C;&#x624D;&#x80FD;&#x5E8F;&#x5217;&#x5316;<br><code>transient</code>&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;<br>&#x600E;&#x4E48;&#x81EA;&#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x5316;&#x7B56;&#x7565;<br>&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x7B56;&#x7565;&#x662F;&#x5982;&#x4F55;&#x88AB;&#x8C03;&#x7528;&#x7684;<br>ArrayList&#x5BF9;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x5B9E;&#x73B0;&#x6709;&#x4EC0;&#x4E48;&#x597D;&#x5904;&#xFF1F;</p>\n</blockquote>\n<h4 id=\"&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;\"><a href=\"#&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;\" class=\"headerlink\" title=\"&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;\"></a>&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5E8F;&#x5217;&#x5316;</h4><blockquote>\n<p>&#x5728;Java&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x4E00;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;java.io.Serializable&#x63A5;&#x53E3;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x53EF;&#x4EE5;&#x88AB;&#x5E8F;&#x5217;&#x5316;</p>\n</blockquote>\n<ul>\n<li>&#x5982;&#x679C;&#x53BB;&#x6389;Serializable&#x63A5;&#x53E3;,&#x5E8F;&#x5217;&#x5316;&#x64CD;&#x4F5C;&#x65F6;&#x5019;&#x4F1A;&#x629B;&#x51FA;<code>java.io.NotSerializableException</code></li>\n</ul>\n<blockquote>\n<p>Serializable&#x660E;&#x660E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x4FDD;&#x8BC1;&#x53EA;&#x6709;&#x5B9E;&#x73B0;&#x4E86;&#x8BE5;&#x63A5;&#x53E3;&#x7684;&#x65B9;&#x6CD5;&#x624D;&#x80FD;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x5462;&#xFF1F;</p>\n</blockquote>\n<p><code>writeObject</code> &#x2014;&gt; <code>writeObject0</code> &#x2014;&gt; <code>writeOrdinaryObject</code> &#x2014;&gt; <code>writeSerialData</code> &#x2014;&gt; <code>invokeWriteObject</code></p>\n<p><code>writeObject0</code>&#x65B9;&#x6CD5;&#x4E2D;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A;</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String) {</span><br><span class=\"line\">                writeString((String) obj, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cl.isArray()) {</span><br><span class=\"line\">                writeArray(obj, desc, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Enum) {</span><br><span class=\"line\">                writeEnum((Enum&lt;?&gt;) obj, desc, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Serializable) {</span><br><span class=\"line\">                writeOrdinaryObject(obj, desc, unshared);</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (extendedDebugInfo) {</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NotSerializableException(</span><br><span class=\"line\">                        cl.getName() + <span class=\"string\">&quot;\\n&quot;</span> + debugInfoStack.toString());</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NotSerializableException(cl.getName());</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br></pre></td></tr></table></figure>\n<p>&#x6240;&#x4EE5;&#x5F53;Object&#x7EE7;&#x627F;&#x4E86;<code>Serializable</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x8C03;&#x7528;<code>writeOrdinaryObject</code>(&#x5C31;&#x662F;&#x4E0A;&#x6587;&#x7684;&#x90A3;&#x4E2A;&#x8C03;&#x7528;&#x8DEF;&#x5F84;&#xFF09;</p>\n<h3 id=\"&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;\"><a href=\"#&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;\" class=\"headerlink\" title=\"&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;\"></a>&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x4E0E;&#x5E8F;&#x5217;&#x5316;</h3><h5 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;&#xFF1A;</h5><p><a href=\"http://www.hollischuang.com/archives/1144\" target=\"_blank\" rel=\"noopener\">&#x5355;&#x4F8B;&#x4E0E;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x90A3;&#x4E9B;&#x4E8B;&#x513F;</a></p>\n<blockquote>\n<p>&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x4E2D;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x79CD;&#x3002;&#x901A;&#x8FC7;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x7CFB;&#x7EDF;&#x4E2D;&#x4E00;&#x4E2A;&#x7C7B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x800C;&#x4E14;&#x8BE5;&#x5B9E;&#x4F8B;&#x6613;&#x4E8E;&#x5916;&#x754C;&#x8BBF;&#x95EE;&#xFF0C;&#x4ECE;&#x800C;&#x65B9;&#x4FBF;&#x5BF9;&#x5B9E;&#x4F8B;&#x4E2A;&#x6570;&#x7684;&#x63A7;&#x5236;&#x5E76;&#x8282;&#x7EA6;&#x7CFB;&#x7EDF;&#x8D44;&#x6E90;&#x3002;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x5728;&#x7CFB;&#x7EDF;&#x4E2D;&#x67D0;&#x4E2A;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x53EA;&#x80FD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#xFF0C;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x662F;&#x6700;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;&#x5173;&#x4E8E;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x9605;&#x8BFB;<a href=\"http://www.hollischuang.com/archives/205\" target=\"_blank\" rel=\"noopener\">&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x4E03;&#x79CD;&#x5199;&#x6CD5;</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object obj;</span><br><span class=\"line\">try {</span><br><span class=\"line\">    obj = desc.isInstantiable() ? desc.newInstance() : null;</span><br><span class=\"line\">} catch (Exception ex) {</span><br><span class=\"line\">    throw (IOException) new InvalidClassException(</span><br><span class=\"line\">        desc.forClass().getName(),</span><br><span class=\"line\">        &quot;unable to create instance&quot;).initCause(ex);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>isInstantiable&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x4E2A;serializable/externalizable&#x7684;&#x7C7B;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x88AB;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x65B9;&#x6CD5;&#x5C31;&#x8FD4;&#x56DE;true&#x3002;&#x9488;&#x5BF9;serializable&#x548C;externalizable&#x6211;&#x4F1A;&#x5728;&#x5176;&#x4ED6;&#x6587;&#x7AE0;&#x4E2D;&#x4ECB;&#x7ECD;&#x3002;<br>desc.newInstance&#xFF1A;&#x8BE5;&#x65B9;&#x6CD5;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x7684;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#x65E0;&#x53C2;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;</p>\n</blockquote>\n<p>&#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;</p>\n<blockquote>\n<p>&#x5E8F;&#x5217;&#x5316;&#x4F1A;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x8C03;&#x7528;&#x65E0;&#x53C2;&#x6570;&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>\n</blockquote>\n<h4 id=\"&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;\"><a href=\"#&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;\" class=\"headerlink\" title=\"&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;\"></a>&#x9632;&#x6B62;&#x5E8F;&#x5217;&#x5316;&#x7834;&#x574F;&#x5355;&#x4F8B;</h4><blockquote>\n<p>&#x5148;&#x7ED9;&#x51FA;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5177;&#x4F53;&#x5206;&#x6790;&#x539F;&#x7406;&#xFF1A;<br>&#x53EA;&#x8981;&#x5728;Singleton&#x7C7B;&#x4E2D;&#x5B9A;&#x4E49;readResolve&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x8BE5;&#x95EE;&#x9898;&#xFF1A;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">singletonTestOk</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException, ClassNotFoundException </span>{</span><br><span class=\"line\">      <span class=\"comment\">//Write Obj to file</span></span><br><span class=\"line\">      ObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;tempFile&quot;</span>));</span><br><span class=\"line\">      oos.writeObject(SingletonOk.getSingleton());</span><br><span class=\"line\">      <span class=\"comment\">//Read Obj from file</span></span><br><span class=\"line\">      File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;tempFile&quot;</span>);</span><br><span class=\"line\">      ObjectInputStream ois =  <span class=\"keyword\">new</span> ObjectInputStream(<span class=\"keyword\">new</span> FileInputStream(file));</span><br><span class=\"line\">      SingletonOk newInstance = (SingletonOk) ois.readObject();</span><br><span class=\"line\">      <span class=\"comment\">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;</span></span><br><span class=\"line\">      Assert.assertTrue(newInstance == SingletonOk.getSingleton());</span><br><span class=\"line\">      logger.info(<span class=\"string\">&quot;the same is : {} &quot;</span>, newInstance == SingletonOk.getSingleton());</span><br><span class=\"line\">  }</span><br></pre></td></tr></table></figure>\n<p>&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF0C;&#x9700;&#x8981;&#x7EE7;&#x7EED;&#x770B;&#x6E90;&#x7801;&#xFF1A;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Reads and returns &quot;ordinary&quot; (i.e., not a String, Class,</span></span><br><span class=\"line\"><span class=\"comment\"> * ObjectStreamClass, array, or enum constant) object, or null if object&apos;s</span></span><br><span class=\"line\"><span class=\"comment\"> * class is unresolvable (in which case a ClassNotFoundException will be</span></span><br><span class=\"line\"><span class=\"comment\"> * associated with object&apos;s handle).  Sets passHandle to object&apos;s assigned</span></span><br><span class=\"line\"><span class=\"comment\"> * handle.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Object <span class=\"title\">readOrdinaryObject</span><span class=\"params\">(<span class=\"keyword\">boolean</span> unshared)</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"keyword\">throws</span> IOException</span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    Object obj;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        obj = desc.isInstantiable() ? desc.newInstance() : <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span> (Exception ex) {</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> (IOException) <span class=\"keyword\">new</span> InvalidClassException(</span><br><span class=\"line\">            desc.forClass().getName(),</span><br><span class=\"line\">            <span class=\"string\">&quot;unable to create instance&quot;</span>).initCause(ex);</span><br><span class=\"line\">    }</span><br><span class=\"line\">    ... </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj != <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">        handles.lookupException(passHandle) == <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">        desc.hasReadResolveMethod())</span><br><span class=\"line\">    {</span><br><span class=\"line\">        Object rep = desc.invokeReadResolve(obj);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (unshared &amp;&amp; rep.getClass().isArray()) {</span><br><span class=\"line\">            rep = cloneArray(rep);</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rep != obj) {</span><br><span class=\"line\">            handles.setObject(passHandle, obj = rep);</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><code>hasReadResolveMethod</code>:&#x5982;&#x679C;&#x5B9E;&#x73B0;&#x4E86;<code>serializable</code> &#x6216;&#x8005; <code>externalizable</code>&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x4E2D;&#x5305;&#x542B;readResolve&#x5219;&#x8FD4;&#x56DE;true<br><code>invokeReadResolve</code> :&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x7684;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#x8981;&#x88AB;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x7C7B;&#x7684;<code>readResolve</code>&#x65B9;&#x6CD5;&#x3002;</p>\n</blockquote>\n<p><strong>&#x6240;&#x4EE5;&#xFF0C;&#x539F;&#x7406;&#x4E5F;&#x5C31;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x4E3B;&#x8981;&#x5728;Singleton&#x4E2D;&#x5B9A;&#x4E49;readResolve&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#x6307;&#x5B9A;&#x8981;&#x8FD4;&#x56DE;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x6210;&#x7B56;&#x7565;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x5355;&#x4F8B;&#x88AB;&#x7834;&#x574F;&#x3002;</strong></p>\n<h5 id=\"&#x603B;&#x7ED3;\"><a href=\"#&#x603B;&#x7ED3;\" class=\"headerlink\" title=\"&#x603B;&#x7ED3;\"></a>&#x603B;&#x7ED3;</h5><p>&#x5728;&#x6D89;&#x53CA;&#x5230;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x573A;&#x666F;&#x65F6;&#xFF0C;&#x8981;&#x683C;&#x5916;&#x6CE8;&#x610F;&#x4ED6;&#x5BF9;&#x5355;&#x4F8B;&#x7684;&#x7834;&#x574F;&#x3002;</p>\n<h3 id=\"Google-Protocol-Buffer-&#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;\"><a href=\"#Google-Protocol-Buffer-&#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;\" class=\"headerlink\" title=\"Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;\"></a>Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;</h3><p>&#x672C;&#x7AE0;&#x8282;&#x901A;&#x8FC7;&#x9605;&#x8BFB;<a href=\"https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/\" target=\"_blank\" rel=\"noopener\">Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;</a>&#x5B66;&#x4E60;Google protocal buffer</p>\n<h5 id=\"&#x4EC0;&#x4E48;&#x4E8B;Google-Protocal-Buffer\"><a href=\"#&#x4EC0;&#x4E48;&#x4E8B;Google-Protocal-Buffer\" class=\"headerlink\" title=\"&#x4EC0;&#x4E48;&#x4E8B;Google Protocal Buffer\"></a>&#x4EC0;&#x4E48;&#x4E8B;Google Protocal Buffer</h5><blockquote>\n<p>Google Protocol Buffer( &#x7B80;&#x79F0; Protobuf) &#x662F; Google &#x516C;&#x53F8;&#x5185;&#x90E8;&#x7684;&#x6DF7;&#x5408;&#x8BED;&#x8A00;&#x6570;&#x636E;&#x6807;&#x51C6;&#xFF0C;&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x6709;&#x8D85;&#x8FC7; 48,162 &#x79CD;&#x62A5;&#x6587;&#x683C;&#x5F0F;&#x5B9A;&#x4E49;&#x548C;&#x8D85;&#x8FC7; 12,183 &#x4E2A; .proto &#x6587;&#x4EF6;&#x3002;&#x4ED6;&#x4EEC;&#x7528;&#x4E8E; RPC &#x7CFB;&#x7EDF;&#x548C;&#x6301;&#x7EED;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>Protocol Buffers &#x662F;&#x4E00;&#x79CD;&#x8F7B;&#x4FBF;&#x9AD8;&#x6548;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x4E32;&#x884C;&#x5316;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x5E8F;&#x5217;&#x5316;&#x3002;&#x5B83;&#x5F88;&#x9002;&#x5408;&#x505A;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x6216; RPC &#x6570;&#x636E;&#x4EA4;&#x6362;&#x683C;&#x5F0F;&#x3002;&#x53EF;&#x7528;&#x4E8E;&#x901A;&#x8BAF;&#x534F;&#x8BAE;&#x3001;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7B49;&#x9886;&#x57DF;&#x7684;&#x8BED;&#x8A00;&#x65E0;&#x5173;&#x3001;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x3001;&#x53EF;&#x6269;&#x5C55;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x7ED3;&#x6784;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x3002;&#x76EE;&#x524D;&#x63D0;&#x4F9B;&#x4E86; C++&#x3001;Java&#x3001;Python &#x4E09;&#x79CD;&#x8BED;&#x8A00;&#x7684; API&#x3002;</p>\n</blockquote>\n<h4 id=\"&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;\"><a href=\"#&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;\" class=\"headerlink\" title=\"&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;\"></a>&#x4EFB;&#x52A1;&#xFF1A;&#x52A8;&#x624B;&#x5B89;&#x88C5;protobuf&#x4E14;&#x6210;&#x529F;&#x751F;&#x6210;java&#x7C7B;</h4><p>&#x6E05;&#x5355; 1. proto &#x6587;&#x4EF6;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package dovet22; </span><br><span class=\"line\">message helloworld </span><br><span class=\"line\">{ </span><br><span class=\"line\">   required int32     id = 1;  // ID </span><br><span class=\"line\">   required string    str = 2;  // str </span><br><span class=\"line\">   optional int32     opt = 3;  //optional field </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></p>\n<p><strong>&#x5173;&#x952E;&#xFF1A;</strong></p>\n<blockquote>\n<p>&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x4E60;&#x60EF;&#x662F;&#x8BA4;&#x771F;&#x5BF9;&#x5F85; proto &#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x3002;&#x6BD4;&#x5982;&#x5C06;&#x547D;&#x540D;&#x89C4;&#x5219;&#x5B9A;&#x4E8E;&#x5982;&#x4E0B;&#xFF1A;<code>packageName.MessageName.proto</code></p>\n</blockquote>\n<h5 id=\"&#x7F16;&#x8BD1;-proto-&#x6587;&#x4EF6;\"><a href=\"#&#x7F16;&#x8BD1;-proto-&#x6587;&#x4EF6;\" class=\"headerlink\" title=\"&#x7F16;&#x8BD1; .proto &#x6587;&#x4EF6;\"></a>&#x7F16;&#x8BD1; .proto &#x6587;&#x4EF6;</h5><p>&#x5199;&#x597D; proto &#x6587;&#x4EF6;&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x7528; Protobuf &#x7F16;&#x8BD1;&#x5668;&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x6210;&#x76EE;&#x6807;&#x8BED;&#x8A00;&#x4E86;&#x3002;&#x672C;&#x4F8B;&#x4E2D;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528; Java&#x3002;<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> protoc -I=<span class=\"variable\">$SRC_DIR</span> --cpp_out=<span class=\"variable\">$DST_DIR</span> <span class=\"variable\">$SRC_DIR</span>/addressbook.proto</span></span><br></pre></td></tr></table></figure></p>\n<p>&#x547D;&#x4EE4;&#x5C06;&#x751F;&#x6210;&#x6587;&#x4EF6;&#xFF1A;<code>Dovet22Helloworld.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dovet22;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dovet22Helloworld</span> </span>{</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Dovet22Helloworld</span><span class=\"params\">()</span> </span>{}</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">registerAllExtensions</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      com.google.protobuf.ExtensionRegistry registry)</span> </span>{</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">helloworldOrBuilder</span> <span class=\"keyword\">extends</span></span></span><br><span class=\"line\">      // @@protoc_insertion_point(interface_extends:dovet22.helloworld)</span><br><span class=\"line\">      com.google.protobuf.MessageOrBuilder {</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required int32 id = 1;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * ID </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">hasId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required int32 id = 1;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * ID </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required string str = 2;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * str </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">hasStr</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;code&gt;required string str = 2;&lt;/code&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * str </span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    java.lang.<span class=\"function\">String <span class=\"title\">getStr</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  </span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h5 id=\"Protobuf-&#x7684;&#x4F18;&#x70B9;\"><a href=\"#Protobuf-&#x7684;&#x4F18;&#x70B9;\" class=\"headerlink\" title=\"Protobuf &#x7684;&#x4F18;&#x70B9;\"></a>Protobuf &#x7684;&#x4F18;&#x70B9;</h5><p>Protobuf &#x6709;&#x5982; XML&#xFF0C;&#x4E0D;&#x8FC7;&#x5B83;&#x66F4;&#x5C0F;&#x3001;&#x66F4;&#x5FEB;&#x3001;&#x4E5F;&#x66F4;&#x7B80;&#x5355;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x6765;&#x8BFB;&#x5199;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x4F60;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x5728;&#x65E0;&#x9700;&#x91CD;&#x65B0;&#x90E8;&#x7F72;&#x7A0B;&#x5E8F;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x53EA;&#x9700;&#x4F7F;&#x7528; Protobuf &#x5BF9;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x63CF;&#x8FF0;&#xFF0C;&#x5373;&#x53EF;&#x5229;&#x7528;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x8BED;&#x8A00;&#x6216;&#x4ECE;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x5BF9;&#x4F60;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x8F7B;&#x677E;&#x8BFB;&#x5199;&#x3002;</p>\n<blockquote>\n<p>&#x5B83;&#x6709;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x68D2;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x5373;&#x201C;&#x5411;&#x540E;&#x201D;&#x517C;&#x5BB9;&#x6027;&#x597D;&#xFF0C;&#x4EBA;&#x4EEC;&#x4E0D;&#x5FC5;&#x7834;&#x574F;&#x5DF2;&#x90E8;&#x7F72;&#x7684;&#x3001;&#x4F9D;&#x9760;&#x201C;&#x8001;&#x201D;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x5347;&#x7EA7;&#x3002;&#x8FD9;&#x6837;&#x60A8;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x62C5;&#x5FC3;&#x56E0;&#x4E3A;&#x6D88;&#x606F;&#x7ED3;&#x6784;&#x7684;&#x6539;&#x53D8;&#x800C;&#x9020;&#x6210;&#x7684;&#x5927;&#x89C4;&#x6A21;&#x7684;&#x4EE3;&#x7801;&#x91CD;&#x6784;&#x6216;&#x8005;&#x8FC1;&#x79FB;&#x7684;&#x95EE;&#x9898;&#x3002;&#x56E0;&#x4E3A;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x6D88;&#x606F;&#x4E2D;&#x7684; field &#x5E76;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x5DF2;&#x7ECF;&#x53D1;&#x5E03;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x4EFB;&#x4F55;&#x6539;&#x53D8;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>Protobuf &#x8BED;&#x4E49;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x65E0;&#x9700;&#x7C7B;&#x4F3C; XML &#x89E3;&#x6790;&#x5668;&#x7684;&#x4E1C;&#x897F;&#xFF08;&#x56E0;&#x4E3A; Protobuf &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5C06; .proto &#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8BBF;&#x95EE;&#x7C7B;&#x4EE5;&#x5BF9; Protobuf &#x6570;&#x636E;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x64CD;&#x4F5C;&#xFF09;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x4F7F;&#x7528; Protobuf &#x65E0;&#x9700;&#x5B66;&#x4E60;&#x590D;&#x6742;&#x7684;&#x6587;&#x6863;&#x5BF9;&#x8C61;&#x6A21;&#x578B;&#xFF0C;Protobuf &#x7684;&#x7F16;&#x7A0B;&#x6A21;&#x5F0F;&#x6BD4;&#x8F83;&#x53CB;&#x597D;&#xFF0C;&#x7B80;&#x5355;&#x6613;&#x5B66;&#xFF0C;&#x540C;&#x65F6;&#x5B83;&#x62E5;&#x6709;&#x826F;&#x597D;&#x7684;&#x6587;&#x6863;&#x548C;&#x793A;&#x4F8B;&#xFF0C;&#x5BF9;&#x4E8E;&#x559C;&#x6B22;&#x7B80;&#x5355;&#x4E8B;&#x7269;&#x7684;&#x4EBA;&#x4EEC;&#x800C;&#x8A00;&#xFF0C;Protobuf &#x6BD4;&#x5176;&#x4ED6;&#x7684;&#x6280;&#x672F;&#x66F4;&#x52A0;&#x6709;&#x5438;&#x5F15;&#x529B;&#x3002;</p>\n</blockquote>\n<h5 id=\"Protobuf-&#x7684;&#x4E0D;&#x8DB3;\"><a href=\"#Protobuf-&#x7684;&#x4E0D;&#x8DB3;\" class=\"headerlink\" title=\"Protobuf &#x7684;&#x4E0D;&#x8DB3;\"></a>Protobuf &#x7684;&#x4E0D;&#x8DB3;</h5><blockquote>\n<p>Protbuf &#x4E0E; XML &#x76F8;&#x6BD4;&#x4E5F;&#x6709;&#x4E0D;&#x8DB3;&#x4E4B;&#x5904;&#x3002;&#x5B83;&#x529F;&#x80FD;&#x7B80;&#x5355;&#xFF0C;&#x65E0;&#x6CD5;&#x7528;&#x6765;&#x8868;&#x793A;&#x590D;&#x6742;&#x7684;&#x6982;&#x5FF5;&#x3002;<br>XML &#x5DF2;&#x7ECF;&#x6210;&#x4E3A;&#x591A;&#x79CD;&#x884C;&#x4E1A;&#x6807;&#x51C6;&#x7684;&#x7F16;&#x5199;&#x5DE5;&#x5177;&#xFF0C;Protobuf &#x53EA;&#x662F; Google &#x516C;&#x53F8;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5728;&#x901A;&#x7528;&#x6027;&#x4E0A;&#x8FD8;&#x5DEE;&#x5F88;&#x591A;&#x3002;<br>&#x7531;&#x4E8E;&#x6587;&#x672C;&#x5E76;&#x4E0D;&#x9002;&#x5408;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6240;&#x4EE5; Protobuf &#x4E5F;&#x4E0D;&#x9002;&#x5408;&#x7528;&#x6765;&#x5BF9;&#x57FA;&#x4E8E;&#x6587;&#x672C;&#x7684;&#x6807;&#x8BB0;&#x6587;&#x6863;&#xFF08;&#x5982; HTML&#xFF09;&#x5EFA;&#x6A21;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x7531;&#x4E8E; XML &#x5177;&#x6709;&#x67D0;&#x79CD;&#x7A0B;&#x5EA6;&#x4E0A;&#x7684;&#x81EA;&#x89E3;&#x91CA;&#x6027;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x4EBA;&#x76F4;&#x63A5;&#x8BFB;&#x53D6;&#x7F16;&#x8F91;&#xFF0C;&#x5728;&#x8FD9;&#x4E00;&#x70B9;&#x4E0A; Protobuf &#x4E0D;&#x884C;&#xFF0C;&#x5B83;&#x4EE5;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x65B9;&#x5F0F;&#x5B58;&#x50A8;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x6709; .proto &#x5B9A;&#x4E49;&#xFF0C;&#x5426;&#x5219;&#x4F60;&#x6CA1;&#x6CD5;&#x76F4;&#x63A5;&#x8BFB;&#x51FA; Protobuf &#x7684;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x3010; 2 &#x3011;&#x3002;</p>\n</blockquote>\n<h2 id=\"&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;\"><a href=\"#&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;\" class=\"headerlink\" title=\"&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;\"></a>&#x9AD8;&#x7EA7;&#x8BDD;&#x9898;&#xFF1A;&#x5E8F;&#x5217;&#x5316;&#x4F60;&#x53EF;&#x80FD;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#x4E94;&#x4EF6;&#x4E8B;</h2><h3 id=\"&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;\"><a href=\"#&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;\" class=\"headerlink\" title=\"&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;\"></a>&#x5E8F;&#x5217;&#x5316;&#x652F;&#x6301;&#x91CD;&#x6784;</h3><h5 id=\"&#x9605;&#x8BFB;&#x6750;&#x6599;\"><a href=\"#&#x9605;&#x8BFB;&#x6750;&#x6599;\" class=\"headerlink\" title=\"&#x9605;&#x8BFB;&#x6750;&#x6599;\"></a>&#x9605;&#x8BFB;&#x6750;&#x6599;</h5><p><a href=\"https://www.ibm.com/developerworks/cn/java/j-5things1/\" target=\"_blank\" rel=\"noopener\">Java &#x5BF9;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#xFF1A;&#x4F60;&#x4E0D;&#x77E5;&#x9053;&#x7684;5&#x4EF6;&#x4E8B;</a></p>\n<h5 id=\"&#x80CC;&#x666F;-1\"><a href=\"#&#x80CC;&#x666F;-1\" class=\"headerlink\" title=\"&#x80CC;&#x666F;\"></a>&#x80CC;&#x666F;</h5><blockquote>\n<p>&#x5927;&#x7EA6;&#x4E00;&#x5E74;&#x524D;&#xFF0C;&#x4E00;&#x4E2A;&#x8D1F;&#x8D23;&#x7BA1;&#x7406;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6240;&#x6709;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x7684;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#xFF0C;&#x51B3;&#x5B9A;&#x5C06;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x5B58;&#x50A8;&#x5728;&#x4E00;&#x4E2A; Hashtable &#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8FD9;&#x4E2A; Hashtable &#x5E8F;&#x5217;&#x5316;&#x5230;&#x78C1;&#x76D8;&#xFF0C;&#x4EE5;&#x4FBF;&#x6301;&#x4E45;&#x5316;&#x3002;&#x5F53;&#x7528;&#x6237;&#x66F4;&#x6539;&#x8BBE;&#x7F6E;&#x65F6;&#xFF0C;&#x4FBF;&#x91CD;&#x65B0;&#x5C06; Hashtable &#x5199;&#x5230;&#x78C1;&#x76D8;&#x3002;<br>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4F18;&#x96C5;&#x7684;&#x3001;&#x5F00;&#x653E;&#x5F0F;&#x7684;&#x8BBE;&#x7F6E;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x56E2;&#x961F;&#x51B3;&#x5B9A;&#x4ECE; Hashtable &#x8FC1;&#x79FB;&#x5230; Java Collections &#x5E93;&#x4E2D;&#x7684; HashMap &#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x4FBF;&#x9762;&#x4E34;&#x5D29;&#x6E83;&#x3002;<br>Hashtable &#x548C; HashMap &#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x683C;&#x5F0F;&#x662F;&#x4E0D;&#x76F8;&#x540C;&#x3001;&#x4E0D;&#x517C;&#x5BB9;&#x7684;&#x3002;&#x9664;&#x975E;&#x5BF9;&#x6BCF;&#x4E2A;&#x6301;&#x4E45;&#x5316;&#x7684;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x8FD0;&#x884C;&#x67D0;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x5B9E;&#x7528;&#x7A0B;&#x5E8F;&#xFF08;&#x6781;&#x5176;&#x5E9E;&#x5927;&#x7684;&#x4EFB;&#x52A1;&#xFF09;&#xFF0C;&#x5426;&#x5219;&#x4EE5;&#x540E;&#x4F3C;&#x4E4E;&#x53EA;&#x80FD;&#x4E00;&#x76F4;&#x7528; Hashtable &#x4F5C;&#x4E3A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#x3002;</p>\n</blockquote>\n<blockquote>\n<p>&#x56E2;&#x961F;&#x611F;&#x5230;&#x9677;&#x5165;&#x50F5;&#x5C40;&#xFF0C;&#x4F46;&#x8FD9;&#x53EA;&#x662F;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x4E0D;&#x77E5;&#x9053;&#x5173;&#x4E8E; Java &#x5E8F;&#x5217;&#x5316;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x4E8B;&#x5B9E;&#xFF1A;Java &#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x63A8;&#x79FB;&#x800C;&#x6539;&#x53D8;&#x7C7B;&#x578B;&#x3002;&#x5F53;&#x6211;&#x5411;&#x4ED6;&#x4EEC;&#x5C55;&#x793A;&#x5982;&#x4F55;&#x81EA;&#x52A8;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x66FF;&#x6362;&#x540E;&#xFF0C;&#x4ED6;&#x4EEC;&#x7EC8;&#x4E8E;&#x6309;&#x8BA1;&#x5212;&#x5B8C;&#x6210;&#x4E86;&#x5411; HashMap &#x7684;&#x8F6C;&#x53D8;&#x3002;</p>\n</blockquote>\n<h4 id=\"1-&#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;\"><a href=\"#1-&#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;\" class=\"headerlink\" title=\"1. &#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;\"></a>1. &#x5E8F;&#x5217;&#x5316;&#x5141;&#x8BB8;&#x91CD;&#x6784;</h4><h4 id=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"><a href=\"#&#x53C2;&#x8003;&#x6587;&#x732E;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h4><p><a href=\"http://www.hollischuang.com/archives/1158\" target=\"_blank\" rel=\"noopener\">&#x300A;&#x6210;&#x795E;&#x4E4B;&#x8DEF;-&#x57FA;&#x7840;&#x7BC7;&#x300B;Java&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x2014;&#x2014;&#x5E8F;&#x5217;&#x5316;&#xFF08;&#x5DF2;&#x5B8C;&#x7ED3;&#xFF09;</a><br><a href=\"http://www.hollischuang.com/archives/1140\" target=\"_blank\" rel=\"noopener\">&#x6765;&#x81EA; Hollis &#x7684;&#x535A;&#x5BA2;:&#x6DF1;&#x5165;&#x5206;&#x6790;Java&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0E;&#x53CD;&#x5E8F;&#x5217;&#x5316;</a></p>\n<p><a href=\"https://www.zhihu.com/question/278968863\" target=\"_blank\" rel=\"noopener\">&#x6765;&#x81EA; Hollis &#x7684;&#x535A;&#x5BA2;:</a></p>\n<p><a href=\"http://www.hollischuang.com/archives/1144\" target=\"_blank\" rel=\"noopener\">&#x5355;&#x4F8B;&#x4E0E;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x90A3;&#x4E9B;&#x4E8B;&#x513F;</a><br><a href=\"https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/\" target=\"_blank\" rel=\"noopener\">Google Protocol Buffer &#x7684;&#x4F7F;&#x7528;&#x548C;&#x539F;&#x7406;</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjmdapdo30007ap9kb5mtdzsa","category_id":"cjmdapdoh000hap9kr9qxr2df","_id":"cjmdapdok000oap9kjnnx6h7w"},{"post_id":"cjmdapdnp0002ap9kxj9d7lwb","category_id":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdom000sap9kkk8p6c2c"},{"post_id":"cjmdapdnp0002ap9kxj9d7lwb","category_id":"cjmdapdoj000kap9k63nu0mf1","_id":"cjmdapdon000uap9kvpf8lifk"},{"post_id":"cjmdapdo50008ap9ko4d6sftu","category_id":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdon000xap9k5ko79l6v"},{"post_id":"cjmdapdo50008ap9ko4d6sftu","category_id":"cjmdapdoj000kap9k63nu0mf1","_id":"cjmdapdoo0010ap9khhxrm5ku"},{"post_id":"cjmdapdo8000bap9k3k084ki0","category_id":"cjmdapdoh000hap9kr9qxr2df","_id":"cjmdapdoo0012ap9k28z4oaci"},{"post_id":"cjmdapdnt0003ap9kbpd9tzic","category_id":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdor0016ap9ko5y03ncw"},{"post_id":"cjmdapdnt0003ap9kbpd9tzic","category_id":"cjmdapdon000wap9klk4jxsuk","_id":"cjmdapdor0018ap9kn4iytuyi"},{"post_id":"cjmdapdoa000cap9kfsdcadr0","category_id":"cjmdapdoh000hap9kr9qxr2df","_id":"cjmdapdos001bap9k1b2zbi2o"},{"post_id":"cjmdapdod000fap9kyd94qlgd","category_id":"cjmdapdoh000hap9kr9qxr2df","_id":"cjmdapdot001gap9kxw9lj7zf"},{"post_id":"cjmdapdo00006ap9kg8hi4ths","category_id":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdot001jap9kfrgh718l"},{"post_id":"cjmdapdo00006ap9kg8hi4ths","category_id":"cjmdapdoj000kap9k63nu0mf1","_id":"cjmdapdot001lap9kv1sjutsf"},{"post_id":"cjmdapdog000gap9k6j4cr7an","category_id":"cjmdapdos001fap9kznug5o92","_id":"cjmdapdou001nap9k14r4vz96"},{"post_id":"cjmdapdp60021ap9kuzscki1g","category_id":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdpc0027ap9knd5lc106"},{"post_id":"cjmdapdp60021ap9kuzscki1g","category_id":"cjmdapdpa0024ap9k0kl60m45","_id":"cjmdapdpd002aap9k4hkwl4dr"},{"post_id":"cjmdapdp80022ap9ksxmljt3e","category_id":"cjmdapdnw0004ap9knuvnn4v0","_id":"cjmdapdpd002cap9kvo558p0p"},{"post_id":"cjmdapdp80022ap9ksxmljt3e","category_id":"cjmdapdpa0024ap9k0kl60m45","_id":"cjmdapdpe002eap9kswivy7z7"}],"PostTag":[{"post_id":"cjmdapdnp0002ap9kxj9d7lwb","tag_id":"cjmdapdo00005ap9kojuiy688","_id":"cjmdapdoi000jap9ktye6t2x2"},{"post_id":"cjmdapdnp0002ap9kxj9d7lwb","tag_id":"cjmdapdo7000aap9kr0pbarfw","_id":"cjmdapdoj000lap9k6ja7a2w1"},{"post_id":"cjmdapdnp0002ap9kxj9d7lwb","tag_id":"cjmdapdod000eap9kv694beua","_id":"cjmdapdoj000nap9ktuq8gr0k"},{"post_id":"cjmdapdnt0003ap9kbpd9tzic","tag_id":"cjmdapdoi000iap9khaa1q2kv","_id":"cjmdapdon000vap9kbivalj5v"},{"post_id":"cjmdapdnt0003ap9kbpd9tzic","tag_id":"cjmdapdoj000map9k1shvy5lm","_id":"cjmdapdoo000yap9k6ke0gjai"},{"post_id":"cjmdapdnt0003ap9kbpd9tzic","tag_id":"cjmdapdol000qap9khoa7djsf","_id":"cjmdapdoo0011ap9kzcykdv7x"},{"post_id":"cjmdapdo00006ap9kg8hi4ths","tag_id":"cjmdapdo00005ap9kojuiy688","_id":"cjmdapdor0019ap9kdgbsoe13"},{"post_id":"cjmdapdo00006ap9kg8hi4ths","tag_id":"cjmdapdo7000aap9kr0pbarfw","_id":"cjmdapdos001cap9k5vf2g5wp"},{"post_id":"cjmdapdo00006ap9kg8hi4ths","tag_id":"cjmdapdod000eap9kv694beua","_id":"cjmdapdos001eap9kpff8wyi8"},{"post_id":"cjmdapdo30007ap9kb5mtdzsa","tag_id":"cjmdapdor0017ap9kvue62snj","_id":"cjmdapdot001iap9k09kfcloq"},{"post_id":"cjmdapdo30007ap9kb5mtdzsa","tag_id":"cjmdapdos001dap9kr1p1lxa4","_id":"cjmdapdot001kap9kobcoqc4t"},{"post_id":"cjmdapdo50008ap9ko4d6sftu","tag_id":"cjmdapdo00005ap9kojuiy688","_id":"cjmdapdou001pap9kcst8uu5v"},{"post_id":"cjmdapdo50008ap9ko4d6sftu","tag_id":"cjmdapdo7000aap9kr0pbarfw","_id":"cjmdapdou001qap9kirix2owl"},{"post_id":"cjmdapdo50008ap9ko4d6sftu","tag_id":"cjmdapdod000eap9kv694beua","_id":"cjmdapdov001sap9kyuhpv9ve"},{"post_id":"cjmdapdo8000bap9k3k084ki0","tag_id":"cjmdapdor0017ap9kvue62snj","_id":"cjmdapdow001uap9k3tl4s51n"},{"post_id":"cjmdapdo8000bap9k3k084ki0","tag_id":"cjmdapdov001rap9kxezpu4ad","_id":"cjmdapdow001vap9kjymj2tz9"},{"post_id":"cjmdapdoa000cap9kfsdcadr0","tag_id":"cjmdapdov001tap9k6u67njho","_id":"cjmdapdox001xap9kf99e8zkb"},{"post_id":"cjmdapdod000fap9kyd94qlgd","tag_id":"cjmdapdow001wap9kb47dchus","_id":"cjmdapdox001zap9kwq1vcmby"},{"post_id":"cjmdapdog000gap9k6j4cr7an","tag_id":"cjmdapdox001yap9klt1peo8a","_id":"cjmdapdoy0020ap9k0v6bbixx"},{"post_id":"cjmdapdp60021ap9kuzscki1g","tag_id":"cjmdapdpa0023ap9kghsy0kii","_id":"cjmdapdpc0029ap9kl03q3suc"},{"post_id":"cjmdapdp60021ap9kuzscki1g","tag_id":"cjmdapdpb0025ap9kh89zj4ay","_id":"cjmdapdpd002bap9koi1910ry"},{"post_id":"cjmdapdp80022ap9ksxmljt3e","tag_id":"cjmdapdpc0028ap9kpx1ewk3m","_id":"cjmdapdpg002hap9kmho4jdei"},{"post_id":"cjmdapdp80022ap9ksxmljt3e","tag_id":"cjmdapdpd002dap9k0o9ypn3w","_id":"cjmdapdpg002iap9kvsjur6ef"},{"post_id":"cjmdapdp80022ap9ksxmljt3e","tag_id":"cjmdapdpe002fap9k8x1qrf68","_id":"cjmdapdph002jap9ke7q8r1er"},{"post_id":"cjmdapdp80022ap9ksxmljt3e","tag_id":"cjmdapdpf002gap9kun9nv9nb","_id":"cjmdapdph002kap9kcznw9vsy"}],"Tag":[{"name":"读书笔记","_id":"cjmdapdo00005ap9kojuiy688"},{"name":"book:Scala for impatients","_id":"cjmdapdo7000aap9kr0pbarfw"},{"name":"scala","_id":"cjmdapdod000eap9kv694beua"},{"name":"Angular2","_id":"cjmdapdoi000iap9khaa1q2kv"},{"name":"Typings","_id":"cjmdapdoj000map9k1shvy5lm"},{"name":"nodeJs","_id":"cjmdapdol000qap9khoa7djsf"},{"name":"Tool","_id":"cjmdapdor0017ap9kvue62snj"},{"name":"Hexo","_id":"cjmdapdos001dap9kr1p1lxa4"},{"name":"evernote","_id":"cjmdapdov001rap9kxezpu4ad"},{"name":"hexo","_id":"cjmdapdov001tap9k6u67njho"},{"name":"swagger","_id":"cjmdapdow001wap9kb47dchus"},{"name":"思考","_id":"cjmdapdox001yap9klt1peo8a"},{"name":"java","_id":"cjmdapdpa0023ap9kghsy0kii"},{"name":"collection","_id":"cjmdapdpb0025ap9kh89zj4ay"},{"name":"tech","_id":"cjmdapdpc0028ap9kpx1ewk3m"},{"name":"Java","_id":"cjmdapdpd002dap9k0o9ypn3w"},{"name":"基础","_id":"cjmdapdpe002fap9k8x1qrf68"},{"name":"Serializable","_id":"cjmdapdpf002gap9kun9nv9nb"}]}}